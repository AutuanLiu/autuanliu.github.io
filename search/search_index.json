{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Amber Cottage \u6b22\u8fce\u6765\u5230\u6211\u7684\u5c0f\u5c4b \u2014\u2014\u2014\u2014 Amber Cottage \u7b80\u4ecb \u8fd9\u91cc\u662f\u6211\u5206\u4eab\u77e5\u8bc6\u4e0e\u7b14\u8bb0\u7684\u5c0f\u7a7a\u95f4, \u76ee\u524d\u6211\u6240\u5173\u6ce8\u7684\u9886\u57df\u4e3b\u8981\u6709: \u6570\u636e\u79d1\u5b66, \u673a\u5668\u5b66\u4e60, \u6df1\u5ea6\u5b66\u4e60 \u4e3b\u8981\u4f7f\u7528\u7684\u5de5\u5177\u4e0e\u6846\u67b6\u662f: PyTorch, TensorFlow, Scikit-Learn \u4e3b\u8981\u4f7f\u7528\u7684\u8bed\u8a00\u6709: Python, Matlab, R \u8bed\u8a00\u4e0e\u6846\u67b6\u867d\u6709\u5343\u5343\u4e07, \u4f46\u6211\u6240\u504f\u7231\u7684\u4ecd\u662f: PyTorch, Python(\u4eba\u751f\u82e6\u77ed, \u6211\u7528Python), \u867d\u7136\u522b\u7684\u4e00\u4e9b\u8bed\u8a00\u4e5f\u4f1a\u70b9, \u4f46\u662f\u771f\u6b63\u80fd\u591f\u7528\u6765\u79d1\u7814, \u63a2\u7d22\u7684\u4e5f\u975e Python \u83ab\u5c5e\u4e86 \u7406\u60f3 \u52b1\u5fd7\u6210\u4e3a\u4e00\u540d\u5408\u683c\u7684 \u6570\u636e\u79d1\u5b66\u5bb6 , \u4e0d\u6c42\u5728\u79d1\u7814\u4e0a\u6709\u591a\u4e48\u7684\u7a81\u51fa, \u53ea\u6c42\u80fd\u591f\u4e0d\u65ad\u5730\u7cbe\u8fdb\u6280\u672f \u73b0\u72b6 \u7406\u60f3\u5f88\u4e30\u6ee1, \u73b0\u5b9e\u5f88\u9aa8\u611f \u76ee\u524d, \u6211\u662f\u4e00\u540d\u5728\u8bfb\u7814\u7a76\u751f(\u7814\u4e00), \u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u4e13\u4e1a, \u6240\u7814\u7a76\u7684\u65b9\u5411\u4e3a \u96be\u6cbb\u6027\u766b\u75eb\u75c5\u7076\u7684\u7cbe\u786e\u5b9a\u4f4d \u96be\u6cbb\u6027\u766b\u75eb\u7684\u9884\u6d4b \u5f53\u7136, \u8981\u5b9e\u73b0\u7406\u60f3\u7684\u8def\u9014\u6bd5\u7adf\u5f88\u957f, \u5f88\u8fdc, \u6211\u5e0c\u671b\u80fd\u591f\u4e0d\u65ad\u5730\u903c\u8feb\u81ea\u5df1\u524d\u884c \u8054\u7cfb title info \u90ae\u7bb1 autuanliu@163.com GitHub https://github.com/AutuanLiu \u5b9d\u5251\u950b\u4ece\u78e8\u783a\u51fa, \u6885\u82b1\u9999\u81ea\u82e6\u5bd2\u6765","title":"Home"},{"location":"#amber-cottage","text":"\u6b22\u8fce\u6765\u5230\u6211\u7684\u5c0f\u5c4b \u2014\u2014\u2014\u2014 Amber Cottage","title":"Amber Cottage"},{"location":"#_1","text":"\u8fd9\u91cc\u662f\u6211\u5206\u4eab\u77e5\u8bc6\u4e0e\u7b14\u8bb0\u7684\u5c0f\u7a7a\u95f4, \u76ee\u524d\u6211\u6240\u5173\u6ce8\u7684\u9886\u57df\u4e3b\u8981\u6709: \u6570\u636e\u79d1\u5b66, \u673a\u5668\u5b66\u4e60, \u6df1\u5ea6\u5b66\u4e60 \u4e3b\u8981\u4f7f\u7528\u7684\u5de5\u5177\u4e0e\u6846\u67b6\u662f: PyTorch, TensorFlow, Scikit-Learn \u4e3b\u8981\u4f7f\u7528\u7684\u8bed\u8a00\u6709: Python, Matlab, R \u8bed\u8a00\u4e0e\u6846\u67b6\u867d\u6709\u5343\u5343\u4e07, \u4f46\u6211\u6240\u504f\u7231\u7684\u4ecd\u662f: PyTorch, Python(\u4eba\u751f\u82e6\u77ed, \u6211\u7528Python), \u867d\u7136\u522b\u7684\u4e00\u4e9b\u8bed\u8a00\u4e5f\u4f1a\u70b9, \u4f46\u662f\u771f\u6b63\u80fd\u591f\u7528\u6765\u79d1\u7814, \u63a2\u7d22\u7684\u4e5f\u975e Python \u83ab\u5c5e\u4e86","title":"\u7b80\u4ecb"},{"location":"#_2","text":"\u52b1\u5fd7\u6210\u4e3a\u4e00\u540d\u5408\u683c\u7684 \u6570\u636e\u79d1\u5b66\u5bb6 , \u4e0d\u6c42\u5728\u79d1\u7814\u4e0a\u6709\u591a\u4e48\u7684\u7a81\u51fa, \u53ea\u6c42\u80fd\u591f\u4e0d\u65ad\u5730\u7cbe\u8fdb\u6280\u672f","title":"\u7406\u60f3"},{"location":"#_3","text":"\u7406\u60f3\u5f88\u4e30\u6ee1, \u73b0\u5b9e\u5f88\u9aa8\u611f \u76ee\u524d, \u6211\u662f\u4e00\u540d\u5728\u8bfb\u7814\u7a76\u751f(\u7814\u4e00), \u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u4e13\u4e1a, \u6240\u7814\u7a76\u7684\u65b9\u5411\u4e3a \u96be\u6cbb\u6027\u766b\u75eb\u75c5\u7076\u7684\u7cbe\u786e\u5b9a\u4f4d \u96be\u6cbb\u6027\u766b\u75eb\u7684\u9884\u6d4b \u5f53\u7136, \u8981\u5b9e\u73b0\u7406\u60f3\u7684\u8def\u9014\u6bd5\u7adf\u5f88\u957f, \u5f88\u8fdc, \u6211\u5e0c\u671b\u80fd\u591f\u4e0d\u65ad\u5730\u903c\u8feb\u81ea\u5df1\u524d\u884c","title":"\u73b0\u72b6"},{"location":"#_4","text":"title info \u90ae\u7bb1 autuanliu@163.com GitHub https://github.com/AutuanLiu \u5b9d\u5251\u950b\u4ece\u78e8\u783a\u51fa, \u6885\u82b1\u9999\u81ea\u82e6\u5bd2\u6765","title":"\u8054\u7cfb"},{"location":"About/aboutme/","text":"About ME Info title info \u90ae\u7bb1 autuanliu@163.com GitHub https://github.com/AutuanLiu \u4e2a\u4eba\u4e3b\u9875 https://autuanliu.github.io \u5b66\u6821 \u4e1c\u5357\u5927\u5b66 \u65b9\u5411 \u6570\u636e\u79d1\u5b66 \u65b9\u5411 \u673a\u5668\u5b66\u4e60 \u65b9\u5411 \u6df1\u5ea6\u5b66\u4e60 \u65b9\u5411 \u533b\u5b66\u56fe\u50cf Motto \u5b9d\u5251\u950b\u4ece\u78e8\u783a\u51fa, \u6885\u82b1\u9999\u81ea\u82e6\u5bd2\u6765 2017/12/25","title":"AboutMe"},{"location":"About/aboutme/#about-me","text":"","title":"About ME"},{"location":"About/aboutme/#info","text":"title info \u90ae\u7bb1 autuanliu@163.com GitHub https://github.com/AutuanLiu \u4e2a\u4eba\u4e3b\u9875 https://autuanliu.github.io \u5b66\u6821 \u4e1c\u5357\u5927\u5b66 \u65b9\u5411 \u6570\u636e\u79d1\u5b66 \u65b9\u5411 \u673a\u5668\u5b66\u4e60 \u65b9\u5411 \u6df1\u5ea6\u5b66\u4e60 \u65b9\u5411 \u533b\u5b66\u56fe\u50cf","title":"Info"},{"location":"About/aboutme/#motto","text":"\u5b9d\u5251\u950b\u4ece\u78e8\u783a\u51fa, \u6885\u82b1\u9999\u81ea\u82e6\u5bd2\u6765 2017/12/25","title":"Motto"},{"location":"About/license/","text":"MIT License Copyright (c) 2017 AutuanLiu Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"Blog/Bayesian/","text":"\u8d1d\u53f6\u65af\u601d\u60f3 f(x)=\\sin(x) f(x)=\\sin(x)","title":"\u8d1d\u53f6\u65af\u601d\u60f3"},{"location":"Blog/Bayesian/#_1","text":"f(x)=\\sin(x) f(x)=\\sin(x)","title":"\u8d1d\u53f6\u65af\u601d\u60f3"},{"location":"Blog/Iterator/","text":"Python \u968f\u7b14 \u8fed\u4ee3\u5668 \u8fed\u4ee3\u5668\u5bf9\u8c61\u8981\u6c42\u652f\u6301\u8fed\u4ee3\u5668\u534f\u8bae\u7684\u5bf9\u8c61\uff0c\u5728 Python \u4e2d\uff0c\u652f\u6301\u8fed\u4ee3\u5668\u534f\u8bae\u5c31\u662f\u5b9e\u73b0\u5bf9\u8c61\u7684 __iter__() \u548c next() \u65b9\u6cd5\u3002 \u5176\u4e2d __iter__() \u65b9\u6cd5\u8fd4\u56de\u8fed\u4ee3\u5668\u5bf9\u8c61\u672c\u8eab\uff1b next() \u65b9\u6cd5\u8fd4\u56de\u5bb9\u5668\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5728\u7ed3\u5c3e\u65f6\u5f15\u53d1 StopIteration \u5f02\u5e38 \u5bf9\u4e8e\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528\u5185\u5efa\u51fd\u6570 iter() \u6765\u83b7\u53d6\u5b83\u7684\u8fed\u4ee3\u5668\u5bf9\u8c61 \u5f53\u6211\u4eec\u4f7f\u7528 for \u8bed\u53e5\u7684\u65f6\u5019\uff0c for \u8bed\u53e5\u5c31\u4f1a\u81ea\u52a8\u7684\u901a\u8fc7 __iter__() \u65b9\u6cd5\u6765\u83b7\u5f97\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u5e76\u4e14\u901a\u8fc7 next() \u65b9\u6cd5\u6765\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20 \u81ea\u5b9a\u4e49\u8fed\u4ee3\u5668 class MyRange(object): def __init__(self, n): self.idx = 0 self.n = n def __iter__(self): return self def next(self): if self.idx < self.n: val = self.idx self.idx += 1 return val else: raise StopIteration() # test example >>> myRange = MyRange(3) >>> for i in myRange: ... print i \u5bf9\u4e8e\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u5982\u679c\u5b83\u672c\u8eab\u53c8\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u5c31\u6ca1\u6709\u529e\u6cd5\u652f\u6301\u591a\u6b21\u8fed\u4ee3 \u53ef\u4ee5\u5206\u522b\u5b9a\u4e49 \u53ef\u8fed\u4ee3\u7c7b\u578b\u5bf9\u8c61 \u548c \u8fed\u4ee3\u5668\u7c7b\u578b\u5bf9\u8c61 \uff1b\u7136\u540e\u53ef\u8fed\u4ee3\u7c7b\u578b\u5bf9\u8c61\u7684 __iter__() \u65b9\u6cd5\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u8fed\u4ee3\u5668\u7c7b\u578b\u7684\u5bf9\u8c61 class Zrange: def __init__(self, n): self.n = n def __iter__(self): return ZrangeIterator(self.n) class ZrangeIterator: def __init__(self, n): self.i = 0 self.n = n def __iter__(self): return self def next(self): if self.i < self.n: i = self.i self.i += 1 return i else: raise StopIteration() # test example zrange = Zrange(3) print([i for i in zrange]) print([i for i in zrange]) \u6240\u4ee5 \u4e00\u822c\u60c5\u51b5\u4e0b \u8fd9\u4e24\u8005\u90fd\u662f\u5206\u5f00\u5b9a\u4e49\u7684 \u751f\u6210\u5668 \u5728Python\u4e2d\uff0c\u4f7f\u7528\u751f\u6210\u5668\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u652f\u6301\u8fed\u4ee3\u5668\u534f\u8bae\u3002\u751f\u6210\u5668\u901a\u8fc7\u751f\u6210\u5668\u51fd\u6570\u4ea7\u751f\uff0c\u751f\u6210\u5668\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u5e38\u89c4\u7684def\u8bed\u53e5\u6765\u5b9a\u4e49\uff0c\u4f46\u662f\u4e0d\u7528return\u8fd4\u56de\uff0c\u800c\u662f\u7528yield\u4e00\u6b21\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\uff0c\u5728\u6bcf\u4e2a\u7ed3\u679c\u4e4b\u95f4\u6302\u8d77\u548c\u7ee7\u7eed\u5b83\u4eec\u7684\u72b6\u6001\uff0c\u6765\u81ea\u52a8\u5b9e\u73b0\u8fed\u4ee3\u534f\u8bae def Zrange(n): i = 0 while i < n: yield i i += 1 # test example zrange = Zrange(3) print([i for i in zrange]) \u751f\u6210\u5668\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7for\u8bed\u53e5\u8fdb\u884c\u8fed\u4ee3\u8bbf\u95ee \u5f53\u8c03\u7528\u751f\u6210\u5668\u51fd\u6570\u7684\u65f6\u5019\uff0c\u51fd\u6570\u53ea\u662f\u8fd4\u56de\u4e86\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61\uff0c\u5e76\u6ca1\u6709 \u6267\u884c \u5f53next()\u65b9\u6cd5\u7b2c\u4e00\u6b21\u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0c\u751f\u6210\u5668\u51fd\u6570\u624d\u5f00\u59cb\u6267\u884c\uff0c\u6267\u884c\u5230yield\u8bed\u53e5\u5904\u505c\u6b62 next()\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u5c31\u662fyield\u8bed\u53e5\u5904\u7684\u53c2\u6570\uff08yielded value\uff09 \u5f53\u7ee7\u7eed\u8c03\u7528next()\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u51fd\u6570\u5c06\u63a5\u7740\u4e0a\u4e00\u6b21\u505c\u6b62\u7684yield\u8bed\u53e5\u5904\u7ee7\u7eed\u6267\u884c\uff0c\u5e76\u5230\u4e0b\u4e00\u4e2ayield\u5904\u505c\u6b62\uff1b\u5982\u679c\u540e\u9762\u6ca1\u6709yield\u5c31\u629b\u51faStopIteration\u5f02\u5e38","title":"Python \u968f\u7b1401"},{"location":"Blog/Iterator/#python","text":"","title":"Python \u968f\u7b14"},{"location":"Blog/Iterator/#_1","text":"\u8fed\u4ee3\u5668\u5bf9\u8c61\u8981\u6c42\u652f\u6301\u8fed\u4ee3\u5668\u534f\u8bae\u7684\u5bf9\u8c61\uff0c\u5728 Python \u4e2d\uff0c\u652f\u6301\u8fed\u4ee3\u5668\u534f\u8bae\u5c31\u662f\u5b9e\u73b0\u5bf9\u8c61\u7684 __iter__() \u548c next() \u65b9\u6cd5\u3002 \u5176\u4e2d __iter__() \u65b9\u6cd5\u8fd4\u56de\u8fed\u4ee3\u5668\u5bf9\u8c61\u672c\u8eab\uff1b next() \u65b9\u6cd5\u8fd4\u56de\u5bb9\u5668\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5728\u7ed3\u5c3e\u65f6\u5f15\u53d1 StopIteration \u5f02\u5e38 \u5bf9\u4e8e\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528\u5185\u5efa\u51fd\u6570 iter() \u6765\u83b7\u53d6\u5b83\u7684\u8fed\u4ee3\u5668\u5bf9\u8c61 \u5f53\u6211\u4eec\u4f7f\u7528 for \u8bed\u53e5\u7684\u65f6\u5019\uff0c for \u8bed\u53e5\u5c31\u4f1a\u81ea\u52a8\u7684\u901a\u8fc7 __iter__() \u65b9\u6cd5\u6765\u83b7\u5f97\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u5e76\u4e14\u901a\u8fc7 next() \u65b9\u6cd5\u6765\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20","title":"\u8fed\u4ee3\u5668"},{"location":"Blog/Iterator/#_2","text":"class MyRange(object): def __init__(self, n): self.idx = 0 self.n = n def __iter__(self): return self def next(self): if self.idx < self.n: val = self.idx self.idx += 1 return val else: raise StopIteration() # test example >>> myRange = MyRange(3) >>> for i in myRange: ... print i \u5bf9\u4e8e\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u5982\u679c\u5b83\u672c\u8eab\u53c8\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u5c31\u6ca1\u6709\u529e\u6cd5\u652f\u6301\u591a\u6b21\u8fed\u4ee3 \u53ef\u4ee5\u5206\u522b\u5b9a\u4e49 \u53ef\u8fed\u4ee3\u7c7b\u578b\u5bf9\u8c61 \u548c \u8fed\u4ee3\u5668\u7c7b\u578b\u5bf9\u8c61 \uff1b\u7136\u540e\u53ef\u8fed\u4ee3\u7c7b\u578b\u5bf9\u8c61\u7684 __iter__() \u65b9\u6cd5\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u8fed\u4ee3\u5668\u7c7b\u578b\u7684\u5bf9\u8c61 class Zrange: def __init__(self, n): self.n = n def __iter__(self): return ZrangeIterator(self.n) class ZrangeIterator: def __init__(self, n): self.i = 0 self.n = n def __iter__(self): return self def next(self): if self.i < self.n: i = self.i self.i += 1 return i else: raise StopIteration() # test example zrange = Zrange(3) print([i for i in zrange]) print([i for i in zrange]) \u6240\u4ee5 \u4e00\u822c\u60c5\u51b5\u4e0b \u8fd9\u4e24\u8005\u90fd\u662f\u5206\u5f00\u5b9a\u4e49\u7684","title":"\u81ea\u5b9a\u4e49\u8fed\u4ee3\u5668"},{"location":"Blog/Iterator/#_3","text":"\u5728Python\u4e2d\uff0c\u4f7f\u7528\u751f\u6210\u5668\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u652f\u6301\u8fed\u4ee3\u5668\u534f\u8bae\u3002\u751f\u6210\u5668\u901a\u8fc7\u751f\u6210\u5668\u51fd\u6570\u4ea7\u751f\uff0c\u751f\u6210\u5668\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u5e38\u89c4\u7684def\u8bed\u53e5\u6765\u5b9a\u4e49\uff0c\u4f46\u662f\u4e0d\u7528return\u8fd4\u56de\uff0c\u800c\u662f\u7528yield\u4e00\u6b21\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\uff0c\u5728\u6bcf\u4e2a\u7ed3\u679c\u4e4b\u95f4\u6302\u8d77\u548c\u7ee7\u7eed\u5b83\u4eec\u7684\u72b6\u6001\uff0c\u6765\u81ea\u52a8\u5b9e\u73b0\u8fed\u4ee3\u534f\u8bae def Zrange(n): i = 0 while i < n: yield i i += 1 # test example zrange = Zrange(3) print([i for i in zrange]) \u751f\u6210\u5668\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7for\u8bed\u53e5\u8fdb\u884c\u8fed\u4ee3\u8bbf\u95ee \u5f53\u8c03\u7528\u751f\u6210\u5668\u51fd\u6570\u7684\u65f6\u5019\uff0c\u51fd\u6570\u53ea\u662f\u8fd4\u56de\u4e86\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61\uff0c\u5e76\u6ca1\u6709 \u6267\u884c \u5f53next()\u65b9\u6cd5\u7b2c\u4e00\u6b21\u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0c\u751f\u6210\u5668\u51fd\u6570\u624d\u5f00\u59cb\u6267\u884c\uff0c\u6267\u884c\u5230yield\u8bed\u53e5\u5904\u505c\u6b62 next()\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u5c31\u662fyield\u8bed\u53e5\u5904\u7684\u53c2\u6570\uff08yielded value\uff09 \u5f53\u7ee7\u7eed\u8c03\u7528next()\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u51fd\u6570\u5c06\u63a5\u7740\u4e0a\u4e00\u6b21\u505c\u6b62\u7684yield\u8bed\u53e5\u5904\u7ee7\u7eed\u6267\u884c\uff0c\u5e76\u5230\u4e0b\u4e00\u4e2ayield\u5904\u505c\u6b62\uff1b\u5982\u679c\u540e\u9762\u6ca1\u6709yield\u5c31\u629b\u51faStopIteration\u5f02\u5e38","title":"\u751f\u6210\u5668"},{"location":"Blog/matplotlib/","text":"matplotlib","title":"matplotlib-Object-oriented"},{"location":"Blog/matplotlib/#matplotlib","text":"","title":"matplotlib"},{"location":"Blog/ml/","text":"gradient descent \u666e\u901a \u68af\u5ea6\u4e0b\u964d\u662f\u770b\u5230\u6240\u6709\u7684 examples \u540e\u66f4\u65b0\u4e00\u6b21 \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u662f\u770b\u5230\u4e00\u4e2a example \u5c31\u66f4\u65b0\u4e00\u6b21, \u6240\u4ee5\u5f80\u5f80\u4f1a\u6709\u66f4\u5feb\u7684\u901f\u5ea6","title":"\u673a\u5668\u5b66\u4e60\u968f\u7b1401:"},{"location":"Blog/ml/#gradient-descent","text":"\u666e\u901a \u68af\u5ea6\u4e0b\u964d\u662f\u770b\u5230\u6240\u6709\u7684 examples \u540e\u66f4\u65b0\u4e00\u6b21 \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u662f\u770b\u5230\u4e00\u4e2a example \u5c31\u66f4\u65b0\u4e00\u6b21, \u6240\u4ee5\u5f80\u5f80\u4f1a\u6709\u66f4\u5feb\u7684\u901f\u5ea6","title":"gradient descent"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/","text":"\u63a2\u7d22\u6027\u6570\u636e\u5206\u6790 author: autuanliu email: autuanliu@163.com date: 2017/11/30 \u8981\u70b9 \u6574\u4f53\u89c2\u5bdf How many observations do I have? How many features? What are the data types of my features? Are they numeric? Categorical? Do I have a target variable? \u6570\u503c\u7279\u5f81\u7684\u5206\u5e03 histogram \u5f80\u5f80\u662f\u6700\u6709\u6548\u7684 \u6f5c\u5728\u7684 \u79bb\u7fa4\u503c \u662f\u6ca1\u6709\u610f\u4e49\u7684 \u8fb9\u754c\u6ca1\u6709\u610f\u4e49 \u6f5c\u5728\u7684\u6d4b\u91cf\u9519\u8bef \u8bb0\u4e0b\u60f3\u8981\u505a\u7684\u4fee\u590d \u5206\u7c7b\u7279\u5f81\u7684\u5206\u5e03 bar plot \u662f\u6709\u6548\u7684 \u53ef\u4ee5\u6e05\u695a\u770b\u5230 \u7a00\u758f\u7c7b\u522b \u8fd9\u91cc\u7684 \u7a00\u758f\u7c7b\u522b \u662f\u5173\u952e\uff0c\u5b83\u5c11\u5219\u4e0d\u5f71\u54cd\u6211\u4eec\u7684\u6a21\u578b\uff0c\u91cd\u5219\u5bfc\u81f4\u8fc7\u62df\u5408\uff0c\u8fd9\u4e2a\u4e00\u5b9a\u8981\u8bb0\u4e0b\u6765\uff08\u91cd\u65b0\u7ec4\u5408\u6216\u8005\u91cd\u65b0\u5206\u914d\uff09 segmentation \u5206\u5272 segmentation \u662f\u89c2\u5bdf \u5206\u7c7b\u7279\u5f81 \u4e0e \u6570\u503c\u7279\u5f81 \u7684\u6700\u6709\u6548\u7684\u65b9\u5f0f Box plot \u662f\u5408\u9002\u7684 \u8fd9\u91cc\u7684\u5206\u6790\u5bf9 \u8bc4\u4f30\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b \u5f88\u91cd\u8981 \u76f8\u5173\u6027\u5206\u6790 \u76f8\u5173\u6027\u5206\u6790 \u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u770b\u5230\u4e24\u4e2a\u6570\u503c\u7279\u5f81\u4e4b\u95f4\u7684\u5173\u7cfb \u76f8\u5173\u6027 heatmaps \u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff08\u6240\u6709\u7684\u6570\u503c\u90fd\u8981\u653e\u5927 100 \u500d\uff09 \u5173\u952e\u8981\u5206\u6790\uff0c\u54ea\u4e00\u4e2a\u7279\u5f81\u548ctarget\u6709\u5f88\u5f3a\u70c8\u7684\u76f8\u5173\u5173\u7cfb \u662f\u5426\u6709\u4e24\u4e2a\u7279\u5f81\u5b58\u5728\u7740\u610f\u5916\u7684\u6216\u8005\u5f3a\u70c8\u7684\u76f8\u5173\u5173\u7cfb \u6570\u636e\u6e05\u6d17 Better data beats fancier algorithms \u5728\u8fd9\u5757\u513f\u82b1\u8d39\u66f4\u591a\u65f6\u95f4\u662f\u5408\u7406\u7684 \u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u9700\u8981\u4e0d\u540c\u7c7b\u578b\u7684\u6e05\u6d17\u65b9\u6cd5 \u5220\u9664\u91cd\u590d\u7684\u6216\u8005\u65e0\u5173\u7684\u6570\u636e \u91cd\u590d\u6570\u636e\uff1a \u5408\u5e76\u6765\u81ea\u591a\u4e2a\u5730\u65b9\u7684\u6570\u636e\u96c6 \u4ece\u5ba2\u6237\u6216\u8005\u5176\u4ed6\u5730\u65b9\u63a5\u53d7\u7684\u6570\u636e \u62fc\u51d1\u7684\u6570\u636e \u65e0\u5173\u6570\u636e\uff1a \u63a2\u7d22\u6027\u5206\u6790\u7684\u5185\u5bb9 \u7ed3\u6784\u9519\u8bef \u6570\u636e\u6d4b\u91cf\uff0c\u6570\u636e\u4f20\u8f93\u4e2d\u51fa\u73b0\u7684\u9519\u8bef \u62fc\u5199\u9519\u8bef\u6216\u8005\u4e0d\u4e00\u81f4\u7684\u5927\u5c0f\u5199 \u8fd9\u53ef\u4ee5\u4ece \u5206\u7c7b\u6570\u636e\u7684\u6761\u5f62\u56fe \u4e2d\u5f88\u5bb9\u6613\u770b\u51fa\u6765 \u6807\u8bb0\u9519\u8bef \u5982 IT \u548c Information Technology \u5e94\u8be5\u662f\u4e00\u4e2a\u610f\u601d \u79bb\u7fa4\u503c \u7ebf\u6027\u56de\u5f52\u6a21\u578b\u5bf9\u79bb\u7fa4\u503c\u5f88\u654f\u611f\uff0c\u800c\u51b3\u7b56\u6811\u76f8\u5bf9\u597d\u4e00\u70b9 \u5982\u679c\u6709 \u5408\u7406\u7684\u7406\u7531 \u53bb\u9664\u5f02\u5e38\u503c\uff0c\u5c06\u662f\u975e\u5e38\u597d\u7684 \u4e0d\u80fd\u56e0\u4e3a\u662f \u79bb\u7fa4\u503c \u5c31\u76f2\u76ee\u7684\u5220\u9664\uff0c\u6216\u8bb8\uff0c\u5b83\u53ef\u4ee5\u63d0\u4f9b\u5f88\u591a\u6709\u7528\u7684\u4fe1\u606f \u5220\u9664\u6570\u636e\u5fc5\u987b\u8981\u6709\u7406\u7531\uff0c\u4f8b\u5982\uff0c \u975e\u771f\u5b9e\u6570\u636e\u7684\u53ef\u80fd\u6027 \u7f3a\u5931\u503c \u4e0d\u80fd\u7b80\u5355\u5730\u5ffd\u7565\u6570\u636e\u96c6\u4e2d\u7684\u7f3a\u5931\u503c \u5e38\u89c1\u505a\u6cd5\uff08\u4e22\u5f03\u6216\u8005\u63d2\u503c\uff09\uff1a \u4e8b\u5b9e\u4e0a\u8fd9\u662f\u5f88\u4e0d\u660e\u667a\u7684 \u4e22\u5931\u7f3a\u5931\u503c\u6bd4\u63d2\u503c\u6709\u65f6\u5019\u66f4\u6709\u6548 \u5c3d\u53ef\u80fd\u7684\u544a\u8bc9\u7b97\u6cd5\uff1a\u7f3a\u5931\u4e86\u6570\u636e\uff0c\u56e0\u4e3a\u6570\u636e\u7f3a\u5931\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u4fe1\u606f \u7f3a\u5931\u5206\u7c7b\u6570\u636e \u76f4\u63a5\u6807\u8bb0\u4e3a\u201c\u7f3a\u5931\u201d\uff0c\u5373\u65b0\u6dfb\u52a0\u4e00\u4e2a\u7c7b\u522b \u540c\u65f6\u4e5f\u8fbe\u5230\u4e86\u6ca1\u6709\u7f3a\u5931\u503c\u7684\u8981\u6c42 \u7f3a\u5931\u6570\u503c\u6570\u636e \u6807\u8bb0\u5e76\u4e14\u586b\u5145\u503c \u5c06\u89c2\u5bdf\u7ed3\u679c\u6807\u8bb0\u4e3a\u7f3a\u5931\u7684\u6307\u793a\u53d8\u91cf \u7528 0 \u586b\u5145\u539f\u6765\u7684\u7f3a\u5931\u503c\uff08\u6ee1\u8db3\u6ca1\u6709\u7f3a\u5931\u503c\u7684\u8981\u6c42\uff09 \u8fd9\u6837\u7684\u6807\u8bb0\u548c\u586b\u5145\u624b\u6cd5\u53ef\u4ee5\u8ba9\u7b97\u6cd5\u4f30\u8ba1\u7f3a\u5931\u7684\u6700\u4f73\u5e38\u91cf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4f7f\u7528\u5e73\u5747\u503c\u8fdb\u884c\u586b\u5145 \u76f4\u63a5\u4e22\u5f03\u6216\u8005\u63d2\u503c \u90fd\u662f\u6b21\u4f18\u7684\u65b9\u6848\uff08\u7f3a\u5931\u540c\u6837\u662f\u4fe1\u606f\uff0c\u6240\u4ee5\u6700\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u6807\u8bb0\u7684\u65b9\u6cd5\uff0c\u5e76\u8ba9\u7b97\u6cd5\u81ea\u5df1\u53bb\u7ed9\u51fa\u7f3a\u5931\u503c\uff09 \u7279\u5f81\u5de5\u7a0b \u7279\u5f81\u5de5\u7a0b\u662f\u4ece\u5df2\u77e5\u7684\u6570\u636e\u4e2d \u521b\u5efa\u65b0\u7684\u7279\u5f81 \u4f5c\u4e3a\u8f93\u5165 \u6570\u636e\u6e05\u6d17\u662f\u4e00\u4e2a \u51cf \u7684\u8fc7\u7a0b\u800c\u7279\u5f81\u5de5\u7a0b\u662f\u4e00\u4e2a \u52a0 \u7684\u8fc7\u7a0b \u4ea4\u4e92\u9879 \u662f\u5426\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a \u5177\u6709\u76f8\u4e92\u4f5c\u7528\u7684\u7279\u5f81 \uff0c\u4ed6\u4eec\u662f\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u7279\u5f81\u7684\u7ec4\u5408\uff08\u5373\u662f\u4e00\u4e2a \u4ea4\u4e92\u9879 \uff0c\u53ef\u4ee5\u662f\u4e24\u4e2a\u53d8\u91cf\u7684 \u4e58\u79ef\uff0c\u548c\u6216\u8005\u5dee\uff09 \u5e94\u8be5\u8be2\u95ee\u81ea\u5df1\u201c\u6211\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7ec4\u5408\u8d77\u6765\u4ee5\u671f\u671b\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u5417\uff1f\u201d \u4f8b\u5982\uff0c\u5b66\u6821\u6570\u91cf\u548c\u5b66\u6821\u8d28\u91cf\u4e24\u4e2a\u53d8\u91cf\uff08\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e24\u4e2a\u53d8\u91cf\u505a\u4e00\u4e2a\u8bc4\u5206\uff0c\u90a3\u4e48\u7ed3\u679c\u662f\u5426\u4f1a\u66f4\u52a0\u6709\u6548\u5462\uff1f\uff09 \u7a00\u758f\u7c7b\u522b \u6bcf\u4e2a\u7c7b\u522b\u81f3\u5c11\u6709 50 \u4e2a\u6570\u636e\uff0c\u5f53\u7136\u8fd9\u4e5f\u53d6\u51b3\u4e8e\u6570\u636e\u96c6\u7684\u5927\u5c0f\u548c\u5176\u5b83\u7279\u5f81\u6570\u91cf \u5c06 \u76f8\u4f3c\u7684\u7c7b\u522b\u5f52\u4e3a\u4e00\u4e2a\u7c7b \u5c06 \u5176\u5b83\u7684\u6570\u636e\u91cf\u6bd4\u8f83\u5c11\u7684\u7c7b\u522b\u5f52\u5c5e\u4e3a\u4e00\u4e2a other \u7c7b ++ \u8fd9\u91cc\u7684 missing \u662f\u4e00\u4e2a \u5355\u72ec\u7684\u7c7b\uff08\u5206\u7c7b\u6570\u636e\uff09 ++ \u865a\u62df\u53d8\u91cf \u5f88\u591a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5 \u4e0d\u80fd\u76f4\u63a5\u5904\u7406\u5206\u7c7b\u6570\u636e\uff0c\u5c24\u5176\u662f\u6587\u672c\u503c \uff0c ++\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5206\u7c7b\u7279\u5f81\u521b\u5efa \u865a\u62df\u53d8\u91cf++ \u865a\u62df\u53d8\u91cf\uff080,1\uff09\u7b49\uff0c\u6bcf\u4e2a\u503c\u4ee3\u8868\u5355\u4e00\u7684 \u5206\u7c7b\u53d8\u91cf\u503c \u5c3d\u53ef\u80fd\u591a\u7684\u5f15\u5165 \u6307\u793a\u53d8\u91cf\uff0c\u8fd9\u5c06\u4f1a\u7b80\u5316\u96be\u5ea6\uff08\u5206\u7c7b\u53d8\u91cf\u4ee5\u6709\u7f3a\u5931\u503c\u7684\u60c5\u51b5\u4e0b\uff09 \u5220\u9664\u6ca1\u6709\u4f7f\u7528\u6216\u8005 \u5197\u4f59\u7684 \u7279\u5f81 \u672a\u4f7f\u7528\u7684\u7279\u5f81 ID \u5217 \u4e0e\u9884\u6d4b\u65e0\u5173 \u5176\u5b83\u6587\u672c\u4fe1\u606f \u5197\u4f59\u7279\u5f81 \u53ef\u4ee5\u6709\u5176\u5b83\u7684\u7279\u5f81\u4ee3\u66ff \u7b97\u6cd5\u9009\u62e9 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7 \u7ebf\u6027\u6a21\u578b\uff08\u4e0d\u53ef\u4ee5\u8868\u8fbe\u975e\u7ebf\u6027\u5173\u7cfb\uff1b\u5bf9\u79bb\u7fa4\u503c\u654f\u611f\uff1b\u6ca1\u6709\u5b66\u5230\u5e95\u5c42\u6a21\u578b\u6307\u793a\u5b66\u5230\u4e86\u8bad\u7ec3\u96c6\u7684\u566a\u58f0\uff09 \u6b63\u5219\u5f27\u662f\u4e00\u79cd \u901a\u8fc7\u4eba\u4e3a\u60e9\u7f5a\u6a21\u578b\u7cfb\u6570 \u6765\u9632\u6b62\u8fc7\u5ea6\u62df\u5408 \u53ef\u4ee5\u9632\u6b62\u7cfb\u6570\u8fc7\u5927 \u4e5f\u53ef\u4ee5\u5b8c\u5168\u79fb\u9664\u7cfb\u6570\uff08\u6b63\u5219\u9879\u4e3a0\uff09 \u60e9\u7f5a\u7684\u5f3a\u5ea6\u662f\u53ef\u4ee5 \u8c03\u6574\u7684 \u6b63\u5219\u5316\u56de\u5f52 Lasso \u56de\u5f52 \u60e9\u7f5a\u7cfb\u6570\u7684 \u7edd\u5bf9\u5927\u5c0f \u53ef\u80fd\u5bfc\u81f4\u7cfb\u6570\u4e3a 0 \u5177\u6709 \u81ea\u52a8\u7279\u5f81\u9009\u62e9 \u7684\u529f\u80fd \u60e9\u7f5a\u5f3a\u5ea6\u5e94\u8be5\u662f\u53ef\u8c03\u8282\u7684 \u66f4\u5f3a\u7684\u60e9\u7f5a\u5fc5\u7136\u5bfc\u81f4\u5927\u91cf\u7cfb\u6570\u4e3a 0 Ridgo \u56de\u5f52 \u60e9\u7f5a\u7cfb\u6570\u7684 \u5e73\u65b9\u5927\u5c0f \u4f7f\u7cfb\u6570\u53d8\u5c0f\uff0c\u4f46\u4e0d\u4f1a\u4e3a 0 \u5cad\u56de\u5f52 \u5177\u6709\u4f7f \u7279\u5f81\u6536\u7f29 \u7684\u529f\u80fd Elastic-Net Lasso \u548c Ridgo \u7684\u4e00\u79cd\u6298\u4e2d \u60e9\u7f5a\u7cfb\u6570\u7684 \u7edd\u5bf9\u5927\u5c0f\u548c\u5e73\u65b9\u5927\u5c0f \u7684\u7ec4\u5408 mix \u4e24\u79cd\u60e9\u7f5a\u4e4b\u95f4\u7684\u7cfb\u6570 \u662f\u53ef\u4ee5\u8c03\u8282\u7684 \u603b\u5f3a\u5ea6\u4e5f\u662f\u53ef\u4ee5\u8c03\u8282\u7684 \u51b3\u7b56\u6811 \u7531\u4e8e \u51b3\u7b56\u6811 \u7684\u5206\u652f\u7ed3\u6784\uff0c\u51b3\u7b56\u6811\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u6784\u5efa \u975e\u7ebf\u6027\u5173\u7cfb \u4e0d\u53d7\u7ea6\u675f \u7684\u51b3\u7b56\u6811 \u5f88\u5bb9\u6613 \u8fc7\u62df\u5408 \u96c6\u6210\u5b66\u4e60 bagging \u8bd5\u56fe \u964d\u4f4e \u590d\u6742\u6a21\u578b\u8fc7\u62df\u5408\u7684\u98ce\u9669 It trains a large number of \"strong\" learners in parallel. A strong learner is a model that's relatively unconstrained. Bagging then combines all the strong learners together in order to \"smooth out\" their predictions. Boosting \u65b9\u6cd5 \u8bd5\u56fe\u589e\u52a0\u7b80\u5355\u6a21\u578b\u7684\u9884\u6d4b\u7075\u6d3b\u6027 It trains a large number of \"weak\" learners in sequence. A weak learner is a constrained model (i.e. you could limit the max depth of each decision tree). Each one in the sequence focuses on learning from the mistakes of the one before it. Boosting then combines all the weak learners into a single strong learner. Bagging \u548c Boosting \u90fd\u662f\u96c6\u6210\u5b66\u4e60\u7684\u65b9\u6cd5\uff0c\u4f46\u4ed6\u4eec\u5374\u4ece\u76f8\u53cd\u7684\u65b9\u5411\u6765\u89e3\u51b3\u95ee\u9898\u3002Bagging \u4f7f\u7528\u590d\u6742\u7684\u57fa\u672c\u6a21\u578b\uff0c\u5e76\u8bd5\u56fe\u201c\u5e73\u6ed1\u201d\u4ed6\u4eec\u7684\u9884\u6d4b\uff0c\u800c Boosting \u4f7f\u7528\u7b80\u5355\u7684\u57fa\u672c\u6a21\u578b\uff0c\u5e76\u8bd5\u56fe\u201c\u63d0\u9ad8\u201d\u603b\u4f53\u7684\u590d\u6742\u6027 \u5f53 \u57fa\u672c\u7684\u6a21\u578b\u662f \u51b3\u7b56\u6811 \u7684\u65f6\u5019\uff0cBagging \u96c6\u6210\u548c Boosting \u96c6\u6210 \u5206\u522b\u53eb\u505a random forests and boosted trees \u968f\u673a\u68ee\u6797 \u968f\u673a\u68ee\u6797\u6709\u4e24\u4e2a\u201c\u968f\u673a\u6027\u201d\u6765\u6e90\uff1a \u6bcf\u68f5\u6811\u53ea\u5141\u8bb8\u4ece\u4e00\u4e2a\u968f\u673a\u7684\u7279\u5f81\u5b50\u96c6\u4e2d\u8fdb\u884c\u5206\u5272\uff08\u5bfc\u81f4\u7279\u5f81\u9009\u62e9\uff09 \u6bcf\u68f5\u6811\u53ea\u5728\u4e00\u4e2a\u968f\u673a\u7684\u89c2\u5bdf\u5b50\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff08\u4e00\u4e2a\u79f0\u4e3a\u91cd\u91c7\u6837\u7684\u8fc7\u7a0b\uff09 \u5728\u5b9e\u8df5\u4e2d\uff0c\u968f\u673a\u68ee\u6797\u5f80\u5f80\u8868\u73b0\u975e\u5e38\u597d\uff0c\u5f00\u7bb1\u5373\u7528 \u4ed6\u4eec\u7ecf\u5e38\u51fb\u8d25\u9700\u8981\u51e0\u4e2a\u661f\u671f\u624d\u80fd\u5efa\u7acb\u8d77\u6765\u7684\u8bb8\u591a\u5176\u4ed6\u6a21\u578b \u4ed6\u4eec\u662f\u5b8c\u7f8e\u7684\u201c\u745e\u58eb\u519b\u5200\u201d\u7b97\u6cd5\uff0c\u51e0\u4e4e\u603b\u80fd\u83b7\u5f97\u597d\u7684\u7ed3\u679c \u4ed6\u4eec\u6ca1\u6709\u5f88\u591a\u590d\u6742\u7684\u53c2\u6570\u6765\u8c03\u6574 Boosted tree \u6bcf\u68f5\u6811\u7684\u6700\u5927\u6df1\u5ea6\u53ef\u4ee5\u88ab\u8c03\u6574\u3002 \u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u68f5\u6811\u90fd\u4f1a\u5c1d\u8bd5\u7ea0\u6b63\u4e4b\u524d\u90a3\u68f5\u6811\u7684\u9884\u6d4b\u9519\u8bef \u5728\u5b9e\u8df5\u4e2d\uff0c\u63d0\u5347\u7684\u6811\u6728\u5f80\u5f80\u5177\u6709\u6700\u9ad8\u7684\u6027\u80fd\u4e0a\u9650 \u7ecf\u8fc7\u9002\u5f53\u7684\u8c03\u6574\uff0c\u4ed6\u4eec\u7ecf\u5e38\u51fb\u8d25\u8bb8\u591a\u5176\u4ed6\u7c7b\u578b\u7684\u6a21\u578b\u3002 \u8c03\u53c2\u6bd4\u968f\u673a\u68ee\u6797\u8981\u590d\u6742\u5f97\u591a \u53c2\u770b\u6587\u732e Day 2: Exploratory Analysis - Machine Learning Crash Course Day 3: Data Cleaning - Machine Learning Crash Course How to Handle Imbalanced Classes in Machine Learning Day 4: Feature Engineering - Machine Learning Crash Course Day 5: Algorithm Selection - Machine Learning Crash Course","title":"\u63a2\u7d22\u6027\u6570\u636e\u5206\u6790"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_1","text":"author: autuanliu email: autuanliu@163.com date: 2017/11/30","title":"\u63a2\u7d22\u6027\u6570\u636e\u5206\u6790"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_2","text":"","title":"\u8981\u70b9"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_3","text":"How many observations do I have? How many features? What are the data types of my features? Are they numeric? Categorical? Do I have a target variable?","title":"\u6574\u4f53\u89c2\u5bdf"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_4","text":"histogram \u5f80\u5f80\u662f\u6700\u6709\u6548\u7684 \u6f5c\u5728\u7684 \u79bb\u7fa4\u503c \u662f\u6ca1\u6709\u610f\u4e49\u7684 \u8fb9\u754c\u6ca1\u6709\u610f\u4e49 \u6f5c\u5728\u7684\u6d4b\u91cf\u9519\u8bef \u8bb0\u4e0b\u60f3\u8981\u505a\u7684\u4fee\u590d","title":"\u6570\u503c\u7279\u5f81\u7684\u5206\u5e03"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_5","text":"bar plot \u662f\u6709\u6548\u7684 \u53ef\u4ee5\u6e05\u695a\u770b\u5230 \u7a00\u758f\u7c7b\u522b \u8fd9\u91cc\u7684 \u7a00\u758f\u7c7b\u522b \u662f\u5173\u952e\uff0c\u5b83\u5c11\u5219\u4e0d\u5f71\u54cd\u6211\u4eec\u7684\u6a21\u578b\uff0c\u91cd\u5219\u5bfc\u81f4\u8fc7\u62df\u5408\uff0c\u8fd9\u4e2a\u4e00\u5b9a\u8981\u8bb0\u4e0b\u6765\uff08\u91cd\u65b0\u7ec4\u5408\u6216\u8005\u91cd\u65b0\u5206\u914d\uff09","title":"\u5206\u7c7b\u7279\u5f81\u7684\u5206\u5e03"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#segmentation","text":"segmentation \u662f\u89c2\u5bdf \u5206\u7c7b\u7279\u5f81 \u4e0e \u6570\u503c\u7279\u5f81 \u7684\u6700\u6709\u6548\u7684\u65b9\u5f0f Box plot \u662f\u5408\u9002\u7684 \u8fd9\u91cc\u7684\u5206\u6790\u5bf9 \u8bc4\u4f30\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b \u5f88\u91cd\u8981","title":"segmentation \u5206\u5272"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_6","text":"\u76f8\u5173\u6027\u5206\u6790 \u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u770b\u5230\u4e24\u4e2a\u6570\u503c\u7279\u5f81\u4e4b\u95f4\u7684\u5173\u7cfb \u76f8\u5173\u6027 heatmaps \u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff08\u6240\u6709\u7684\u6570\u503c\u90fd\u8981\u653e\u5927 100 \u500d\uff09 \u5173\u952e\u8981\u5206\u6790\uff0c\u54ea\u4e00\u4e2a\u7279\u5f81\u548ctarget\u6709\u5f88\u5f3a\u70c8\u7684\u76f8\u5173\u5173\u7cfb \u662f\u5426\u6709\u4e24\u4e2a\u7279\u5f81\u5b58\u5728\u7740\u610f\u5916\u7684\u6216\u8005\u5f3a\u70c8\u7684\u76f8\u5173\u5173\u7cfb","title":"\u76f8\u5173\u6027\u5206\u6790"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_7","text":"Better data beats fancier algorithms \u5728\u8fd9\u5757\u513f\u82b1\u8d39\u66f4\u591a\u65f6\u95f4\u662f\u5408\u7406\u7684 \u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u9700\u8981\u4e0d\u540c\u7c7b\u578b\u7684\u6e05\u6d17\u65b9\u6cd5 \u5220\u9664\u91cd\u590d\u7684\u6216\u8005\u65e0\u5173\u7684\u6570\u636e \u91cd\u590d\u6570\u636e\uff1a \u5408\u5e76\u6765\u81ea\u591a\u4e2a\u5730\u65b9\u7684\u6570\u636e\u96c6 \u4ece\u5ba2\u6237\u6216\u8005\u5176\u4ed6\u5730\u65b9\u63a5\u53d7\u7684\u6570\u636e \u62fc\u51d1\u7684\u6570\u636e \u65e0\u5173\u6570\u636e\uff1a \u63a2\u7d22\u6027\u5206\u6790\u7684\u5185\u5bb9 \u7ed3\u6784\u9519\u8bef \u6570\u636e\u6d4b\u91cf\uff0c\u6570\u636e\u4f20\u8f93\u4e2d\u51fa\u73b0\u7684\u9519\u8bef \u62fc\u5199\u9519\u8bef\u6216\u8005\u4e0d\u4e00\u81f4\u7684\u5927\u5c0f\u5199 \u8fd9\u53ef\u4ee5\u4ece \u5206\u7c7b\u6570\u636e\u7684\u6761\u5f62\u56fe \u4e2d\u5f88\u5bb9\u6613\u770b\u51fa\u6765 \u6807\u8bb0\u9519\u8bef \u5982 IT \u548c Information Technology \u5e94\u8be5\u662f\u4e00\u4e2a\u610f\u601d \u79bb\u7fa4\u503c \u7ebf\u6027\u56de\u5f52\u6a21\u578b\u5bf9\u79bb\u7fa4\u503c\u5f88\u654f\u611f\uff0c\u800c\u51b3\u7b56\u6811\u76f8\u5bf9\u597d\u4e00\u70b9 \u5982\u679c\u6709 \u5408\u7406\u7684\u7406\u7531 \u53bb\u9664\u5f02\u5e38\u503c\uff0c\u5c06\u662f\u975e\u5e38\u597d\u7684 \u4e0d\u80fd\u56e0\u4e3a\u662f \u79bb\u7fa4\u503c \u5c31\u76f2\u76ee\u7684\u5220\u9664\uff0c\u6216\u8bb8\uff0c\u5b83\u53ef\u4ee5\u63d0\u4f9b\u5f88\u591a\u6709\u7528\u7684\u4fe1\u606f \u5220\u9664\u6570\u636e\u5fc5\u987b\u8981\u6709\u7406\u7531\uff0c\u4f8b\u5982\uff0c \u975e\u771f\u5b9e\u6570\u636e\u7684\u53ef\u80fd\u6027 \u7f3a\u5931\u503c \u4e0d\u80fd\u7b80\u5355\u5730\u5ffd\u7565\u6570\u636e\u96c6\u4e2d\u7684\u7f3a\u5931\u503c \u5e38\u89c1\u505a\u6cd5\uff08\u4e22\u5f03\u6216\u8005\u63d2\u503c\uff09\uff1a \u4e8b\u5b9e\u4e0a\u8fd9\u662f\u5f88\u4e0d\u660e\u667a\u7684 \u4e22\u5931\u7f3a\u5931\u503c\u6bd4\u63d2\u503c\u6709\u65f6\u5019\u66f4\u6709\u6548 \u5c3d\u53ef\u80fd\u7684\u544a\u8bc9\u7b97\u6cd5\uff1a\u7f3a\u5931\u4e86\u6570\u636e\uff0c\u56e0\u4e3a\u6570\u636e\u7f3a\u5931\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u4fe1\u606f \u7f3a\u5931\u5206\u7c7b\u6570\u636e \u76f4\u63a5\u6807\u8bb0\u4e3a\u201c\u7f3a\u5931\u201d\uff0c\u5373\u65b0\u6dfb\u52a0\u4e00\u4e2a\u7c7b\u522b \u540c\u65f6\u4e5f\u8fbe\u5230\u4e86\u6ca1\u6709\u7f3a\u5931\u503c\u7684\u8981\u6c42 \u7f3a\u5931\u6570\u503c\u6570\u636e \u6807\u8bb0\u5e76\u4e14\u586b\u5145\u503c \u5c06\u89c2\u5bdf\u7ed3\u679c\u6807\u8bb0\u4e3a\u7f3a\u5931\u7684\u6307\u793a\u53d8\u91cf \u7528 0 \u586b\u5145\u539f\u6765\u7684\u7f3a\u5931\u503c\uff08\u6ee1\u8db3\u6ca1\u6709\u7f3a\u5931\u503c\u7684\u8981\u6c42\uff09 \u8fd9\u6837\u7684\u6807\u8bb0\u548c\u586b\u5145\u624b\u6cd5\u53ef\u4ee5\u8ba9\u7b97\u6cd5\u4f30\u8ba1\u7f3a\u5931\u7684\u6700\u4f73\u5e38\u91cf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4f7f\u7528\u5e73\u5747\u503c\u8fdb\u884c\u586b\u5145 \u76f4\u63a5\u4e22\u5f03\u6216\u8005\u63d2\u503c \u90fd\u662f\u6b21\u4f18\u7684\u65b9\u6848\uff08\u7f3a\u5931\u540c\u6837\u662f\u4fe1\u606f\uff0c\u6240\u4ee5\u6700\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u6807\u8bb0\u7684\u65b9\u6cd5\uff0c\u5e76\u8ba9\u7b97\u6cd5\u81ea\u5df1\u53bb\u7ed9\u51fa\u7f3a\u5931\u503c\uff09","title":"\u6570\u636e\u6e05\u6d17"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_8","text":"\u7279\u5f81\u5de5\u7a0b\u662f\u4ece\u5df2\u77e5\u7684\u6570\u636e\u4e2d \u521b\u5efa\u65b0\u7684\u7279\u5f81 \u4f5c\u4e3a\u8f93\u5165 \u6570\u636e\u6e05\u6d17\u662f\u4e00\u4e2a \u51cf \u7684\u8fc7\u7a0b\u800c\u7279\u5f81\u5de5\u7a0b\u662f\u4e00\u4e2a \u52a0 \u7684\u8fc7\u7a0b","title":"\u7279\u5f81\u5de5\u7a0b"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_9","text":"\u662f\u5426\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a \u5177\u6709\u76f8\u4e92\u4f5c\u7528\u7684\u7279\u5f81 \uff0c\u4ed6\u4eec\u662f\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u7279\u5f81\u7684\u7ec4\u5408\uff08\u5373\u662f\u4e00\u4e2a \u4ea4\u4e92\u9879 \uff0c\u53ef\u4ee5\u662f\u4e24\u4e2a\u53d8\u91cf\u7684 \u4e58\u79ef\uff0c\u548c\u6216\u8005\u5dee\uff09 \u5e94\u8be5\u8be2\u95ee\u81ea\u5df1\u201c\u6211\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7ec4\u5408\u8d77\u6765\u4ee5\u671f\u671b\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u5417\uff1f\u201d \u4f8b\u5982\uff0c\u5b66\u6821\u6570\u91cf\u548c\u5b66\u6821\u8d28\u91cf\u4e24\u4e2a\u53d8\u91cf\uff08\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e24\u4e2a\u53d8\u91cf\u505a\u4e00\u4e2a\u8bc4\u5206\uff0c\u90a3\u4e48\u7ed3\u679c\u662f\u5426\u4f1a\u66f4\u52a0\u6709\u6548\u5462\uff1f\uff09","title":"\u4ea4\u4e92\u9879"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_10","text":"\u6bcf\u4e2a\u7c7b\u522b\u81f3\u5c11\u6709 50 \u4e2a\u6570\u636e\uff0c\u5f53\u7136\u8fd9\u4e5f\u53d6\u51b3\u4e8e\u6570\u636e\u96c6\u7684\u5927\u5c0f\u548c\u5176\u5b83\u7279\u5f81\u6570\u91cf \u5c06 \u76f8\u4f3c\u7684\u7c7b\u522b\u5f52\u4e3a\u4e00\u4e2a\u7c7b \u5c06 \u5176\u5b83\u7684\u6570\u636e\u91cf\u6bd4\u8f83\u5c11\u7684\u7c7b\u522b\u5f52\u5c5e\u4e3a\u4e00\u4e2a other \u7c7b ++ \u8fd9\u91cc\u7684 missing \u662f\u4e00\u4e2a \u5355\u72ec\u7684\u7c7b\uff08\u5206\u7c7b\u6570\u636e\uff09 ++","title":"\u7a00\u758f\u7c7b\u522b"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_11","text":"\u5f88\u591a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5 \u4e0d\u80fd\u76f4\u63a5\u5904\u7406\u5206\u7c7b\u6570\u636e\uff0c\u5c24\u5176\u662f\u6587\u672c\u503c \uff0c ++\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5206\u7c7b\u7279\u5f81\u521b\u5efa \u865a\u62df\u53d8\u91cf++ \u865a\u62df\u53d8\u91cf\uff080,1\uff09\u7b49\uff0c\u6bcf\u4e2a\u503c\u4ee3\u8868\u5355\u4e00\u7684 \u5206\u7c7b\u53d8\u91cf\u503c \u5c3d\u53ef\u80fd\u591a\u7684\u5f15\u5165 \u6307\u793a\u53d8\u91cf\uff0c\u8fd9\u5c06\u4f1a\u7b80\u5316\u96be\u5ea6\uff08\u5206\u7c7b\u53d8\u91cf\u4ee5\u6709\u7f3a\u5931\u503c\u7684\u60c5\u51b5\u4e0b\uff09","title":"\u865a\u62df\u53d8\u91cf"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_12","text":"\u672a\u4f7f\u7528\u7684\u7279\u5f81 ID \u5217 \u4e0e\u9884\u6d4b\u65e0\u5173 \u5176\u5b83\u6587\u672c\u4fe1\u606f \u5197\u4f59\u7279\u5f81 \u53ef\u4ee5\u6709\u5176\u5b83\u7684\u7279\u5f81\u4ee3\u66ff","title":"\u5220\u9664\u6ca1\u6709\u4f7f\u7528\u6216\u8005 \u5197\u4f59\u7684 \u7279\u5f81"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_13","text":"\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7 \u7ebf\u6027\u6a21\u578b\uff08\u4e0d\u53ef\u4ee5\u8868\u8fbe\u975e\u7ebf\u6027\u5173\u7cfb\uff1b\u5bf9\u79bb\u7fa4\u503c\u654f\u611f\uff1b\u6ca1\u6709\u5b66\u5230\u5e95\u5c42\u6a21\u578b\u6307\u793a\u5b66\u5230\u4e86\u8bad\u7ec3\u96c6\u7684\u566a\u58f0\uff09 \u6b63\u5219\u5f27\u662f\u4e00\u79cd \u901a\u8fc7\u4eba\u4e3a\u60e9\u7f5a\u6a21\u578b\u7cfb\u6570 \u6765\u9632\u6b62\u8fc7\u5ea6\u62df\u5408 \u53ef\u4ee5\u9632\u6b62\u7cfb\u6570\u8fc7\u5927 \u4e5f\u53ef\u4ee5\u5b8c\u5168\u79fb\u9664\u7cfb\u6570\uff08\u6b63\u5219\u9879\u4e3a0\uff09 \u60e9\u7f5a\u7684\u5f3a\u5ea6\u662f\u53ef\u4ee5 \u8c03\u6574\u7684","title":"\u7b97\u6cd5\u9009\u62e9"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_14","text":"Lasso \u56de\u5f52 \u60e9\u7f5a\u7cfb\u6570\u7684 \u7edd\u5bf9\u5927\u5c0f \u53ef\u80fd\u5bfc\u81f4\u7cfb\u6570\u4e3a 0 \u5177\u6709 \u81ea\u52a8\u7279\u5f81\u9009\u62e9 \u7684\u529f\u80fd \u60e9\u7f5a\u5f3a\u5ea6\u5e94\u8be5\u662f\u53ef\u8c03\u8282\u7684 \u66f4\u5f3a\u7684\u60e9\u7f5a\u5fc5\u7136\u5bfc\u81f4\u5927\u91cf\u7cfb\u6570\u4e3a 0 Ridgo \u56de\u5f52 \u60e9\u7f5a\u7cfb\u6570\u7684 \u5e73\u65b9\u5927\u5c0f \u4f7f\u7cfb\u6570\u53d8\u5c0f\uff0c\u4f46\u4e0d\u4f1a\u4e3a 0 \u5cad\u56de\u5f52 \u5177\u6709\u4f7f \u7279\u5f81\u6536\u7f29 \u7684\u529f\u80fd Elastic-Net Lasso \u548c Ridgo \u7684\u4e00\u79cd\u6298\u4e2d \u60e9\u7f5a\u7cfb\u6570\u7684 \u7edd\u5bf9\u5927\u5c0f\u548c\u5e73\u65b9\u5927\u5c0f \u7684\u7ec4\u5408 mix \u4e24\u79cd\u60e9\u7f5a\u4e4b\u95f4\u7684\u7cfb\u6570 \u662f\u53ef\u4ee5\u8c03\u8282\u7684 \u603b\u5f3a\u5ea6\u4e5f\u662f\u53ef\u4ee5\u8c03\u8282\u7684","title":"\u6b63\u5219\u5316\u56de\u5f52"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_15","text":"\u7531\u4e8e \u51b3\u7b56\u6811 \u7684\u5206\u652f\u7ed3\u6784\uff0c\u51b3\u7b56\u6811\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u6784\u5efa \u975e\u7ebf\u6027\u5173\u7cfb \u4e0d\u53d7\u7ea6\u675f \u7684\u51b3\u7b56\u6811 \u5f88\u5bb9\u6613 \u8fc7\u62df\u5408","title":"\u51b3\u7b56\u6811"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_16","text":"bagging \u8bd5\u56fe \u964d\u4f4e \u590d\u6742\u6a21\u578b\u8fc7\u62df\u5408\u7684\u98ce\u9669 It trains a large number of \"strong\" learners in parallel. A strong learner is a model that's relatively unconstrained. Bagging then combines all the strong learners together in order to \"smooth out\" their predictions. Boosting \u65b9\u6cd5 \u8bd5\u56fe\u589e\u52a0\u7b80\u5355\u6a21\u578b\u7684\u9884\u6d4b\u7075\u6d3b\u6027 It trains a large number of \"weak\" learners in sequence. A weak learner is a constrained model (i.e. you could limit the max depth of each decision tree). Each one in the sequence focuses on learning from the mistakes of the one before it. Boosting then combines all the weak learners into a single strong learner. Bagging \u548c Boosting \u90fd\u662f\u96c6\u6210\u5b66\u4e60\u7684\u65b9\u6cd5\uff0c\u4f46\u4ed6\u4eec\u5374\u4ece\u76f8\u53cd\u7684\u65b9\u5411\u6765\u89e3\u51b3\u95ee\u9898\u3002Bagging \u4f7f\u7528\u590d\u6742\u7684\u57fa\u672c\u6a21\u578b\uff0c\u5e76\u8bd5\u56fe\u201c\u5e73\u6ed1\u201d\u4ed6\u4eec\u7684\u9884\u6d4b\uff0c\u800c Boosting \u4f7f\u7528\u7b80\u5355\u7684\u57fa\u672c\u6a21\u578b\uff0c\u5e76\u8bd5\u56fe\u201c\u63d0\u9ad8\u201d\u603b\u4f53\u7684\u590d\u6742\u6027 \u5f53 \u57fa\u672c\u7684\u6a21\u578b\u662f \u51b3\u7b56\u6811 \u7684\u65f6\u5019\uff0cBagging \u96c6\u6210\u548c Boosting \u96c6\u6210 \u5206\u522b\u53eb\u505a random forests and boosted trees","title":"\u96c6\u6210\u5b66\u4e60"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_17","text":"\u968f\u673a\u68ee\u6797\u6709\u4e24\u4e2a\u201c\u968f\u673a\u6027\u201d\u6765\u6e90\uff1a \u6bcf\u68f5\u6811\u53ea\u5141\u8bb8\u4ece\u4e00\u4e2a\u968f\u673a\u7684\u7279\u5f81\u5b50\u96c6\u4e2d\u8fdb\u884c\u5206\u5272\uff08\u5bfc\u81f4\u7279\u5f81\u9009\u62e9\uff09 \u6bcf\u68f5\u6811\u53ea\u5728\u4e00\u4e2a\u968f\u673a\u7684\u89c2\u5bdf\u5b50\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff08\u4e00\u4e2a\u79f0\u4e3a\u91cd\u91c7\u6837\u7684\u8fc7\u7a0b\uff09 \u5728\u5b9e\u8df5\u4e2d\uff0c\u968f\u673a\u68ee\u6797\u5f80\u5f80\u8868\u73b0\u975e\u5e38\u597d\uff0c\u5f00\u7bb1\u5373\u7528 \u4ed6\u4eec\u7ecf\u5e38\u51fb\u8d25\u9700\u8981\u51e0\u4e2a\u661f\u671f\u624d\u80fd\u5efa\u7acb\u8d77\u6765\u7684\u8bb8\u591a\u5176\u4ed6\u6a21\u578b \u4ed6\u4eec\u662f\u5b8c\u7f8e\u7684\u201c\u745e\u58eb\u519b\u5200\u201d\u7b97\u6cd5\uff0c\u51e0\u4e4e\u603b\u80fd\u83b7\u5f97\u597d\u7684\u7ed3\u679c \u4ed6\u4eec\u6ca1\u6709\u5f88\u591a\u590d\u6742\u7684\u53c2\u6570\u6765\u8c03\u6574","title":"\u968f\u673a\u68ee\u6797"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#boosted-tree","text":"\u6bcf\u68f5\u6811\u7684\u6700\u5927\u6df1\u5ea6\u53ef\u4ee5\u88ab\u8c03\u6574\u3002 \u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u68f5\u6811\u90fd\u4f1a\u5c1d\u8bd5\u7ea0\u6b63\u4e4b\u524d\u90a3\u68f5\u6811\u7684\u9884\u6d4b\u9519\u8bef \u5728\u5b9e\u8df5\u4e2d\uff0c\u63d0\u5347\u7684\u6811\u6728\u5f80\u5f80\u5177\u6709\u6700\u9ad8\u7684\u6027\u80fd\u4e0a\u9650 \u7ecf\u8fc7\u9002\u5f53\u7684\u8c03\u6574\uff0c\u4ed6\u4eec\u7ecf\u5e38\u51fb\u8d25\u8bb8\u591a\u5176\u4ed6\u7c7b\u578b\u7684\u6a21\u578b\u3002 \u8c03\u53c2\u6bd4\u968f\u673a\u68ee\u6797\u8981\u590d\u6742\u5f97\u591a","title":"Boosted tree"},{"location":"\u6570\u636e\u79d1\u5b66/ExploratoryDataAnalysis/#_18","text":"Day 2: Exploratory Analysis - Machine Learning Crash Course Day 3: Data Cleaning - Machine Learning Crash Course How to Handle Imbalanced Classes in Machine Learning Day 4: Feature Engineering - Machine Learning Crash Course Day 5: Algorithm Selection - Machine Learning Crash Course","title":"\u53c2\u770b\u6587\u732e"},{"location":"\u6570\u636e\u79d1\u5b66/docker/","text":"Docker Docker \u57fa\u7840 \u56fd\u5185\u6e90 curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \\ \"deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" sudo apt update sudo apt install docker-ce \u4f7f\u7528\u811a\u672c\u81ea\u52a8\u5b89\u88c5 $ curl -fsSL get.docker.com -o get-docker.sh $ sudo sh get-docker.sh --mirror Aliyun \u542f\u52a8 $ sudo systemctl enable docker $ sudo systemctl start docker \u5efa\u7acb docker \u7528\u6237\u7ec4 \u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u4e00\u822c Linux \u7cfb\u7edf\u4e0a\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 root \u7528\u6237\u3002\u56e0\u6b64\uff0c\u66f4\u597d\u5730\u505a\u6cd5\u662f\u5c06\u9700\u8981\u4f7f\u7528 docker\u7684\u7528\u6237\u52a0\u5165 docker\u7528\u6237\u7ec4 $ sudo groupadd docker \u5c06\u5f53\u524d\u7528\u6237\u52a0\u5165 docker \u7ec4 sudo usermod -aG docker $USER \u8bbe\u7f6e\u56fd\u5185\u955c\u50cf Docker \u955c\u50cf\u52a0\u901f\u5668-\u535a\u5ba2-\u4e91\u6816\u793e\u533a-\u963f\u91cc\u4e91 \u60a8\u53ef\u4ee5\u6dfb\u52a0\"https://registry.docker-cn.com\"\u5230registry-mirrors\u6570\u7ec4\u4e2d/etc/docker/daemon.json \u4ee5\u9ed8\u8ba4\u4eceChina\u6ce8\u518c\u8868\u955c\u50cf\u4e2d\u62c9\u53d6\u3002 { \"registry-mirrors\": [ \"https://registry.docker-cn.com\" ] } Registry as a pull through cache | Docker Documentation \u4e4b\u540e\u91cd\u65b0\u542f\u52a8\u670d\u52a1 $ sudo systemctl daemon-reload $ sudo systemctl restart docker \u83b7\u53d6\u955c\u50cf dcoker pull [\u9009\u9879] [Docker Registy \u5730\u5740]<\u4ed3\u5e93\u540d>:<tag> Docker Registy \u5730\u5740]\u683c\u5f0f\u4e3a\uff1aIP/\u57df\u540d[:\u7aef\u53e3\u53f7] \u9ed8\u8ba4\u662f docker hub \u4ed3\u5e93\u540d\uff1a\u7528\u6237\u540d/\u8f6f\u4ef6\u540d \u955c\u50cf\u662f\u6709 \u591a\u5c42\u5b58\u50a8 \u6240\u6784\u6210\uff0c\u4e0b\u8f7d\u4e5f\u662f\u4e00\u5c42\u4e00\u5c42\u4e0b\u8f7d\u7684\uff0c\u5e76\u975e\u5355\u4e00\u7684\u6587\u4ef6\uff0c\u4e0b\u8f7d\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u7ed9\u51fa\u6bcf\u4e00\u5c42\u7684ID\u7684\u524d12\u4f4d \u6709\u4e86\u955c\u50cf\u540e\u5c31\u53ef\u4ee5 \u4ee5\u955c\u50cf\u4e3a\u57fa\u7840 \u521b\u5efa\u4e00\u4e2a \u5bb9\u5668 \u6765\u8fd0\u884c \u4f7f\u7528 Docker image \u6765\u7ba1\u7406\u955c\u50cf docker image pull ubuntu:17.10 \u62c9\u53d6\u955c\u50cf docker container run -it --rm ubuntu:17.10 bash \u8fd0\u884c\u5bb9\u5668 -it \u4ea4\u4e92\u5f0f\u7684\u7ec8\u7aef --rm \u8fd0\u884c\u5b8c \u5220\u9664 bash \u5bb9\u5668\u5185\u547d\u4ee4 \u5217\u51fa\u955c\u50cf docker images \u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a tag \u5982 ubuntu:17.10 \u548c latest \u662f\u76f8\u540c\u7684 docker system df \u67e5\u770b \u955c\u50cf\uff0c\u5bb9\u5668 \u6240\u5360\u4f53\u79ef \u865a\u60ac\u955c\u50cf\uff1a\u6ca1\u6709\u4ed3\u5e93\u540d\uff0c\u540d\u4f18\u6807\u7b7e\uff0c\u5747\u4e3a none \uff0cdocker pull \u548c docker build \u5747\u4f1a\u5bfc\u81f4\u8fd9\u79cd\u60c5\u51b5 \u56e0\u4e3a\u65b0\u65e7\u955c\u50cf\u540c\u540d\uff0c\u5bfc\u81f4\u65e7\u955c\u50cf\u6210\u4e3a\u865a\u60ac\u955c\u50cf docker images -f dangling=true \u4e13\u95e8\u663e\u793a\u8fd9\u7c7b\u955c\u50cf docker image prunge \u5220\u9664\u865a\u60ac\u955c\u50cf \u4e3a\u4e86\u52a0\u901f\u955c\u50cf\u7684\u6784\u5efa\uff0cDocker\u4f1a\u5229\u7528\u4e2d\u95f4\u5c42\u955c\u50cf\uff0c\u9ed8\u8ba4\u53ea\u663e\u793a\u6700\u9876\u5c42\u955c\u50cf dokcer images -a \u663e\u793a\u4e2d\u95f4\u5c42 \u8fd9\u91cc\u6ca1\u6709\u6807\u7b7e\u7684\u955c\u50cf\u662f\u4e0d\u80fd\u5220\u9664\u7684 \u5217\u51fa\u90e8\u5206\u955c\u50cf docker images ubuntu docker images ubuntu:16.04 docker images -f \u8fc7\u6ee4\u5668 docker images -f since=-mongo:3.2 mongo\u4e4b\u540e\u5efa\u7acb\u7684\u955c\u50cf(before) docker images -q \u53ea\u663e\u793a id docker images --format \"{{.ID}:{.Repository}}\" (GO\u7684\u6a21\u677f\u8bed\u6cd5) Docker 1.13 + dokcer image ls \u955c\u50cf\u662f\u591a\u5c42\u5b58\u50a8\uff0c\u6bcf\u4e00\u5c42\u5728\u5176\u524d\u4e00\u5c42\u57fa\u7840\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u5bb9\u5668\u540c\u6837\u662f \u591a\u5c42\u5b58\u50a8\uff0c\u4ee5\u955c\u50cf\u4e3a\u57fa\u7840\u5c42\uff0c\u5728\u5176\u57fa\u7840\u4e0a\u518d\u52a0\u4e00\u5c42\u4f5c\u4e3a\u5bb9\u5668\u8fd0\u884c\u7684\u5b58\u50a8\u5c42 \u4fee\u6539\u4e86\u5bb9\u5668\u7684\u6587\u4ef6\u4e5f\u5c31\u662f\u6539\u52a8\u4e86\u5bb9\u5668\u7684\u5b58\u50a8\u5c42 docker diff \u67e5\u770b\u6539\u52a8 --name xx \u6307\u5b9a\u5bb9\u5668\u7684\u540d\u5b57\u4e3a xx \uff08\uff09 \u6700\u597d\u6307\u5b9a\u540d\u5b57\u4fbf\u4e8e\u64cd\u4f5c \uff09 docker exec -it containerName bash \u8fdb\u5165\u5bb9\u5668\u5e76\u6267\u884c bash docker commit \u53ef\u4ee5\u964d\u5bb9\u5668\u7684 \u5b58\u50a8\u5c42\u4fdd\u5b58\u4e0b\u6765\u6210\u4e3a\u955c\u50cf\uff0c\u4ee5\u540e\u8fd0\u884c\u8fd9\u4e2a\u65b0\u955c\u50cf\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u62e5\u6709\u539f\u6709\u955c\u50cf\u7684\u6587\u4ef6\u53d8\u5316 docker commit [\u9009\u9879] <\u5bb9\u5668ID\u6216\u8005\u5bb9\u5668\u540d> [<\u4ed3\u5e93\u540d>[: ]] \u5c06\u5bb9\u5668\u4fdd\u5b58\u4e3a\u955c\u50cf docker commit \\ --author \"autuanliu <autuanliu@163.com>\" \\ --message \"fix \" \\ \u53ef\u4ee5\u4e0d\u5199 webserver \\ \u5bb9\u5668\u540d\u5b57 nginx:v2 \u6307\u5b9a\u4ed3\u5e93\u540d:tag \u8fd9\u91cc\u4e00\u5b9a\u8981\u8bb0\u5f97\u5199\u4e00\u4e2a++\u4fdd\u5b58\u811a\u672c++\u554a\uff01\uff01\uff01\u5f88\u5bb9\u6613\u5fd8\u8bb0\u554a\uff0c\u76f4\u63a5\u5c31\u5173\u95ed\u4e86\uff0c\u7136\u540e\u4ec0\u4e48\u4e5f\u6ca1\u6709\u4e86\u554a Docker history \u4ed3\u5e93\u540d:tag \u67e5\u770b\u5386\u53f2 \u4e00\u5b9a\u8981\u614e\u7528 commit \u867d\u7136 commit \u53ef\u4ee5\u6dfb\u52a0\u5185\u5bb9\uff0c\u6784\u5efa\u65b0\u7684\u955c\u50cf\uff0c\u4f46\u662f\u540c\u65f6\u4e5f\u4f1a\u6dfb\u52a0\u4e00\u4e9b\u65e0\u5173\u7d27\u8981\u7684\u4e1c\u897f\uff0c\u662f\u7684\u955c\u50cf\u53d8\u5f97\u81c3\u80bf docker commit \u610f\u5473\u7740\u5bf9\u955c\u50cf\u7684\u64cd\u4f5c\u90fd\u662f\u4e00\u4e2a\u9ed1\u7bb1\u64cd\u4f5c\uff0c\u751f\u6210\u7684\u955c\u50cf\u4e5f\u88ab\u6210\u4e3a\u9ed1\u7bb1\u955c\u50cf\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\u9664\u4e86\u6784\u5efa\u955c\u50cf\u7684\u4eba\u77e5\u9053\u6267\u884c\u4e86\u4ec0\u4e48\u64cd\u4f5c\uff0c\u5176\u4ed6\u4eba\u6839\u672c\u65e0\u4ece\u5f97\u77e5 \u64cd\u4f5c Docker \u5bb9\u5668 \u5bb9\u5668\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u4e00\u4e2a\u6216\u4e00\u7ec4\u5e94\u7528\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u8fd0\u884c\u6001\u73af\u5883 \u542f\u52a8\u5bb9\u5668 \u542f\u52a8\u5bb9\u5668\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u57fa\u4e8e\u955c\u50cf\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\u5e76\u542f\u52a8\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u5c06\u5728\u7ec8\u6b62\u72b6\u6001\uff08stopped\uff09 \u7684\u5bb9\u5668\u91cd\u65b0\u542f\u52a8 docker run -t -i ubuntu:14.04 /bin/bash \u5176\u4e2d\uff0c -t \u9009\u9879\u8ba9Docker\u5206\u914d\u4e00\u4e2a\u4f2a\u7ec8\u7aef\uff08pseudo-tty\uff09 \u5e76\u7ed1\u5b9a\u5230\u5bb9\u5668\u7684\u6807\u51c6\u8f93\u5165\u4e0a\uff0c -i \u5219\u8ba9\u5bb9\u5668\u7684\u6807\u51c6\u8f93\u5165\u4fdd\u6301\u6253\u5f00\u3002\u5728\u4ea4\u4e92\u6a21\u5f0f\u4e0b\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6240\u521b\u5efa\u7684\u7ec8\u7aef\u6765\u8f93\u5165\u547d\u4ee4 \u68c0\u67e5\u672c\u5730\u662f\u5426\u5b58\u5728\u6307\u5b9a\u7684\u955c\u50cf\uff0c\u4e0d\u5b58\u5728\u5c31\u4ece\u516c\u6709\u4ed3\u5e93\u4e0b\u8f7d \u5229\u7528\u955c\u50cf\u521b\u5efa\u5e76\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668 \u5206\u914d\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\uff0c\u5e76\u5728\u53ea\u8bfb\u7684\u955c\u50cf\u5c42\u5916\u9762\u6302\u8f7d\u4e00\u5c42\u53ef\u8bfb\u5199\u5c42 \u4ece\u5bbf\u4e3b\u4e3b\u673a\u914d\u7f6e\u7684\u7f51\u6865\u63a5\u53e3\u4e2d\u6865\u63a5\u4e00\u4e2a\u865a\u62df\u63a5\u53e3\u5230\u5bb9\u5668\u4e2d\u53bb \u4ece\u5730\u5740\u6c60\u914d\u7f6e\u4e00\u4e2a ip \u5730\u5740\u7ed9\u5bb9\u5668 \u6267\u884c\u7528\u6237\u6307\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f \u6267\u884c\u5b8c\u6bd5\u540e\u5bb9\u5668\u88ab\u7ec8\u6b62 \u542f\u52a8\u5df2\u7ec8\u6b62\u5bb9\u5668 \u53ef\u4ee5\u5229\u7528 docker start \u547d\u4ee4\uff0c\u76f4\u63a5\u5c06\u4e00\u4e2a\u5df2\u7ecf\u7ec8\u6b62\u7684\u5bb9\u5668\u542f\u52a8\u8fd0\u884c \u540e\u53f0(background)\u8fd0\u884c \u66f4\u591a\u7684\u65f6\u5019\uff0c\u9700\u8981\u8ba9 Docker \u5728\u540e\u53f0\u8fd0\u884c\u800c\u4e0d\u662f\u76f4\u63a5\u628a\u6267\u884c\u547d\u4ee4\u7684\u7ed3\u679c\u8f93\u51fa\u5728\u5f53\u524d\u5bbf\u4e3b\u673a\u4e0b\u3002\u6b64\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0 -d \u53c2\u6570\u6765\u5b9e\u73b0 \u8981\u83b7\u53d6\u5bb9\u5668\u7684\u8f93\u51fa\u4fe1\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7 docker logs \u547d\u4ee4 docker logs [container ID or NAMES] \u7ec8\u6b62\u5bb9\u5668 \u53ef\u4ee5\u4f7f\u7528 docker stop \u6765\u7ec8\u6b62\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u3002\u6b64\u5916\uff0c\u5f53Docker\u5bb9\u5668\u4e2d\u6307\u5b9a\u7684\u5e94\u7528\u7ec8\u7ed3\u65f6\uff0c\u5bb9\u5668\u4e5f\u81ea\u52a8\u7ec8\u6b62\u3002 \u4f8b\u5982\u5bf9\u4e8e\u4e0a\u4e00\u7ae0\u8282\u4e2d\u53ea\u542f\u52a8\u4e86\u4e00\u4e2a\u7ec8\u7aef\u7684\u5bb9\u5668\uff0c\u7528\u6237\u901a\u8fc7 exit \u547d\u4ee4\u6216 Ctrl+d \u6765\u9000\u51fa\u7ec8\u7aef\u65f6\uff0c\u6240\u521b\u5efa\u7684\u5bb9\u5668\u7acb\u523b\u7ec8\u6b62\u3002 \u7ec8\u6b62\u72b6\u6001\u7684\u5bb9\u5668\u53ef\u4ee5\u7528 docker ps -a \u547d\u4ee4\u770b\u5230 \u5904\u4e8e\u7ec8\u6b62\u72b6\u6001\u7684\u5bb9\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7 docker start \u547d\u4ee4\u6765\u91cd\u65b0\u542f\u52a8\u3002 docker restart \u547d\u4ee4\u4f1a\u5c06\u4e00\u4e2a\u8fd0\u884c\u6001\u7684\u5bb9\u5668\u7ec8\u6b62\uff0c\u7136\u540e\u518d\u91cd\u65b0\u542f\u52a8\u5b83 \u8fdb\u5165\u5bb9\u5668 docker attach name nsenter \u542f\u52a8\u4e00\u4e2a\u65b0\u7684shell\u8fdb\u7a0b(\u9ed8\u8ba4\u662f/bin/bash), \u540c\u65f6\u4f1a\u628a\u8fd9\u4e2a\u65b0\u8fdb\u7a0b\u5207\u6362\u5230\u548c\u76ee\u6807(target)\u8fdb\u7a0b\u76f8\u540c\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u8fdb\u5165\u4e86\u5bb9\u5668\u5185\u90e8\u3002nsenter \u8981\u6b63\u5e38\u5de5\u4f5c\u9700\u8981\u6709 root \u6743\u9650 \u5bfc\u51fa\u5bb9\u5668 \u5982\u679c\u8981\u5bfc\u51fa\u672c\u5730\u67d0\u4e2a\u5bb9\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528 docker export \u547d\u4ee4 docker export cintainerID_name > ubuntu.tar \u5bfc\u5165\u5bb9\u5668\u5feb\u7167 \u53ef\u4ee5\u4f7f\u7528 docker import \u4ece\u5bb9\u5668\u5feb\u7167\u6587\u4ef6\u4e2d\u518d\u5bfc\u5165\u4e3a\u955c\u50cf\uff0c\u4f8b\u5982 $ cat ubuntu.tar | docker import - test/ubuntu:v1.0 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a URL \u6216\u8005\u67d0\u4e2a\u76ee\u5f55\u6765\u5bfc\u5165\uff0c\u4f8b\u5982 docker import http://example.com/exampleimage.tgz example/imagerepo $ docker container export $ docker image import docker container prune \u53ef\u4ee5\u6e05\u7406\u6389\u6240\u6709\u5904\u4e8e\u7ec8\u6b62\u72b6\u6001\u7684\u5bb9\u5668 \u4ed3\u5e93 \u4e00\u4e2a\u5bb9\u6613\u6df7\u6dc6\u7684\u6982\u5ff5\u662f\u6ce8\u518c\u670d\u52a1\u5668\uff08Registry\uff09 \u3002\u5b9e\u9645\u4e0a\u6ce8\u518c\u670d\u52a1\u5668\u662f\u7ba1\u7406\u4ed3\u5e93\u7684\u5177\u4f53\u670d\u52a1\u5668\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u4e0a\u53ef\u4ee5\u6709\u591a\u4e2a\u4ed3\u5e93\uff0c\u800c\u6bcf\u4e2a\u4ed3\u5e93\u4e0b\u9762\u6709\u591a\u4e2a\u955c\u50cf\u3002\u4ece\u8fd9\u65b9\u9762\u6765\u8bf4\uff0c\u4ed3\u5e93\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u9879\u76ee\u6216\u76ee\u5f55\u3002\u4f8b\u5982\u5bf9\u4e8e\u4ed3\u5e93\u5730\u5740 dl.dockerpool.com/ubuntu \u6765\u8bf4\uff0c dl.dockerpool.com \u662f\u6ce8\u518c\u670d\u52a1\u5668\u5730\u5740\uff0c ubuntu \u662f\u4ed3\u5e93\u540d \u767b\u5f55 \u53ef\u4ee5\u901a\u8fc7\u6267\u884c docker login \u547d\u4ee4\u4ea4\u4e92\u5f0f\u7684\u8f93\u5165\u7528\u6237\u540d\u53ca\u5bc6\u7801\u6765\u5b8c\u6210\u5728\u547d\u4ee4\u884c\u754c\u9762\u7684\u767b\u5f55\u3002\u767b\u5f55\u6210\u529f\u540e\uff0c\u672c\u5730\u7528\u6237\u76ee\u5f55\u7684 .dockercfg \u4e2d\u5c06\u4fdd\u5b58\u7528\u6237\u7684\u8ba4\u8bc1\u4fe1\u606f docker search \u547d\u4ee4\u6765\u67e5\u627e\u5b98\u65b9\u4ed3\u5e93\u4e2d\u7684\u955c\u50cf\uff0c\u5e76\u5229\u7528 docker pull \u547d\u4ee4\u6765\u5c06\u5b83\u4e0b\u8f7d\u5230\u672c\u5730 Docker \u6570\u636e\u7ba1\u7406 \u5728\u5bb9\u5668\u4e2d\u7ba1\u7406\u6570\u636e\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u6570\u636e\u5377\uff08Volumes\uff09 \u6302\u8f7d\u4e3b\u673a\u76ee\u5f55 (Bind mounts) * \u4f7f\u7528 docker volume \u5b50\u547d\u4ee4\u6765\u7ba1\u7406 Docker \u6570\u636e\u5377 \u6570\u636e\u5377\u662f\u4e00\u4e2a\u53ef\u4f9b\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u4f7f\u7528\u7684\u7279\u6b8a\u76ee\u5f55\uff0c\u5b83\u7ed5\u8fc7 UFS\uff0c\u53ef\u4ee5\u63d0\u4f9b\u5f88\u591a\u6709\u7528\u7684\u7279\u6027\uff1a \u6570\u636e\u5377\u53ef\u4ee5\u5728\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u548c\u91cd\u7528 \u5bf9\u6570\u636e\u5377\u7684\u4fee\u6539\u4f1a\u7acb\u9a6c\u751f\u6548 \u5bf9\u6570\u636e\u5377\u7684\u66f4\u65b0\uff0c\u4e0d\u4f1a\u5f71\u54cd\u955c\u50cf \u6570\u636e\u5377\u9ed8\u8ba4\u4f1a\u4e00\u76f4\u5b58\u5728\uff0c\u5373\u4f7f\u5bb9\u5668\u88ab\u5220\u9664 \u6570\u636e\u5377\u7684\u4f7f\u7528\uff0c\u7c7b\u4f3c\u4e8e Linux \u4e0b\u5bf9\u76ee\u5f55\u6216\u6587\u4ef6\u8fdb\u884c mount\uff0c\u955c\u50cf\u4e2d\u7684\u88ab\u6307\u5b9a\u4e3a\u6302\u8f7d\u70b9\u7684\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u4f1a\u88ab\u9690\u85cf\u6389\uff0c\u6302\u8f7d\u7684\u6570\u636e\u5377\u7684\u5185\u5bb9\u4f1a\u88ab\u6620\u5c04\u5230\u8be5\u76ee\u5f55 Docker \u65b0\u7528\u6237\u5e94\u8be5\u9009\u62e9 --mount \u53c2\u6570\uff0c\u7ecf\u9a8c\u4e30\u5bcc\u7684 Dcoker \u4f7f\u7528\u8005\u5bf9 -v \u6216\u8005 --volume\u5df2\u7ecf\u5f88\u719f\u6089\u4e86\uff0c\u4f46\u662f\u63a8\u8350\u4f7f\u7528 --volume \u53c2\u6570 \u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5377 $ docker volume create my-vol \u67e5\u770b\u6240\u6709\u7684\u6570\u636e\u5377 $ docker volume ls \u67e5\u770b\u6307\u5b9a\u6570\u636e\u5377\u7684\u4fe1\u606f docker volume inspect my-vol \u521b\u5efa\u4e00\u4e2a\u6307\u5b9a\u4f4d\u7f6e\u7684\u6570\u636e\u5377 docker volume create --name sharef --opt type=none --opt device=~/home/autuanliu/sharef --opt o=bind \u542f\u52a8\u4e00\u4e2a\u6302\u8f7d\u6570\u636e\u5377\u7684\u5bb9\u5668 \u5728\u7528 docker run \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u4f7f\u7528 --mount \u6807\u8bb0\u6765\u5c06\u6570\u636e\u5377\u6302\u8f7d\u5230\u5bb9\u5668\u91cc\u3002\u5728\u4e00\u6b21 docker run \u4e2d\u53ef\u4ee5\u6302\u8f7d\u591a\u4e2a\u6570\u636e\u5377 docker run -d -P \\ --name web \\ \u5bb9\u5668\u540d --mount source=my-vol,target=/webapp \\ \u52a0\u8f7d\u4e00\u4e2a\u6570\u636e\u5377\u5230\u5bb9\u5668\u7684 /webapp \u76ee\u5f55 training/webapp \\ \u955c\u50cf\u540d python app.py \\ \u5728 bash \u6267\u884c\u547d\u4ee4 \u67e5\u770b\u6570\u636e\u5377\u7684\u5177\u4f53\u4fe1\u606f $ docker inspect web \u5220\u9664\u6570\u636e\u5377 $ docker volume rm my-vol \u6570\u636e\u5377\u662f\u88ab\u8bbe\u8ba1\u7528\u6765 \u6301\u4e45\u5316\u6570\u636e \u7684\uff0c++\u5b83\u7684\u751f\u547d\u5468\u671f\u72ec\u7acb\u4e8e\u5bb9\u5668++\uff0cDocker \u4e0d\u4f1a\u5728\u5bb9\u5668\u88ab\u5220\u9664\u540e\u81ea\u52a8\u5220\u9664\u6570\u636e\u5377\uff0c\u5e76\u4e14\u4e5f\u4e0d\u5b58\u5728\u5783\u573e\u56de\u6536\u8fd9\u6837\u7684\u673a\u5236\u6765\u5904\u7406\u6ca1\u6709\u4efb\u4f55\u5bb9\u5668\u5f15\u7528\u7684\u6570\u636e\u5377\u3002 \u5982\u679c\u9700\u8981\u5728\u5220\u9664\u5bb9\u5668\u7684\u540c\u65f6\u79fb\u9664\u6570\u636e\u5377\u3002\u53ef\u4ee5\u5728\u5220\u9664\u5bb9\u5668\u7684\u65f6\u5019\u4f7f\u7528 docker rm -v \u8fd9\u4e2a\u547d\u4ee4 \u65e0\u4e3b\u7684\u6570\u636e\u5377\u53ef\u80fd\u4f1a\u5360\u636e\u5f88\u591a\u7a7a\u95f4\uff0c\u8981\u6e05\u7406\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4 docker volume prune \u6302\u8f7d\u4e00\u4e2a\u4e3b\u673a\u76ee\u5f55\u4f5c\u4e3a\u6570\u636e\u5377 \u4f7f\u7528 --mount \u6807\u8bb0\u53ef\u4ee5\u6307\u5b9a\u6302\u8f7d\u4e00\u4e2a\u672c\u5730\u4e3b\u673a\u7684\u76ee\u5f55\u5230\u5bb9\u5668\u4e2d\u53bb\u3002 $ docker run -d -P \\ --name web \\ # -v /src/webapp:/opt/webapp \\ --mount type=bind,source=/src/webapp,target=/opt/webapp \\ \u52a0\u8f7d\u4e3b\u673a\u7684 /src/webapp \u76ee\u5f55\u5230\u5bb9\u5668\u7684 /opt/webapp \u76ee\u5f55,\u672c \u5730\u76ee\u5f55\u7684\u8def\u5f84\u5fc5\u987b\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u5982\u679c\u76ee\u5f55\u4e0d\u5b58\u5728 Docker \u4f1a\u81ea\u52a8\u4e3a\u4f60\u521b\u5efa\u5b83 training/webapp \\ python app.py Docker \u6302\u8f7d\u4e3b\u673a\u76ee\u5f55\u7684\u9ed8\u8ba4\u6743\u9650\u662f\u8bfb\u5199\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0 readonly \u6307\u5b9a\u4e3a\u53ea\u8bfb --mount type=bind,source=/src/webapp,target=/opt/webapp,readonly \u6302\u8f7d\u4e00\u4e2a\u672c\u5730\u4e3b\u673a\u6587\u4ef6\u4f5c\u4e3a\u6570\u636e\u5377 --mount \u6807\u8bb0\u4e5f\u53ef\u4ee5\u4ece\u4e3b\u673a\u6302\u8f7d\u5355\u4e2a\u6587\u4ef6\u5230\u5bb9\u5668\u4e2d $ docker run --rm -it \\ --mount type=bind,source=~/.bash_history,target=/root/.bash_history \\ ubuntu:17.10 \\ bash \u8fd9\u6837\u5c31\u53ef\u4ee5\u8bb0\u5f55\u5728\u5bb9\u5668\u8f93\u5165\u8fc7\u7684\u547d\u4ee4\u4e86 \u5916\u90e8\u8bbf\u95ee\u5bb9\u5668 \u5bb9\u5668\u4e2d\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e9b\u7f51\u7edc\u5e94\u7528\uff0c\u8981\u8ba9\u5916\u90e8\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u5e94\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7 -P \u6216 -p \u53c2\u6570\u6765\u6307\u5b9a\u7aef\u53e3\u6620\u5c04 \u5f53\u4f7f\u7528 -P \u6807\u8bb0\u65f6\uff0cDocker \u4f1a\u968f\u673a\u6620\u5c04\u4e00\u4e2a 49000~49900 \u7684\u7aef\u53e3\u5230\u5185\u90e8\u5bb9\u5668\u5f00\u653e\u7684\u7f51\u7edc\u7aef\u53e3 \u53ef\u4ee5\u901a\u8fc7 docker logs \u547d\u4ee4\u6765\u67e5\u770b\u5e94\u7528\u7684\u4fe1\u606f -p\uff08\u5c0f\u5199\u7684\uff09 \u5219\u53ef\u4ee5\u6307\u5b9a\u8981\u6620\u5c04\u7684\u7aef\u53e3\uff0c\u5e76\u4e14\uff0c\u5728\u4e00\u4e2a\u6307\u5b9a\u7aef\u53e3\u4e0a\u53ea\u53ef\u4ee5\u7ed1\u5b9a\u4e00\u4e2a\u5bb9\u5668\u3002\u652f\u6301 \u7684\u683c\u5f0f\u6709 ip:hostPort:containerPort | ip::containerPort | hostPort:containerPort \u6620\u5c04\u6240\u6709\u63a5\u53e3\u5730\u5740 \u4f7f\u7528 hostPort:containerPort \u683c\u5f0f\u672c\u5730\u7684 5000 \u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u7684 5000 \u7aef\u53e3\uff0c\u53ef\u4ee5\u6267\u884c docker run -d -p 5000:5000 training/webapp python app.py \u6b64\u65f6\u9ed8\u8ba4\u4f1a\u7ed1\u5b9a\u672c\u5730\u6240\u6709\u63a5\u53e3\u4e0a\u7684\u6240\u6709\u5730\u5740 \u6620\u5c04\u5230\u6307\u5b9a\u5730\u5740\u7684\u6307\u5b9a\u7aef\u53e3 \u53ef\u4ee5\u4f7f\u7528 ip:hostPort:containerPort \u683c\u5f0f\u6307\u5b9a\u6620\u5c04\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u5730\u5740\uff0c\u6bd4\u5982 localhost \u5730\u5740 127.0.0.1 \u6620\u5c04\u5230\u6307\u5b9a\u5730\u5740\u7684\u4efb\u610f\u7aef\u53e3 \u4f7f\u7528 ip::containerPort \u7ed1\u5b9a localhost \u7684\u4efb\u610f\u7aef\u53e3\u5230\u5bb9\u5668\u7684 5000 \u7aef\u53e3\uff0c\u672c\u5730\u4e3b\u673a\u4f1a\u81ea\u52a8\u5206\u914d\u4e00\u4e2a\u7aef\u53e3\u3002 \u8fd8\u53ef\u4ee5\u4f7f\u7528 udp \u6807\u8bb0\u6765\u6307\u5b9a udp \u7aef\u53e3 $ docker run -d -p 127.0.0.1:5000:5000/udp training/webapp python app.py \u67e5\u770b\u6620\u5c04\u7aef\u53e3\u914d\u7f6e \u4f7f\u7528 docker port \u6765\u67e5\u770b\u5f53\u524d\u6620\u5c04\u7684\u7aef\u53e3\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u67e5\u770b\u5230\u7ed1\u5b9a\u7684\u5730\u5740 docker port nostalgic_morse 5000 \u5bb9\u5668\u6709\u81ea\u5df1\u7684\u5185\u90e8\u7f51\u7edc\u548c ip \u5730\u5740\uff08\u4f7f\u7528 docker inspect \u53ef\u4ee5\u83b7\u53d6\u6240\u6709\u7684\u53d8\u91cf\uff0cDocker\u8fd8\u53ef\u4ee5\u6709\u4e00\u4e2a\u53ef\u53d8\u7684\u7f51\u7edc\u914d\u7f6e\uff09 -p \u6807\u8bb0\u53ef\u4ee5\u591a\u6b21\u4f7f\u7528\u6765\u7ed1\u5b9a\u591a\u4e2a\u7aef\u53e3 \u5bb9\u5668\u4e92\u8054 \u5bb9\u5668\u7684\u8fde\u63a5\uff08linking\uff09 \u7cfb\u7edf\u662f\u9664\u4e86\u7aef\u53e3\u6620\u5c04\u5916\uff0c\u53e6\u4e00\u79cd\u8ddf\u5bb9\u5668\u4e2d\u5e94\u7528\u4ea4\u4e92\u7684\u65b9\u5f0f\u3002\u8be5\u7cfb\u7edf\u4f1a\u5728\u6e90\u548c\u63a5\u6536\u5bb9\u5668\u4e4b\u95f4\u521b\u5efa\u4e00\u4e2a\u96a7\u9053\uff0c\u63a5\u6536\u5bb9\u5668\u53ef\u4ee5\u770b\u5230\u6e90\u5bb9\u5668\u6307\u5b9a\u7684\u4fe1\u606f\u3002 \u81ea\u5b9a\u4e49\u5bb9\u5668\u547d\u540d \u8fde\u63a5\u7cfb\u7edf\u4f9d\u636e\u5bb9\u5668\u7684\u540d\u79f0\u6765\u6267\u884c\u3002\u56e0\u6b64\uff0c\u9996\u5148\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u597d\u8bb0\u7684\u5bb9\u5668\u547d\u540d\u3002 \u867d\u7136\u5f53\u521b\u5efa\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u5206\u914d\u4e00\u4e2a\u540d\u5b57\u3002\u81ea\u5b9a\u4e49\u547d\u540d\u5bb9\u5668\u67092\u4e2a\u597d\u5904\uff1a \u81ea\u5b9a\u4e49\u7684\u547d\u540d\uff0c\u6bd4\u8f83\u597d\u8bb0\uff0c\u6bd4\u5982\u4e00\u4e2aweb\u5e94\u7528\u5bb9\u5668\u6211\u4eec\u53ef\u4ee5\u7ed9\u5b83\u8d77\u540d\u53ebweb \u5f53\u8981\u8fde\u63a5\u5176\u4ed6\u5bb9\u5668\u65f6\u5019\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u6709\u7528\u7684\u53c2\u8003\u70b9\uff0c\u6bd4\u5982\u8fde\u63a5web\u5bb9\u5668\u5230db\u5bb9\u5668 \u4f7f\u7528 --name \u6807\u8bb0\u53ef\u4ee5\u4e3a\u5bb9\u5668\u81ea\u5b9a\u4e49\u547d\u540d\u3002 $ docker run -d -P --name web training/webapp python app.py \u5728\u6267\u884c docker run \u7684\u65f6\u5019\u5982\u679c\u6dfb\u52a0 --rm \u6807\u8bb0\uff0c\u5219\u5bb9\u5668\u5728\u7ec8\u6b62\u540e\u4f1a\u7acb\u523b\u5220\u9664 --rm \u548c -d \u53c2\u6570\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528 \u5bb9\u5668\u4e92\u8054 \u4f7f\u7528 --link \u53c2\u6570\u53ef\u4ee5\u8ba9\u5bb9\u5668\u4e4b\u95f4\u5b89\u5168\u7684\u8fdb\u884c\u4ea4\u4e92 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 web \u5bb9\u5668\uff0c\u5e76\u5c06\u5b83\u8fde\u63a5\u5230 db \u5bb9\u5668 $ docker run -d -P --name web --link db:db training/webapp python app.py --link \u53c2\u6570\u7684\u683c\u5f0f\u4e3a --link name:alias \uff0c\u5176\u4e2d name \u662f\u8981\u94fe\u63a5\u7684\u5bb9\u5668\u7684\u540d\u79f0\uff0c alias \u662f\u8fd9\u4e2a\u8fde\u63a5\u7684\u522b\u540d Docker \u5728\u4e24\u4e2a\u4e92\u8054\u7684\u5bb9\u5668\u4e4b\u95f4\u521b\u5efa\u4e86\u4e00\u4e2a\u5b89\u5168\u96a7\u9053\uff0c\u800c\u4e14\u4e0d\u7528\u6620\u5c04\u5b83\u4eec\u7684\u7aef\u53e3\u5230\u5bbf\u4e3b\u4e3b\u673a\u4e0a\u3002\u5728\u542f\u52a8 db \u5bb9\u5668\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u4f7f\u7528 -p \u548c -P \u6807\u8bb0\uff0c\u4ece\u800c\u907f\u514d\u4e86\u66b4\u9732\u6570\u636e\u5e93\u7aef\u53e3\u5230\u5916\u90e8\u7f51\u7edc\u4e0a Docker \u901a\u8fc7 2 \u79cd\u65b9\u5f0f\u4e3a\u5bb9\u5668\u516c\u5f00\u8fde\u63a5\u4fe1\u606f\uff1a \u73af\u5883\u53d8\u91cf \u66f4\u65b0 /etc/hosts \u6587\u4ef6 \u4f7f\u7528 env \u547d\u4ee4\u6765\u67e5\u770b web \u5bb9\u5668\u7684\u73af\u5883\u53d8\u91cf docker run --rm --name web2 --link db:db training/webapp env \u9664\u4e86\u73af\u5883\u53d8\u91cf\uff0cDocker \u8fd8\u6dfb\u52a0 host \u4fe1\u606f\u5230\u7236\u5bb9\u5668\u7684 /etc/hosts \u7684\u6587\u4ef6 \u5bb9\u5668\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc \u5bb9\u5668\u8981\u60f3\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc\uff0c\u9700\u8981\u672c\u5730\u7cfb\u7edf\u7684\u8f6c\u53d1\u652f\u6301\u3002\u5728Linux \u7cfb\u7edf\u4e2d\uff0c\u68c0\u67e5\u8f6c\u53d1\u662f\u5426\u6253\u5f00\u3002 $sysctl net.ipv4.ip_forward net.ipv4.ip_forward = 1 \u5982\u679c\u4e3a 0\uff0c\u8bf4\u660e\u6ca1\u6709\u5f00\u542f\u8f6c\u53d1\uff0c\u5219\u9700\u8981\u624b\u52a8\u6253\u5f00\u3002 $sysctl -w net.ipv4.ip_forward=1 \u5982\u679c\u5728\u542f\u52a8 Docker \u670d\u52a1\u7684\u65f6\u5019\u8bbe\u5b9a --ip-forward=true , Docker \u5c31\u4f1a\u81ea\u52a8\u8bbe\u5b9a\u7cfb\u7edf\u7684ip_forward \u53c2\u6570\u4e3a 1 \u4f7f\u7528 dockerfile \u5b9a\u5236\u955c\u50cf \u955c\u50cf\u7684\u5b9a\u5236\u5b9e\u9645\u4e0a\u5c31\u662f\u5b9a\u5236\u6bcf\u4e00\u5c42\u6240\u6dfb\u52a0\u7684\u914d\u7f6e\u3001\u6587\u4ef6\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u5c42\u4fee\u6539\u3001\u5b89\u88c5\u3001\u6784\u5efa\u3001\u64cd\u4f5c\u7684\u547d\u4ee4\u90fd\u5199\u5165\u4e00\u4e2a\u811a\u672c\uff0c\u7528\u8fd9\u4e2a\u811a\u672c\u6765\u6784\u5efa\u3001\u5b9a\u5236\u955c\u50cf\uff0c\u90a3\u4e48\u4e4b\u524d\u63d0\u53ca\u7684\u65e0\u6cd5\u91cd\u590d\u7684\u95ee\u9898\u3001\u955c\u50cf\u6784\u5efa\u900f\u660e\u6027\u7684\u95ee\u9898\u3001\u4f53\u79ef\u7684\u95ee\u9898\u5c31\u90fd\u4f1a\u89e3\u51b3\u3002\u8fd9\u4e2a\u811a\u672c\u5c31\u662f Dockerfile Dockerfile \u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5176\u5185\u5305\u542b\u4e86\u4e00\u6761\u6761\u7684\u6307\u4ee4(Instruction)\uff0c\u6bcf\u4e00\u6761\u6307\u4ee4\u6784\u5efa\u4e00\u5c42\uff0c\u56e0\u6b64\u6bcf\u4e00\u6761\u6307\u4ee4\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u63cf\u8ff0\u8be5\u5c42\u5e94\u5f53\u5982\u4f55\u6784\u5efa FROM FROM \u5c31\u662f\u6307\u5b9a\u57fa\u7840\u955c\u50cf\uff0c\u56e0\u6b64\u4e00\u4e2a Dockerfile \u4e2d FROM \u662f\u5fc5\u5907\u7684\u6307\u4ee4\uff0c\u5e76\u4e14\u5fc5\u987b\u662f\u7b2c\u4e00\u6761\u6307\u4ee4 \u9664\u4e86\u9009\u62e9\u73b0\u6709\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\u5916\uff0cDocker \u8fd8\u5b58\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u955c\u50cf\uff0c\u540d\u4e3a scratch \u3002\u8fd9\u4e2a\u955c\u50cf\u662f\u865a\u62df\u7684\u6982\u5ff5\uff0c\u5e76\u4e0d\u5b9e\u9645\u5b58\u5728\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u7a7a\u767d\u7684\u955c\u50cf\uff0c\u5982\u679c\u4f60\u4ee5 scratch \u4e3a\u57fa\u7840\u955c\u50cf\u7684\u8bdd\uff0c\u610f\u5473\u7740\u4f60\u4e0d\u4ee5\u4efb\u4f55\u955c\u50cf\u4e3a\u57fa\u7840\uff0c\u63a5\u4e0b\u6765\u6240\u5199\u7684\u6307\u4ee4\u5c06\u4f5c\u4e3a\u955c\u50cf\u7b2c\u4e00\u5c42\u5f00\u59cb\u5b58\u5728 \u5bf9\u4e8e Linux \u4e0b\u9759\u6001\u7f16\u8bd1\u7684\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5e76\u4e0d\u9700\u8981\u6709\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u8fd0\u884c\u65f6\u652f\u6301\uff0c\u6240\u9700\u7684\u4e00\u5207\u5e93\u90fd\u5df2\u7ecf\u5728\u53ef\u6267\u884c\u6587\u4ef6\u91cc\u4e86\uff0c\u56e0\u6b64\u76f4\u63a5 FROM scratch \u4f1a\u8ba9\u955c\u50cf\u4f53\u79ef\u66f4\u52a0\u5c0f\u5de7\u3002\u4f7f\u7528 Go \u8bed\u8a00 \u5f00\u53d1\u7684\u5e94\u7528\u5f88\u591a\u4f1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u5236\u4f5c\u955c\u50cf\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6709\u4eba\u8ba4\u4e3a Go \u662f\u7279\u522b\u9002\u5408\u5bb9\u5668\u5fae\u670d\u52a1\u67b6\u6784\u7684\u8bed\u8a00\u7684\u539f\u56e0\u4e4b\u4e00 RUN RUN \u6307\u4ee4\u662f\u7528\u6765\u6267\u884c\u547d\u4ee4\u884c\u547d\u4ee4\u7684\u3002\u7531\u4e8e\u547d\u4ee4\u884c\u7684\u5f3a\u5927\u80fd\u529b\uff0c RUN \u6307\u4ee4\u5728\u5b9a\u5236\u955c\u50cf\u65f6\u662f\u6700\u5e38\u7528\u7684\u6307\u4ee4\u4e4b\u4e00 \u683c\u5f0f shell \u683c\u5f0f\uff1a RUN <\u547d\u4ee4> \uff0c\u5c31\u50cf\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u7684\u547d\u4ee4\u4e00\u6837 RUN echo '<h1>Hello, Docker!</h1>' > /usr/share/nginx/html/index.html * exec \u683c\u5f0f\uff1a RUN [\"\u53ef\u6267\u884c\u6587\u4ef6\", \"\u53c2\u65701\", \"\u53c2\u65702\"] \uff0c\u8fd9\u66f4\u50cf\u662f\u51fd\u6570\u8c03\u7528\u4e2d\u7684\u683c\u5f0f * **Dockerfile \u4e2d\u6bcf\u4e00\u4e2a\u6307\u4ee4\u90fd\u4f1a\u5efa\u7acb\u4e00\u5c42\uff0c RUN \u4e5f\u4e0d\u4f8b\u5916** \u4f7f\u7528\u4e00\u4e2a RUN \u6307\u4ee4\uff0c\u5e76\u4f7f\u7528 && \u5c06\u5404\u4e2a\u6240\u9700\u547d\u4ee4\u4e32\u8054\u8d77\u6765\u3002\u5c06\u4e4b\u524d\u7684 7 \u5c42\uff0c\u7b80\u5316\u4e3a\u4e861 \u5c42\u3002\u5728\u64b0\u5199 Dockerfile \u7684\u65f6\u5019\uff0c\u8981\u7ecf\u5e38\u63d0\u9192\u81ea\u5df1\uff0c\u8fd9\u5e76\u4e0d\u662f\u5728\u5199 Shell \u811a\u672c\uff0c\u800c\u662f\u5728\u5b9a\u4e49\u6bcf\u4e00\u5c42\u8be5\u5982\u4f55\u6784\u5efa\u3002\u6362\u884c\u7b26 \\ Dockerfile \u652f\u6301 Shell \u7c7b\u7684\u884c\u5c3e\u6dfb\u52a0 \\ \u7684\u547d\u4ee4\u6362\u884c\u65b9\u5f0f\uff0c\u4ee5\u53ca\u884c\u9996 # \u8fdb\u884c\u6ce8\u91ca\u7684\u683c\u5f0f\u3002\u826f\u597d\u7684\u683c\u5f0f\uff0c\u6bd4\u5982\u6362\u884c\u3001\u7f29\u8fdb\u3001\u6ce8\u91ca\u7b49\uff0c\u4f1a\u8ba9\u7ef4\u62a4\u3001\u6392\u969c\u66f4\u4e3a\u5bb9\u6613\uff0c\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u4e60\u60ef\u3002 FROM debian:jessie RUN buildDeps='gcc libc6-dev make' \\ && apt-get update \\ && apt-get install -y $buildDeps \\ && wget -O redis.tar.gz \"http://download.redis && mkdir -p /usr/src/redis \\ && tar -xzf redis.tar.gz -C /usr/src/redis --s && make -C /usr/src/redis \\ && make -C /usr/src/redis install \\ && rm -rf /var/lib/apt/lists/* \\ && rm redis.tar.gz \\ && rm -r /usr/src/redis \\ && apt-get purge -y --auto-remove $buildDeps \u8fd9\u4e00\u7ec4\u547d\u4ee4\u7684\u6700\u540e\u6dfb\u52a0\u4e86\u6e05\u7406\u5de5\u4f5c\u7684\u547d\u4ee4\uff0c\u5220\u9664\u4e86\u4e3a\u4e86\u7f16\u8bd1\u6784\u5efa\u6240\u9700\u8981\u7684\u8f6f\u4ef6\uff0c\u6e05\u7406\u4e86\u6240\u6709\u4e0b\u8f7d\u3001\u5c55\u5f00\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd8\u6e05\u7406\u4e86 apt \u7f13\u5b58\u6587\u4ef6\u3002\u8fd9\u662f\u5f88\u91cd\u8981\u7684\u4e00\u6b65\uff0c\u6211 \u4eec\u4e4b\u524d\u8bf4\u8fc7\uff0c \u955c\u50cf\u662f\u591a\u5c42\u5b58\u50a8\uff0c\u6bcf\u4e00\u5c42\u7684\u4e1c\u897f\u5e76\u4e0d\u4f1a\u5728\u4e0b\u4e00\u5c42\u88ab\u5220\u9664\uff0c\u4f1a\u4e00\u76f4\u8ddf\u968f\u7740\u955c\u50cf\u3002 ++==\u56e0\u6b64\u955c\u50cf\u6784\u5efa\u65f6\uff0c\u4e00\u5b9a\u8981\u786e\u4fdd\u6bcf\u4e00\u5c42\u53ea\u6dfb\u52a0\u771f\u6b63\u9700\u8981\u6dfb\u52a0\u7684\u4e1c\u897f\uff0c\u4efb\u4f55\u65e0\u5173\u7684\u4e1c\u897f\u90fd\u5e94\u8be5\u6e05\u7406\u6389==++ \u6784\u5efa\u955c\u50cf \u5728 Dockerfile \u6587\u4ef6\u6240\u5728\u76ee\u5f55\u6267\u884c\uff1a docker build -t \u4ed3\u5e93\u540d:tag docker build [\u9009\u9879] <\u4e0a\u4e0b\u6587\u8def\u5f84/URL/-> \u955c\u50cf\u6784\u5efa\u4e0a\u4e0b\u6587\uff08Context\uff09 \u5982\u679c\u6ce8\u610f\uff0c\u4f1a\u770b\u5230 docker build \u547d\u4ee4\u6700\u540e\u6709\u4e00\u4e2a . , . \u8868\u793a\u5f53\u524d\u76ee\u5f55\uff0c\u800c Dockerfile \u5c31\u5728\u5f53\u524d\u76ee\u5f55\uff0c\u56e0\u6b64\u4e0d\u5c11\u521d\u5b66\u8005\u4ee5\u4e3a\u8fd9\u4e2a\u8def\u5f84\u662f\u5728\u6307\u5b9a Dockerfile \u6240\u5728\u8def\u5f84\uff0c\u8fd9\u4e48\u7406\u89e3\u5176\u5b9e\u662f\u4e0d\u51c6\u786e\u7684\u3002\u5982\u679c\u5bf9\u5e94\u4e0a\u9762\u7684\u547d\u4ee4\u683c\u5f0f\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u8fd9\u662f\u5728\u6307\u5b9a\u4e0a\u4e0b\u6587\u8def\u5f84 Docker \u5728\u8fd0\u884c\u65f6\u5206\u4e3a Docker \u5f15\u64ce\uff08\u4e5f\u5c31\u662f\u670d\u52a1\u7aef\u5b88\u62a4\u8fdb\u7a0b\uff09 \u548c\u5ba2\u6237\u7aef\u5de5\u5177\u3002Docker \u7684\u5f15\u64ce\u63d0\u4f9b\u4e86\u4e00\u7ec4 REST API\uff0c\u88ab\u79f0\u4e3a Docker Remote API\uff0c\u800c\u5982 docker \u547d\u4ee4\u8fd9\u6837\u7684\u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u5219\u662f\u901a\u8fc7\u8fd9\u7ec4 API \u4e0e Docker \u5f15\u64ce\u4ea4\u4e92\uff0c\u4ece\u800c\u5b8c\u6210\u5404\u79cd\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u867d\u7136\u8868\u9762\u4e0a\u6211\u4eec\u597d\u50cf\u662f\u5728\u672c\u673a\u6267\u884c\u5404\u79cd docker \u529f\u80fd\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u4e00\u5207\u90fd\u662f\u4f7f\u7528\u7684\u8fdc\u7a0b\u8c03\u7528\u5f62\u5f0f\u5728\u670d\u52a1\u7aef\uff08Docker \u5f15\u64ce\uff09 \u5b8c\u6210\u3002\u4e5f\u56e0\u4e3a\u8fd9\u79cd C/S \u8bbe\u8ba1\uff0c\u8ba9\u6211\u4eec\u64cd\u4f5c\u8fdc\u7a0b\u670d\u52a1\u5668\u7684 Docker \u5f15\u64ce\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e \u5f53\u6211\u4eec\u8fdb\u884c\u955c\u50cf\u6784\u5efa\u7684\u65f6\u5019\uff0c\u5e76\u975e\u6240\u6709\u5b9a\u5236\u90fd\u4f1a\u901a\u8fc7 RUN \u6307\u4ee4\u5b8c\u6210\uff0c\u7ecf\u5e38\u4f1a\u9700\u8981\u5c06\u4e00\u4e9b\u672c\u5730\u6587\u4ef6\u590d\u5236\u8fdb\u955c\u50cf\uff0c\u6bd4\u5982\u901a\u8fc7 COPY \u6307\u4ee4\u3001 ADD \u6307\u4ee4\u7b49\u3002\u800c docker build \u547d\u4ee4\u6784\u5efa\u955c\u50cf\uff0c\u5176\u5b9e\u5e76\u975e\u5728\u672c\u5730\u6784\u5efa\uff0c\u800c\u662f\u5728\u670d\u52a1\u7aef\uff0c\u4e5f\u5c31\u662f Docker \u5f15\u64ce\u4e2d\u6784\u5efa\u7684 \u5f53\u6784\u5efa\u7684\u65f6\u5019\uff0c\u7528\u6237\u4f1a\u6307\u5b9a\u6784\u5efa\u955c\u50cf\u4e0a\u4e0b\u6587\u7684\u8def\u5f84\uff0c docker build \u547d\u4ee4\u5f97\u77e5\u8fd9\u4e2a\u8def\u5f84\u540e\uff0c\u4f1a\u5c06\u8def\u5f84\u4e0b\u7684\u6240\u6709\u5185\u5bb9\u6253\u5305\uff0c\u7136\u540e\u4e0a\u4f20\u7ed9 Docker \u5f15\u64ce\u3002\u8fd9\u6837 Docker \u5f15\u64ce\u6536\u5230\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u5305\u540e\uff0c\u5c31\u4f1a\u83b7\u5f97\u6784\u5efa\u955c\u50cf\u6240\u9700\u7684\u4e00\u5207\u6587\u4ef6\u3002 COPY ./package.json /app/ \u8fd9\u5e76\u4e0d\u662f\u8981\u590d\u5236\u6267\u884c docker build \u547d\u4ee4\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u7684 package.json \uff0c\u4e5f\u4e0d\u662f\u590d\u5236 Dockerfile \u6240\u5728\u76ee\u5f55\u4e0b\u7684 package.json \uff0c\u800c\u662f\u590d\u5236 \u4e0a\u4e0b\u6587\uff08context\uff09 \u76ee\u5f55\u4e0b\u7684 package.json COPY \u8fd9\u7c7b\u6307\u4ee4\u4e2d\u7684\u6e90\u6587\u4ef6\u7684\u8def\u5f84\u90fd\u662f\u76f8\u5bf9\u8def\u5f84\u3002COPY ../package.json /app \u6216\u8005 COPY /opt/xxxx /app \u65e0\u6cd5\u5de5\u4f5c\u7684\u662f\u56e0\u4e3a\u8fd9\u4e9b\u8def\u5f84\u5df2\u7ecf \u8d85\u51fa\u4e86\u4e0a\u4e0b\u6587\u7684\u8303\u56f4\uff0cDocker \u5f15\u64ce\u65e0\u6cd5\u83b7\u5f97\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u6587\u4ef6\u3002\u5982\u679c\u771f\u7684\u9700\u8981\u90a3\u4e9b\u6587\u4ef6\uff0c\u5e94\u8be5\u5c06\u5b83\u4eec\u590d\u5236\u5230\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d\u53bb \u4e00\u822c\u6765\u8bf4\uff0c\u5e94\u8be5\u4f1a\u5c06 Dockerfile \u7f6e\u4e8e\u4e00\u4e2a\u7a7a\u76ee\u5f55\u4e0b\uff0c\u6216\u8005\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u3002\u5982\u679c\u8be5\u76ee\u5f55\u4e0b\u6ca1\u6709\u6240\u9700\u6587\u4ef6\uff0c\u90a3\u4e48\u5e94\u8be5\u628a\u6240\u9700\u6587\u4ef6\u590d\u5236\u4e00\u4efd\u8fc7\u6765\u3002\u5982\u679c\u76ee\u5f55\u4e0b\u6709\u4e9b\u4e1c\u897f\u786e\u5b9e\u4e0d\u5e0c\u671b\u6784\u5efa\u65f6\u4f20\u7ed9 Docker \u5f15\u64ce\uff0c\u90a3\u4e48 \u53ef\u4ee5\u7528 .gitignore \u4e00\u6837\u7684\u8bed\u6cd5\u5199\u4e00\u4e2a .dockerignore \uff0c\u8be5\u6587\u4ef6\u662f\u7528\u4e8e\u5254\u9664\u4e0d\u9700\u8981\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u4f20\u9012\u7ed9 Docker \u5f15\u64ce\u7684 Dockerfile \u7684\u6587\u4ef6\u540d\u5e76\u4e0d\u8981\u6c42\u5fc5\u987b\u4e3a Dockerfile \uff0c\u800c\u4e14\u5e76\u4e0d\u8981\u6c42\u5fc5\u987b\u4f4d\u4e8e\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d\uff0c\u6bd4\u5982\u53ef\u4ee5\u7528 -f ../Dockerfile.php \u53c2\u6570\u6307\u5b9a\u67d0\u4e2a\u6587\u4ef6\u4f5c\u4e3aDockerfile \u76f4\u63a5\u7528 Git repo \u8fdb\u884c\u6784\u5efa $ docker build https://github.com/twang2218/gitlab-ce-zh.git#:8.14 \u8fd9\u884c\u547d\u4ee4\u6307\u5b9a\u4e86\u6784\u5efa\u6240\u9700\u7684 Git repo\uff0c\u5e76\u4e14\u6307\u5b9a\u9ed8\u8ba4\u7684 master \u5206\u652f\uff0c\u6784\u5efa\u76ee\u5f55\u4e3a /8.14/ \uff0c\u7136\u540e Docker \u5c31\u4f1a\u81ea\u5df1\u53bb git clone \u8fd9\u4e2a\u9879\u76ee\u3001\u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\u3001\u5e76\u8fdb\u5165\u5230\u6307\u5b9a\u76ee\u5f55\u540e\u5f00\u59cb\u6784\u5efa \u7528\u7ed9\u5b9a\u7684 tar \u538b\u7f29\u5305\u6784\u5efa $ docker build http://server/context.tar.gz \u5982\u679c\u6240\u7ed9\u51fa\u7684 URL \u4e0d\u662f\u4e2a Git repo\uff0c\u800c\u662f\u4e2a tar \u538b\u7f29\u5305\uff0c\u90a3\u4e48 Docker \u5f15\u64ce\u4f1a\u4e0b\u8f7d\u8fd9\u4e2a\u5305\uff0c\u5e76\u81ea\u52a8\u89e3\u538b\u7f29\uff0c\u4ee5\u5176\u4f5c\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5f00\u59cb\u6784\u5efa \u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6 Dockerfile \u8fdb\u884c\u6784\u5efa docker build - < Dockerfile \u6216 cat Dockerfile | docker build - \u5982\u679c\u6807\u51c6\u8f93\u5165\u4f20\u5165\u7684\u662f\u6587\u672c\u6587\u4ef6\uff0c\u5219\u5c06\u5176\u89c6\u4e3a Dockerfile \uff0c\u5e76\u5f00\u59cb\u6784\u5efa \u3002\u8fd9\u79cd\u5f62\u5f0f\u7531\u4e8e\u76f4\u63a5\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6 Dockerfile \u7684\u5185\u5bb9\uff0c \u5b83\u6ca1\u6709\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u50cf\u5176\u4ed6\u65b9\u6cd5\u90a3\u6837\u53ef\u4ee5\u5c06\u672c\u5730\u6587\u4ef6 COPY \u8fdb\u955c\u50cf\u4e4b\u7c7b\u7684\u4e8b\u60c5 \u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u4e0a\u4e0b\u6587\u538b\u7f29\u5305\u8fdb\u884c\u6784\u5efa $ docker build - < context.tar.gz \u5982\u679c\u53d1\u73b0\u6807\u51c6\u8f93\u5165\u7684\u6587\u4ef6\u683c\u5f0f\u662f gzip \u3001 bzip2 \u4ee5\u53ca xz \u7684\u8bdd\uff0c\u5c06\u4f1a\u4f7f\u5176\u4e3a\u4e0a\u4e0b\u6587\u538b\u7f29\u5305\uff0c\u76f4\u63a5\u5c06\u5176\u5c55\u5f00\uff0c\u5c06\u91cc\u9762\u89c6\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5e76\u5f00\u59cb\u6784\u5efa \u76ee\u524d\u7684\u4e3b\u6d41\u65b9\u6cd5 \u4e00\u822c\u4f7f\u7528 docker + Management Command + Command \u6765\u8fdb\u884c\u64cd\u4f5c COPY \u590d\u5236\u6587\u4ef6 \u683c\u5f0f\uff1a COPY <\u6e90\u8def\u5f84>... <\u76ee\u6807\u8def\u5f84> COPY [\"<\u6e90\u8def\u5f841>\",... \"<\u76ee\u6807\u8def\u5f84>\"] COPY \u6307\u4ee4\u5c06\u4ece\u6784\u5efa\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d <\u6e90\u8def\u5f84> \u7684\u6587\u4ef6/\u76ee\u5f55\u590d\u5236\u5230\u65b0\u7684\u4e00\u5c42\u7684\u955c\u50cf\u5185\u7684 <\u76ee\u6807\u8def\u5f84> \u4f4d\u7f6e COPY package.json /usr/src/app/ <\u6e90\u8def\u5f84> \u53ef\u4ee5\u662f\u591a\u4e2a\uff0c\u751a\u81f3\u53ef\u4ee5\u662f\u901a\u914d\u7b26\uff0c\u5176\u901a\u914d\u7b26\u89c4\u5219\u8981\u6ee1\u8db3 Go \u7684 filepath.Match \u89c4\u5219 \u4f7f\u7528 COPY \u6307\u4ee4\uff0c\u6e90\u6587\u4ef6\u7684\u5404\u79cd\u5143\u6570\u636e\u90fd\u4f1a\u4fdd\u7559\u3002\u6bd4\u5982\u8bfb\u3001\u5199\u3001\u6267\u884c\u6743\u9650\u3001\u6587\u4ef6\u53d8\u66f4\u65f6\u95f4\u7b49 ADD \u66f4\u9ad8\u7ea7\u7684\u590d\u5236\u6587\u4ef6 <\u6e90\u8def\u5f84> \u53ef\u4ee5\u662f\u4e00\u4e2a URL \uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cDocker \u5f15\u64ce\u4f1a\u8bd5\u56fe\u53bb\u4e0b\u8f7d\u8fd9\u4e2a\u94fe\u63a5\u7684\u6587\u4ef6\u653e\u5230 <\u76ee\u6807\u8def\u5f84> \u53bb \u4e0b\u8f7d\u540e\u7684\u6587\u4ef6\u6743\u9650\u81ea\u52a8\u8bbe\u7f6e\u4e3a 600 \uff0c\u5982\u679c\u8fd9\u5e76\u4e0d\u662f\u60f3\u8981\u7684\u6743\u9650\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u589e\u52a0\u989d\u5916\u7684\u4e00\u5c42 RUN \u8fdb\u884c\u6743\u9650\u8c03\u6574 \u5982\u679c\u4e0b\u8f7d\u7684\u662f\u4e2a\u538b\u7f29\u5305\uff0c\u9700\u8981\u89e3\u538b\u7f29\uff0c\u4e5f\u4e00\u6837\u8fd8\u9700\u8981\u989d\u5916\u7684\u4e00\u5c42 RUN \u6307\u4ee4\u8fdb\u884c\u89e3\u538b\u7f29 \u5982\u679c <\u6e90\u8def\u5f84> \u4e3a\u4e00\u4e2a tar \u538b\u7f29\u6587\u4ef6\u7684\u8bdd\uff0c\u538b\u7f29\u683c\u5f0f\u4e3a gzip , bzip2 \u4ee5\u53ca xz \u7684\u60c5\u51b5\u4e0b\uff0c ADD \u6307\u4ee4\u5c06\u4f1a\u81ea\u52a8\u89e3\u538b\u7f29\u8fd9\u4e2a\u538b\u7f29\u6587\u4ef6\u5230 <\u76ee\u6807\u8def\u5f84> \u53bb \u8fd9\u4e2a\u529f\u80fd\u5176\u5b9e\u5e76\u4e0d\u5b9e\u7528\uff0c\u800c\u4e14\u4e0d\u63a8\u8350\u4f7f\u7528 CMD \u5bb9\u5668\u542f\u52a8\u547d\u4ee4 CMD \u6307\u4ee4\u7684\u683c\u5f0f\u548c RUN \u76f8\u4f3c\uff0c\u4e5f\u662f\u4e24\u79cd\u683c\u5f0f\uff1a shell \u683c\u5f0f\uff1a CMD <\u547d\u4ee4> exec \u683c\u5f0f\uff1a CMD [\"\u53ef\u6267\u884c\u6587\u4ef6\", \"\u53c2\u65701\", \"\u53c2\u65702\"...] \u53c2\u6570\u5217\u8868\u683c\u5f0f\uff1a CMD [\"\u53c2\u65701\", \"\u53c2\u65702\"...] \u3002\u5728\u6307\u5b9a\u4e86 ENTRYPOINT \u6307\u4ee4\u540e\uff0c\u7528 CMD \u6307 \u5b9a\u5177\u4f53\u7684\u53c2\u6570 ubuntu \u955c\u50cf\u9ed8\u8ba4\u7684 CMD \u662f /bin/bash Docker \u4e0d\u662f\u865a\u62df\u673a\uff0c\u5bb9\u5668\u4e2d\u7684\u5e94\u7528\u90fd\u5e94\u8be5\u4ee5\u524d\u53f0\u6267\u884c\uff0c\u800c\u4e0d\u662f\u50cf\u865a\u62df\u673a\u3001\u7269\u7406\u673a\u91cc\u9762\u90a3\u6837\uff0c\u7528 upstart/systemd \u53bb\u542f\u52a8\u540e\u53f0\u670d\u52a1\uff0c\u5bb9\u5668\u5185\u6ca1\u6709\u540e\u53f0\u670d\u52a1\u7684\u6982\u5ff5 \u5bf9\u4e8e\u5bb9\u5668\u800c\u8a00\uff0c\u5176\u542f\u52a8\u7a0b\u5e8f\u5c31\u662f\u5bb9\u5668\u5e94\u7528\u8fdb\u7a0b\uff0c\u5bb9\u5668\u5c31\u662f\u4e3a\u4e86\u4e3b\u8fdb\u7a0b\u800c\u5b58\u5728\u7684\uff0c\u4e3b\u8fdb\u7a0b\u9000\u51fa\uff0c\u5bb9\u5668\u5c31\u5931\u53bb\u4e86\u5b58\u5728\u7684\u610f\u4e49\uff0c\u4ece\u800c\u9000\u51fa\uff0c\u5176\u5b83\u8f85\u52a9\u8fdb\u7a0b\u4e0d\u662f\u5b83\u9700\u8981\u5173\u5fc3\u7684\u4e1c\u897f ENTRYPOINT \u5165\u53e3\u70b9 ENTRYPOINT \u7684\u76ee\u7684\u548c CMD \u4e00\u6837\uff0c\u90fd\u662f\u5728\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u7a0b\u5e8f\u53ca\u53c2\u6570 \u5f53\u6307\u5b9a\u4e86 ENTRYPOINT \u540e\uff0c CMD \u7684\u542b\u4e49\u5c31\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u4e0d\u518d\u662f\u76f4\u63a5\u7684\u8fd0\u884c\u5176\u547d\u4ee4\uff0c\u800c\u662f\u5c06CMD \u7684\u5185\u5bb9\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 ENTRYPOINT \u6307\u4ee4 \u5207\u6362\u6743\u9650\uff0c\u9700\u8981\u9884\u5904\u7406\u65f6\uff0c\u4e00\u822c\u4f1a\u4f7f\u7528 ENV \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf ENV ENV = = ... \u65e0\u8bba\u662f\u540e\u9762\u7684\u5176\u5b83\u6307\u4ee4\uff0c\u5982 RUN \uff0c\u8fd8\u662f\u8fd0\u884c\u65f6\u7684\u5e94\u7528\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u91cc\u5b9a\u4e49\u7684\u73af\u5883\u53d8\u91cf \u5bf9\u542b\u6709\u7a7a\u683c\u7684\u503c\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u529e\u6cd5 \u6709\u70b9\u76f8\u5f53\u4e8e\u4e00\u4e2a \u5168\u5c40\u53d8\u91cf \u4e0b\u5217\u6307\u4ee4\u53ef\u4ee5\u652f\u6301\u73af\u5883\u53d8\u91cf\u5c55\u5f00\uff1aADD \u3001 COPY \u3001 ENV \u3001 EXPOSE \u3001 LABEL \u3001 USER \u3001 WORKDIR \u3001 VOLUME \u3001 STOPSIGNAL \u3001 ONBUILD ARG \u6784\u5efa\u53c2\u6570 \u683c\u5f0f\uff1a ARG <\u53c2\u6570\u540d>[=<\u9ed8\u8ba4\u503c>] \u6784\u5efa\u53c2\u6570\u548c ENV \u7684\u6548\u679c\u4e00\u6837\uff0c\u90fd\u662f\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002\u6240\u4e0d\u540c\u7684\u662f\uff0c ARG \u6240\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u5728\u5c06\u6765\u5bb9\u5668\u8fd0\u884c\u65f6\u662f\u4e0d\u4f1a\u5b58\u5728\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u7684\u3002\u4f46\u662f\u4e0d\u8981\u56e0\u6b64\u5c31\u4f7f\u7528 ARG \u4fdd\u5b58\u5bc6\u7801\u4e4b\u7c7b\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a docker history \u8fd8\u662f\u53ef\u4ee5\u770b\u5230\u6240\u6709\u503c\u7684 Dockerfile \u4e2d\u7684 ARG \u6307\u4ee4\u662f\u5b9a\u4e49\u53c2\u6570\u540d\u79f0\uff0c\u4ee5\u53ca\u5b9a\u4e49\u5176\u9ed8\u8ba4\u503c\u3002\u8be5\u9ed8\u8ba4\u503c\u53ef\u4ee5\u5728\u6784\u5efa\u547d\u4ee4 docker build \u4e2d\u7528 --build-arg <\u53c2\u6570\u540d>=<\u503c> \u6765\u8986\u76d6 VOLUME \u5b9a\u4e49\u533f\u540d\u5377 VOLUME [\"<\u8def\u5f841>\", \"<\u8def\u5f842>\"...] VOLUME <\u8def\u5f84> \u4e3a\u4e86\u9632\u6b62\u8fd0\u884c\u65f6\u7528\u6237\u5fd8\u8bb0\u5c06\u52a8\u6001\u6587\u4ef6\u6240\u4fdd\u5b58\u76ee\u5f55\u6302\u8f7d\u4e3a\u5377\uff0c\u5728Dockerfile \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8b\u5148\u6307\u5b9a\u67d0\u4e9b\u76ee\u5f55\u6302\u8f7d\u4e3a\u533f\u540d\u5377\uff0c\u8fd9\u6837\u5728\u8fd0\u884c\u65f6\u5982\u679c\u7528\u6237\u4e0d\u6307\u5b9a\u6302\u8f7d\uff0c\u5176\u5e94\u7528\u4e5f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u4e0d\u4f1a\u5411\u5bb9\u5668\u5b58\u50a8\u5c42\u5199\u5165\u5927\u91cf\u6570\u636e\u3002 VOLUME /data \u8fd9\u91cc\u7684 /data \u76ee\u5f55\u5c31\u4f1a\u5728\u8fd0\u884c\u65f6\u81ea\u52a8\u6302\u8f7d\u4e3a\u533f\u540d\u5377\uff0c\u4efb\u4f55\u5411 /data \u4e2d\u5199\u5165\u7684\u4fe1\u606f\u90fd\u4e0d\u4f1a\u8bb0\u5f55\u8fdb\u5bb9\u5668\u5b58\u50a8\u5c42\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u5bb9\u5668\u5b58\u50a8\u5c42\u7684\u65e0\u72b6\u6001\u5316\u3002\u5f53\u7136\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u8986\u76d6\u8fd9\u4e2a\u6302\u8f7d\u8bbe \u7f6e\u3002\u6bd4\u5982\uff1a docker run -d -v mydata:/data xxxx \u5728\u8fd9\u884c\u547d\u4ee4\u4e2d\uff0c\u5c31\u4f7f\u7528\u4e86 mydata \u8fd9\u4e2a\u547d\u540d\u5377\u6302\u8f7d\u5230\u4e86 /data \u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u66ff\u4ee3\u4e86 Dockerfile \u4e2d\u5b9a\u4e49\u7684\u533f\u540d\u5377\u7684\u6302\u8f7d\u914d\u7f6e EXPOSE \u58f0\u660e\u7aef\u53e3 \u683c\u5f0f\u4e3a EXPOSE <\u7aef\u53e31> [<\u7aef\u53e32>...] EXPOSE \u6307\u4ee4\u662f\u58f0\u660e\u8fd0\u884c\u65f6\u5bb9\u5668\u63d0\u4f9b\u670d\u52a1\u7aef\u53e3\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u58f0\u660e\uff0c\u5728\u8fd0\u884c\u65f6\u5e76\u4e0d\u4f1a\u56e0\u4e3a\u8fd9\u4e2a\u58f0\u660e\u5e94\u7528\u5c31\u4f1a\u5f00\u542f\u8fd9\u4e2a\u7aef\u53e3\u7684\u670d\u52a1\u3002 \u5728 Dockerfile \u4e2d\u5199\u5165\u8fd9\u6837\u7684\u58f0\u660e\u6709\u4e24\u4e2a\u597d\u5904\uff1a \u5e2e\u52a9\u955c\u50cf\u4f7f\u7528\u8005\u7406\u89e3\u8fd9\u4e2a\u955c\u50cf\u670d\u52a1\u7684\u5b88\u62a4\u7aef\u53e3\uff0c\u4ee5\u65b9\u4fbf\u914d\u7f6e\u6620\u5c04 \u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u968f\u673a\u7aef\u53e3\u6620\u5c04\u65f6\uff0c\u4e5f\u5c31\u662f docker run -P \u65f6\uff0c\u4f1a\u81ea\u52a8\u968f\u673a\u6620\u5c04 EXPOSE \u7684\u7aef\u53e3 \u8981\u5c06 EXPOSE \u548c\u5728\u8fd0\u884c\u65f6\u4f7f\u7528 -p <\u5bbf\u4e3b\u7aef\u53e3>:<\u5bb9\u5668\u7aef\u53e3> \u533a\u5206\u5f00\u6765\u3002 -p \uff0c\u662f\u6620\u5c04\u5bbf\u4e3b\u7aef\u53e3\u548c\u5bb9\u5668\u7aef\u53e3\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u5c06\u5bb9\u5668\u7684\u5bf9\u5e94\u7aef\u53e3\u670d\u52a1\u516c\u5f00\u7ed9\u5916\u754c\u8bbf\u95ee\uff0c\u800c EXPOSE \u4ec5\u4ec5\u662f\u58f0\u660e\u5bb9\u5668\u6253\u7b97\u4f7f\u7528\u4ec0\u4e48\u7aef\u53e3\u800c\u5df2\uff0c\u5e76\u4e0d\u4f1a\u81ea\u52a8\u5728\u5bbf\u4e3b\u8fdb\u884c\u7aef\u53e3\u6620\u5c04 WORKDIR \u6307\u5b9a\u5de5\u4f5c\u76ee\u5f55 \u683c\u5f0f\u4e3a WORKDIR <\u5de5\u4f5c\u76ee\u5f55\u8def\u5f84> \u4f7f\u7528 WORKDIR \u6307\u4ee4\u53ef\u4ee5\u6765\u6307\u5b9a\u5de5\u4f5c\u76ee\u5f55\uff08\u6216\u8005\u79f0\u4e3a\u5f53\u524d\u76ee\u5f55\uff09 \uff0c\u4ee5\u540e\u5404\u5c42\u7684\u5f53\u524d\u76ee\u5f55\u5c31\u88ab\u6539\u4e3a\u6307\u5b9a\u7684\u76ee\u5f55\uff0c\u5982\u8be5\u76ee\u5f55\u4e0d\u5b58\u5728\uff0c WORKDIR \u4f1a\u5e2e\u4f60\u5efa\u7acb\u76ee\u5f55 \u5982\u679c\u9700\u8981\u6539\u53d8\u4ee5\u540e\u5404\u5c42\u7684\u5de5\u4f5c\u76ee\u5f55\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5e94\u8be5\u4f7f\u7528 WORKDIR \u6307\u4ee4 USER \u6307\u5b9a\u5f53\u524d\u7528\u6237 \u683c\u5f0f\uff1a USER <\u7528\u6237\u540d> USER \u6307\u4ee4\u548c WORKDIR \u76f8\u4f3c\uff0c\u90fd\u662f\u6539\u53d8\u73af\u5883\u72b6\u6001\u5e76 \u5f71\u54cd\u4ee5\u540e\u7684\u5c42\u3002 WORKDIR \u662f\u6539\u53d8\u5de5\u4f5c\u76ee\u5f55\uff0c USER \u5219\u662f\u6539\u53d8\u4e4b\u540e\u5c42\u7684\u6267\u884c RUN , CMD \u4ee5\u53ca ENTRYPOINT \u8fd9\u7c7b\u547d\u4ee4\u7684\u8eab\u4efd\u3002 \u5f53\u7136\uff0c\u548c WORKDIR \u4e00\u6837\uff0c USER \u53ea\u662f\u5e2e\u52a9\u4f60\u5207\u6362\u5230\u6307\u5b9a\u7528\u6237\u800c\u5df2\uff0c\u8fd9\u4e2a\u7528\u6237\u5fc5\u987b\u662f\u4e8b\u5148\u5efa\u7acb\u597d\u7684\uff0c\u5426\u5219\u65e0\u6cd5\u5207\u6362 HEALTHCHECK \u5065\u5eb7\u68c0\u67e5 \u683c\u5f0f\uff1a HEALTHCHECK [\u9009\u9879] CMD <\u547d\u4ee4> \uff1a\u8bbe\u7f6e\u68c0\u67e5\u5bb9\u5668\u5065\u5eb7\u72b6\u51b5\u7684\u547d\u4ee4 HEALTHCHECK NONE \uff1a\u5982\u679c\u57fa\u7840\u955c\u50cf\u6709\u5065\u5eb7\u68c0\u67e5\u6307\u4ee4\uff0c\u4f7f\u7528\u8fd9\u884c\u53ef\u4ee5\u5c4f\u853d\u6389\u5176\u5065\u5eb7\u68c0\u67e5\u6307\u4ee4 HEALTHCHECK \u6307\u4ee4\u662f\u544a\u8bc9 Docker \u5e94\u8be5\u5982\u4f55\u8fdb\u884c\u5224\u65ad\u5bb9\u5668\u7684\u72b6\u6001\u662f\u5426\u6b63\u5e38 ONBUILD \u4e3a\u4ed6\u4eba\u505a\u5ac1\u8863\u88f3 \u683c\u5f0f\uff1a ONBUILD <\u5176\u5b83\u6307\u4ee4> ONBUILD \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6307\u4ee4\uff0c\u5b83\u540e\u9762\u8ddf\u7684\u662f\u5176\u5b83\u6307\u4ee4\uff0c\u6bd4\u5982 RUN , COPY \u7b49\uff0c\u800c\u8fd9\u4e9b\u6307\u4ee4\uff0c\u5728\u5f53\u524d\u955c\u50cf\u6784\u5efa\u65f6\u5e76\u4e0d\u4f1a\u88ab\u6267\u884c\u3002\u53ea\u6709\u5f53\u4ee5\u5f53\u524d\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\uff0c\u53bb\u6784\u5efa\u4e0b\u4e00\u7ea7\u955c\u50cf\u7684\u65f6\u5019\u624d\u4f1a\u88ab\u6267\u884c \u4fdd\u5b58\u955c\u50cf \u6bd4\u5982\u6211\u4eec\u5e0c\u671b\u4fdd\u5b58\u8fd9\u4e2a alpine \u955c\u50cf \u4fdd\u5b58\u955c\u50cf\u7684\u547d\u4ee4\u4e3a\uff1a $ docker image save alpine | gzip > alpine-latest.tar.gz \u7136\u540e\u6211\u4eec\u5c06 alpine-latest.tar.gz \u6587\u4ef6\u590d\u5236\u5230\u4e86\u5230\u4e86\u53e6\u4e00\u4e2a\u673a\u5668\u4e0a\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u547d\u4ee4\u52a0 \u8f7d\u955c\u50cf\uff1a $ docker load -i alpine-latest.tar.gz \u5982\u679c\u6211\u4eec\u7ed3\u5408\u8fd9\u4e24\u4e2a\u547d\u4ee4\u4ee5\u53ca ssh \u751a\u81f3 pv \u7684\u8bdd\uff0c\u5229\u7528 Linux \u5f3a\u5927\u7684\u7ba1\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2a\u547d\u4ee4\u5b8c\u6210\u4ece\u4e00\u4e2a\u673a\u5668\u5c06\u955c\u50cf\u8fc1\u79fb\u5230\u53e6\u4e00\u4e2a\u673a\u5668\uff0c\u5e76\u4e14\u5e26\u8fdb\u5ea6\u6761\u7684\u529f\u80fd\uff1a docker image save <\u955c\u50cf\u540d> | bzip2 | pv | ssh <\u7528\u6237\u540d>@<\u4e3b\u673a\u540d> 'cat | docker load' \u5220\u9664\u672c\u5730\u955c\u50cf \u5982\u679c\u8981\u5220\u9664\u672c\u5730\u7684\u955c\u50cf\uff0c\u53ef\u4ee5\u4f7f\u7528 docker rmi \u547d\u4ee4\uff0c\u5176\u683c\u5f0f\u4e3a\uff1a docker rmi [\u9009\u9879] <\u955c\u50cf1> [<\u955c\u50cf2> ...] \u6ce8\u610f docker rm \u547d\u4ee4\u662f\u5220\u9664\u5bb9\u5668\uff0c\u4e0d\u8981\u6df7\u6dc6\u3002\u7528 ID\u3001\u955c\u50cf\u540d\u3001\u6458\u8981\u5220\u9664\u955c\u50cf,\u5176\u4e2d\uff0c <\u955c\u50cf> \u53ef\u4ee5\u662f \u955c\u50cf\u77ed ID \u3001 \u955c\u50cf\u957f ID \u3001 \u955c\u50cf\u540d \u6216\u8005 \u955c\u50cf\u6458\u8981 \u955c\u50cf\u7684\u552f\u4e00\u6807\u8bc6\u662f\u5176 ID \u548c\u6458\u8981\uff0c\u800c\u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u6709\u591a\u4e2a\u6807\u7b7e\u3002 \u5e76\u975e\u6240\u6709\u7684 docker rmi \u90fd\u4f1a\u4ea7\u751f\u5220\u9664\u955c\u50cf\u7684\u884c\u4e3a\uff0c\u6709\u53ef\u80fd\u4ec5\u4ec5\u662f\u53d6\u6d88\u4e86\u67d0\u4e2a\u6807\u7b7e\u800c\u5df2\u3002 \u5220\u9664\u955c\u50cf\u7684\u6807\u51c6\u65b9\u5f0f docker images --digests \u67d0\u4e2a\u5176\u5b83\u955c\u50cf\u6b63\u4f9d\u8d56\u4e8e\u5f53\u524d\u955c\u50cf\u7684\u67d0\u4e00\u5c42\u3002\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f9d\u65e7\u4e0d\u4f1a\u89e6\u53d1\u5220\u9664\u8be5\u5c42\u7684\u884c\u4e3a\u3002\u76f4\u5230\u6ca1\u6709\u4efb\u4f55\u5c42\u4f9d\u8d56\u5f53\u524d\u5c42\u65f6\uff0c\u624d\u4f1a\u771f\u5b9e\u7684\u5220\u9664\u5f53\u524d\u5c42 \u5982\u679c\u6709\u7528\u8fd9\u4e2a\u955c\u50cf\u542f\u52a8\u7684\u5bb9\u5668\u5b58\u5728\uff08\u5373\u4f7f\u5bb9\u5668\u6ca1\u6709\u8fd0\u884c\uff09 \uff0c\u90a3\u4e48\u540c\u6837\u4e0d\u53ef\u4ee5\u5220\u9664\u8fd9\u4e2a\u955c\u50cf\u3002\u5bb9\u5668\u662f\u4ee5\u955c\u50cf\u4e3a\u57fa\u7840\uff0c\u518d\u52a0\u4e00\u5c42\u5bb9\u5668\u5b58\u50a8\u5c42\uff0c\u7ec4\u6210\u8fd9\u6837\u7684\u591a\u5c42\u5b58\u50a8\u7ed3\u6784\u53bb\u8fd0\u884c\u7684\u3002\u56e0\u6b64\u8be5\u955c\u50cf\u5982\u679c\u88ab\u8fd9\u4e2a\u5bb9\u5668\u6240\u4f9d \u8d56\u7684\uff0c\u90a3\u4e48\u5220\u9664\u5fc5\u7136\u4f1a\u5bfc\u81f4\u6545\u969c\u3002\u5982\u679c\u8fd9\u4e9b\u5bb9\u5668\u662f\u4e0d\u9700\u8981\u7684\uff0c\u5e94\u8be5\u5148\u5c06\u5b83\u4eec\u5220\u9664\uff0c\u7136\u540e\u518d\u6765\u5220\u9664\u955c\u50cf\u3002 docker images -q \u6765\u914d\u5408\u4f7f\u7528 docker rmi \uff0c\u8fd9\u6837\u53ef\u4ee5\u6210\u6279\u7684\u5220\u9664\u5e0c\u671b\u5220\u9664\u7684\u955c\u50cf docker image rm \u63a8\u8350\u65b9\u5f0f","title":"Docker\u57fa\u7840"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#docker","text":"","title":"Docker"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#docker_1","text":"\u56fd\u5185\u6e90 curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \\ \"deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" sudo apt update sudo apt install docker-ce \u4f7f\u7528\u811a\u672c\u81ea\u52a8\u5b89\u88c5 $ curl -fsSL get.docker.com -o get-docker.sh $ sudo sh get-docker.sh --mirror Aliyun \u542f\u52a8 $ sudo systemctl enable docker $ sudo systemctl start docker \u5efa\u7acb docker \u7528\u6237\u7ec4 \u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u4e00\u822c Linux \u7cfb\u7edf\u4e0a\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 root \u7528\u6237\u3002\u56e0\u6b64\uff0c\u66f4\u597d\u5730\u505a\u6cd5\u662f\u5c06\u9700\u8981\u4f7f\u7528 docker\u7684\u7528\u6237\u52a0\u5165 docker\u7528\u6237\u7ec4 $ sudo groupadd docker \u5c06\u5f53\u524d\u7528\u6237\u52a0\u5165 docker \u7ec4 sudo usermod -aG docker $USER \u8bbe\u7f6e\u56fd\u5185\u955c\u50cf Docker \u955c\u50cf\u52a0\u901f\u5668-\u535a\u5ba2-\u4e91\u6816\u793e\u533a-\u963f\u91cc\u4e91 \u60a8\u53ef\u4ee5\u6dfb\u52a0\"https://registry.docker-cn.com\"\u5230registry-mirrors\u6570\u7ec4\u4e2d/etc/docker/daemon.json \u4ee5\u9ed8\u8ba4\u4eceChina\u6ce8\u518c\u8868\u955c\u50cf\u4e2d\u62c9\u53d6\u3002 { \"registry-mirrors\": [ \"https://registry.docker-cn.com\" ] } Registry as a pull through cache | Docker Documentation \u4e4b\u540e\u91cd\u65b0\u542f\u52a8\u670d\u52a1 $ sudo systemctl daemon-reload $ sudo systemctl restart docker","title":"Docker \u57fa\u7840"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_1","text":"dcoker pull [\u9009\u9879] [Docker Registy \u5730\u5740]<\u4ed3\u5e93\u540d>:<tag> Docker Registy \u5730\u5740]\u683c\u5f0f\u4e3a\uff1aIP/\u57df\u540d[:\u7aef\u53e3\u53f7] \u9ed8\u8ba4\u662f docker hub \u4ed3\u5e93\u540d\uff1a\u7528\u6237\u540d/\u8f6f\u4ef6\u540d \u955c\u50cf\u662f\u6709 \u591a\u5c42\u5b58\u50a8 \u6240\u6784\u6210\uff0c\u4e0b\u8f7d\u4e5f\u662f\u4e00\u5c42\u4e00\u5c42\u4e0b\u8f7d\u7684\uff0c\u5e76\u975e\u5355\u4e00\u7684\u6587\u4ef6\uff0c\u4e0b\u8f7d\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u7ed9\u51fa\u6bcf\u4e00\u5c42\u7684ID\u7684\u524d12\u4f4d \u6709\u4e86\u955c\u50cf\u540e\u5c31\u53ef\u4ee5 \u4ee5\u955c\u50cf\u4e3a\u57fa\u7840 \u521b\u5efa\u4e00\u4e2a \u5bb9\u5668 \u6765\u8fd0\u884c","title":"\u83b7\u53d6\u955c\u50cf"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#docker-image","text":"docker image pull ubuntu:17.10 \u62c9\u53d6\u955c\u50cf docker container run -it --rm ubuntu:17.10 bash \u8fd0\u884c\u5bb9\u5668 -it \u4ea4\u4e92\u5f0f\u7684\u7ec8\u7aef --rm \u8fd0\u884c\u5b8c \u5220\u9664 bash \u5bb9\u5668\u5185\u547d\u4ee4 \u5217\u51fa\u955c\u50cf docker images \u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a tag \u5982 ubuntu:17.10 \u548c latest \u662f\u76f8\u540c\u7684 docker system df \u67e5\u770b \u955c\u50cf\uff0c\u5bb9\u5668 \u6240\u5360\u4f53\u79ef \u865a\u60ac\u955c\u50cf\uff1a\u6ca1\u6709\u4ed3\u5e93\u540d\uff0c\u540d\u4f18\u6807\u7b7e\uff0c\u5747\u4e3a none \uff0cdocker pull \u548c docker build \u5747\u4f1a\u5bfc\u81f4\u8fd9\u79cd\u60c5\u51b5 \u56e0\u4e3a\u65b0\u65e7\u955c\u50cf\u540c\u540d\uff0c\u5bfc\u81f4\u65e7\u955c\u50cf\u6210\u4e3a\u865a\u60ac\u955c\u50cf docker images -f dangling=true \u4e13\u95e8\u663e\u793a\u8fd9\u7c7b\u955c\u50cf docker image prunge \u5220\u9664\u865a\u60ac\u955c\u50cf \u4e3a\u4e86\u52a0\u901f\u955c\u50cf\u7684\u6784\u5efa\uff0cDocker\u4f1a\u5229\u7528\u4e2d\u95f4\u5c42\u955c\u50cf\uff0c\u9ed8\u8ba4\u53ea\u663e\u793a\u6700\u9876\u5c42\u955c\u50cf dokcer images -a \u663e\u793a\u4e2d\u95f4\u5c42 \u8fd9\u91cc\u6ca1\u6709\u6807\u7b7e\u7684\u955c\u50cf\u662f\u4e0d\u80fd\u5220\u9664\u7684 \u5217\u51fa\u90e8\u5206\u955c\u50cf docker images ubuntu docker images ubuntu:16.04 docker images -f \u8fc7\u6ee4\u5668 docker images -f since=-mongo:3.2 mongo\u4e4b\u540e\u5efa\u7acb\u7684\u955c\u50cf(before) docker images -q \u53ea\u663e\u793a id docker images --format \"{{.ID}:{.Repository}}\" (GO\u7684\u6a21\u677f\u8bed\u6cd5) Docker 1.13 + dokcer image ls \u955c\u50cf\u662f\u591a\u5c42\u5b58\u50a8\uff0c\u6bcf\u4e00\u5c42\u5728\u5176\u524d\u4e00\u5c42\u57fa\u7840\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u5bb9\u5668\u540c\u6837\u662f \u591a\u5c42\u5b58\u50a8\uff0c\u4ee5\u955c\u50cf\u4e3a\u57fa\u7840\u5c42\uff0c\u5728\u5176\u57fa\u7840\u4e0a\u518d\u52a0\u4e00\u5c42\u4f5c\u4e3a\u5bb9\u5668\u8fd0\u884c\u7684\u5b58\u50a8\u5c42 \u4fee\u6539\u4e86\u5bb9\u5668\u7684\u6587\u4ef6\u4e5f\u5c31\u662f\u6539\u52a8\u4e86\u5bb9\u5668\u7684\u5b58\u50a8\u5c42 docker diff \u67e5\u770b\u6539\u52a8 --name xx \u6307\u5b9a\u5bb9\u5668\u7684\u540d\u5b57\u4e3a xx \uff08\uff09 \u6700\u597d\u6307\u5b9a\u540d\u5b57\u4fbf\u4e8e\u64cd\u4f5c \uff09 docker exec -it containerName bash \u8fdb\u5165\u5bb9\u5668\u5e76\u6267\u884c bash docker commit \u53ef\u4ee5\u964d\u5bb9\u5668\u7684 \u5b58\u50a8\u5c42\u4fdd\u5b58\u4e0b\u6765\u6210\u4e3a\u955c\u50cf\uff0c\u4ee5\u540e\u8fd0\u884c\u8fd9\u4e2a\u65b0\u955c\u50cf\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u62e5\u6709\u539f\u6709\u955c\u50cf\u7684\u6587\u4ef6\u53d8\u5316 docker commit [\u9009\u9879] <\u5bb9\u5668ID\u6216\u8005\u5bb9\u5668\u540d> [<\u4ed3\u5e93\u540d>[: ]] \u5c06\u5bb9\u5668\u4fdd\u5b58\u4e3a\u955c\u50cf docker commit \\ --author \"autuanliu <autuanliu@163.com>\" \\ --message \"fix \" \\ \u53ef\u4ee5\u4e0d\u5199 webserver \\ \u5bb9\u5668\u540d\u5b57 nginx:v2 \u6307\u5b9a\u4ed3\u5e93\u540d:tag \u8fd9\u91cc\u4e00\u5b9a\u8981\u8bb0\u5f97\u5199\u4e00\u4e2a++\u4fdd\u5b58\u811a\u672c++\u554a\uff01\uff01\uff01\u5f88\u5bb9\u6613\u5fd8\u8bb0\u554a\uff0c\u76f4\u63a5\u5c31\u5173\u95ed\u4e86\uff0c\u7136\u540e\u4ec0\u4e48\u4e5f\u6ca1\u6709\u4e86\u554a Docker history \u4ed3\u5e93\u540d:tag \u67e5\u770b\u5386\u53f2 \u4e00\u5b9a\u8981\u614e\u7528 commit \u867d\u7136 commit \u53ef\u4ee5\u6dfb\u52a0\u5185\u5bb9\uff0c\u6784\u5efa\u65b0\u7684\u955c\u50cf\uff0c\u4f46\u662f\u540c\u65f6\u4e5f\u4f1a\u6dfb\u52a0\u4e00\u4e9b\u65e0\u5173\u7d27\u8981\u7684\u4e1c\u897f\uff0c\u662f\u7684\u955c\u50cf\u53d8\u5f97\u81c3\u80bf docker commit \u610f\u5473\u7740\u5bf9\u955c\u50cf\u7684\u64cd\u4f5c\u90fd\u662f\u4e00\u4e2a\u9ed1\u7bb1\u64cd\u4f5c\uff0c\u751f\u6210\u7684\u955c\u50cf\u4e5f\u88ab\u6210\u4e3a\u9ed1\u7bb1\u955c\u50cf\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\u9664\u4e86\u6784\u5efa\u955c\u50cf\u7684\u4eba\u77e5\u9053\u6267\u884c\u4e86\u4ec0\u4e48\u64cd\u4f5c\uff0c\u5176\u4ed6\u4eba\u6839\u672c\u65e0\u4ece\u5f97\u77e5","title":"\u4f7f\u7528 Docker image \u6765\u7ba1\u7406\u955c\u50cf"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#docker_2","text":"\u5bb9\u5668\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u4e00\u4e2a\u6216\u4e00\u7ec4\u5e94\u7528\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u8fd0\u884c\u6001\u73af\u5883","title":"\u64cd\u4f5c Docker \u5bb9\u5668"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_2","text":"\u542f\u52a8\u5bb9\u5668\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u57fa\u4e8e\u955c\u50cf\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\u5e76\u542f\u52a8\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u5c06\u5728\u7ec8\u6b62\u72b6\u6001\uff08stopped\uff09 \u7684\u5bb9\u5668\u91cd\u65b0\u542f\u52a8 docker run -t -i ubuntu:14.04 /bin/bash \u5176\u4e2d\uff0c -t \u9009\u9879\u8ba9Docker\u5206\u914d\u4e00\u4e2a\u4f2a\u7ec8\u7aef\uff08pseudo-tty\uff09 \u5e76\u7ed1\u5b9a\u5230\u5bb9\u5668\u7684\u6807\u51c6\u8f93\u5165\u4e0a\uff0c -i \u5219\u8ba9\u5bb9\u5668\u7684\u6807\u51c6\u8f93\u5165\u4fdd\u6301\u6253\u5f00\u3002\u5728\u4ea4\u4e92\u6a21\u5f0f\u4e0b\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6240\u521b\u5efa\u7684\u7ec8\u7aef\u6765\u8f93\u5165\u547d\u4ee4 \u68c0\u67e5\u672c\u5730\u662f\u5426\u5b58\u5728\u6307\u5b9a\u7684\u955c\u50cf\uff0c\u4e0d\u5b58\u5728\u5c31\u4ece\u516c\u6709\u4ed3\u5e93\u4e0b\u8f7d \u5229\u7528\u955c\u50cf\u521b\u5efa\u5e76\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668 \u5206\u914d\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\uff0c\u5e76\u5728\u53ea\u8bfb\u7684\u955c\u50cf\u5c42\u5916\u9762\u6302\u8f7d\u4e00\u5c42\u53ef\u8bfb\u5199\u5c42 \u4ece\u5bbf\u4e3b\u4e3b\u673a\u914d\u7f6e\u7684\u7f51\u6865\u63a5\u53e3\u4e2d\u6865\u63a5\u4e00\u4e2a\u865a\u62df\u63a5\u53e3\u5230\u5bb9\u5668\u4e2d\u53bb \u4ece\u5730\u5740\u6c60\u914d\u7f6e\u4e00\u4e2a ip \u5730\u5740\u7ed9\u5bb9\u5668 \u6267\u884c\u7528\u6237\u6307\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f \u6267\u884c\u5b8c\u6bd5\u540e\u5bb9\u5668\u88ab\u7ec8\u6b62","title":"\u542f\u52a8\u5bb9\u5668"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_3","text":"\u53ef\u4ee5\u5229\u7528 docker start \u547d\u4ee4\uff0c\u76f4\u63a5\u5c06\u4e00\u4e2a\u5df2\u7ecf\u7ec8\u6b62\u7684\u5bb9\u5668\u542f\u52a8\u8fd0\u884c","title":"\u542f\u52a8\u5df2\u7ec8\u6b62\u5bb9\u5668"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#background","text":"\u66f4\u591a\u7684\u65f6\u5019\uff0c\u9700\u8981\u8ba9 Docker \u5728\u540e\u53f0\u8fd0\u884c\u800c\u4e0d\u662f\u76f4\u63a5\u628a\u6267\u884c\u547d\u4ee4\u7684\u7ed3\u679c\u8f93\u51fa\u5728\u5f53\u524d\u5bbf\u4e3b\u673a\u4e0b\u3002\u6b64\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0 -d \u53c2\u6570\u6765\u5b9e\u73b0 \u8981\u83b7\u53d6\u5bb9\u5668\u7684\u8f93\u51fa\u4fe1\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7 docker logs \u547d\u4ee4 docker logs [container ID or NAMES]","title":"\u540e\u53f0(background)\u8fd0\u884c"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_4","text":"\u53ef\u4ee5\u4f7f\u7528 docker stop \u6765\u7ec8\u6b62\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u3002\u6b64\u5916\uff0c\u5f53Docker\u5bb9\u5668\u4e2d\u6307\u5b9a\u7684\u5e94\u7528\u7ec8\u7ed3\u65f6\uff0c\u5bb9\u5668\u4e5f\u81ea\u52a8\u7ec8\u6b62\u3002 \u4f8b\u5982\u5bf9\u4e8e\u4e0a\u4e00\u7ae0\u8282\u4e2d\u53ea\u542f\u52a8\u4e86\u4e00\u4e2a\u7ec8\u7aef\u7684\u5bb9\u5668\uff0c\u7528\u6237\u901a\u8fc7 exit \u547d\u4ee4\u6216 Ctrl+d \u6765\u9000\u51fa\u7ec8\u7aef\u65f6\uff0c\u6240\u521b\u5efa\u7684\u5bb9\u5668\u7acb\u523b\u7ec8\u6b62\u3002 \u7ec8\u6b62\u72b6\u6001\u7684\u5bb9\u5668\u53ef\u4ee5\u7528 docker ps -a \u547d\u4ee4\u770b\u5230 \u5904\u4e8e\u7ec8\u6b62\u72b6\u6001\u7684\u5bb9\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7 docker start \u547d\u4ee4\u6765\u91cd\u65b0\u542f\u52a8\u3002 docker restart \u547d\u4ee4\u4f1a\u5c06\u4e00\u4e2a\u8fd0\u884c\u6001\u7684\u5bb9\u5668\u7ec8\u6b62\uff0c\u7136\u540e\u518d\u91cd\u65b0\u542f\u52a8\u5b83","title":"\u7ec8\u6b62\u5bb9\u5668"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_5","text":"docker attach name nsenter \u542f\u52a8\u4e00\u4e2a\u65b0\u7684shell\u8fdb\u7a0b(\u9ed8\u8ba4\u662f/bin/bash), \u540c\u65f6\u4f1a\u628a\u8fd9\u4e2a\u65b0\u8fdb\u7a0b\u5207\u6362\u5230\u548c\u76ee\u6807(target)\u8fdb\u7a0b\u76f8\u540c\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u8fdb\u5165\u4e86\u5bb9\u5668\u5185\u90e8\u3002nsenter \u8981\u6b63\u5e38\u5de5\u4f5c\u9700\u8981\u6709 root \u6743\u9650","title":"\u8fdb\u5165\u5bb9\u5668"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_6","text":"\u5982\u679c\u8981\u5bfc\u51fa\u672c\u5730\u67d0\u4e2a\u5bb9\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528 docker export \u547d\u4ee4 docker export cintainerID_name > ubuntu.tar","title":"\u5bfc\u51fa\u5bb9\u5668"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_7","text":"\u53ef\u4ee5\u4f7f\u7528 docker import \u4ece\u5bb9\u5668\u5feb\u7167\u6587\u4ef6\u4e2d\u518d\u5bfc\u5165\u4e3a\u955c\u50cf\uff0c\u4f8b\u5982 $ cat ubuntu.tar | docker import - test/ubuntu:v1.0 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a URL \u6216\u8005\u67d0\u4e2a\u76ee\u5f55\u6765\u5bfc\u5165\uff0c\u4f8b\u5982 docker import http://example.com/exampleimage.tgz example/imagerepo $ docker container export $ docker image import docker container prune \u53ef\u4ee5\u6e05\u7406\u6389\u6240\u6709\u5904\u4e8e\u7ec8\u6b62\u72b6\u6001\u7684\u5bb9\u5668","title":"\u5bfc\u5165\u5bb9\u5668\u5feb\u7167"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_8","text":"\u4e00\u4e2a\u5bb9\u6613\u6df7\u6dc6\u7684\u6982\u5ff5\u662f\u6ce8\u518c\u670d\u52a1\u5668\uff08Registry\uff09 \u3002\u5b9e\u9645\u4e0a\u6ce8\u518c\u670d\u52a1\u5668\u662f\u7ba1\u7406\u4ed3\u5e93\u7684\u5177\u4f53\u670d\u52a1\u5668\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u4e0a\u53ef\u4ee5\u6709\u591a\u4e2a\u4ed3\u5e93\uff0c\u800c\u6bcf\u4e2a\u4ed3\u5e93\u4e0b\u9762\u6709\u591a\u4e2a\u955c\u50cf\u3002\u4ece\u8fd9\u65b9\u9762\u6765\u8bf4\uff0c\u4ed3\u5e93\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u9879\u76ee\u6216\u76ee\u5f55\u3002\u4f8b\u5982\u5bf9\u4e8e\u4ed3\u5e93\u5730\u5740 dl.dockerpool.com/ubuntu \u6765\u8bf4\uff0c dl.dockerpool.com \u662f\u6ce8\u518c\u670d\u52a1\u5668\u5730\u5740\uff0c ubuntu \u662f\u4ed3\u5e93\u540d","title":"\u4ed3\u5e93"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_9","text":"\u53ef\u4ee5\u901a\u8fc7\u6267\u884c docker login \u547d\u4ee4\u4ea4\u4e92\u5f0f\u7684\u8f93\u5165\u7528\u6237\u540d\u53ca\u5bc6\u7801\u6765\u5b8c\u6210\u5728\u547d\u4ee4\u884c\u754c\u9762\u7684\u767b\u5f55\u3002\u767b\u5f55\u6210\u529f\u540e\uff0c\u672c\u5730\u7528\u6237\u76ee\u5f55\u7684 .dockercfg \u4e2d\u5c06\u4fdd\u5b58\u7528\u6237\u7684\u8ba4\u8bc1\u4fe1\u606f docker search \u547d\u4ee4\u6765\u67e5\u627e\u5b98\u65b9\u4ed3\u5e93\u4e2d\u7684\u955c\u50cf\uff0c\u5e76\u5229\u7528 docker pull \u547d\u4ee4\u6765\u5c06\u5b83\u4e0b\u8f7d\u5230\u672c\u5730","title":"\u767b\u5f55"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#docker_3","text":"\u5728\u5bb9\u5668\u4e2d\u7ba1\u7406\u6570\u636e\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u6570\u636e\u5377\uff08Volumes\uff09 \u6302\u8f7d\u4e3b\u673a\u76ee\u5f55 (Bind mounts) * \u4f7f\u7528 docker volume \u5b50\u547d\u4ee4\u6765\u7ba1\u7406 Docker \u6570\u636e\u5377 \u6570\u636e\u5377\u662f\u4e00\u4e2a\u53ef\u4f9b\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u4f7f\u7528\u7684\u7279\u6b8a\u76ee\u5f55\uff0c\u5b83\u7ed5\u8fc7 UFS\uff0c\u53ef\u4ee5\u63d0\u4f9b\u5f88\u591a\u6709\u7528\u7684\u7279\u6027\uff1a \u6570\u636e\u5377\u53ef\u4ee5\u5728\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u548c\u91cd\u7528 \u5bf9\u6570\u636e\u5377\u7684\u4fee\u6539\u4f1a\u7acb\u9a6c\u751f\u6548 \u5bf9\u6570\u636e\u5377\u7684\u66f4\u65b0\uff0c\u4e0d\u4f1a\u5f71\u54cd\u955c\u50cf \u6570\u636e\u5377\u9ed8\u8ba4\u4f1a\u4e00\u76f4\u5b58\u5728\uff0c\u5373\u4f7f\u5bb9\u5668\u88ab\u5220\u9664 \u6570\u636e\u5377\u7684\u4f7f\u7528\uff0c\u7c7b\u4f3c\u4e8e Linux \u4e0b\u5bf9\u76ee\u5f55\u6216\u6587\u4ef6\u8fdb\u884c mount\uff0c\u955c\u50cf\u4e2d\u7684\u88ab\u6307\u5b9a\u4e3a\u6302\u8f7d\u70b9\u7684\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u4f1a\u88ab\u9690\u85cf\u6389\uff0c\u6302\u8f7d\u7684\u6570\u636e\u5377\u7684\u5185\u5bb9\u4f1a\u88ab\u6620\u5c04\u5230\u8be5\u76ee\u5f55 Docker \u65b0\u7528\u6237\u5e94\u8be5\u9009\u62e9 --mount \u53c2\u6570\uff0c\u7ecf\u9a8c\u4e30\u5bcc\u7684 Dcoker \u4f7f\u7528\u8005\u5bf9 -v \u6216\u8005 --volume\u5df2\u7ecf\u5f88\u719f\u6089\u4e86\uff0c\u4f46\u662f\u63a8\u8350\u4f7f\u7528 --volume \u53c2\u6570","title":"Docker \u6570\u636e\u7ba1\u7406"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_10","text":"$ docker volume create my-vol \u67e5\u770b\u6240\u6709\u7684\u6570\u636e\u5377 $ docker volume ls \u67e5\u770b\u6307\u5b9a\u6570\u636e\u5377\u7684\u4fe1\u606f docker volume inspect my-vol","title":"\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5377"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_11","text":"docker volume create --name sharef --opt type=none --opt device=~/home/autuanliu/sharef --opt o=bind","title":"\u521b\u5efa\u4e00\u4e2a\u6307\u5b9a\u4f4d\u7f6e\u7684\u6570\u636e\u5377"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_12","text":"\u5728\u7528 docker run \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u4f7f\u7528 --mount \u6807\u8bb0\u6765\u5c06\u6570\u636e\u5377\u6302\u8f7d\u5230\u5bb9\u5668\u91cc\u3002\u5728\u4e00\u6b21 docker run \u4e2d\u53ef\u4ee5\u6302\u8f7d\u591a\u4e2a\u6570\u636e\u5377 docker run -d -P \\ --name web \\ \u5bb9\u5668\u540d --mount source=my-vol,target=/webapp \\ \u52a0\u8f7d\u4e00\u4e2a\u6570\u636e\u5377\u5230\u5bb9\u5668\u7684 /webapp \u76ee\u5f55 training/webapp \\ \u955c\u50cf\u540d python app.py \\ \u5728 bash \u6267\u884c\u547d\u4ee4 \u67e5\u770b\u6570\u636e\u5377\u7684\u5177\u4f53\u4fe1\u606f $ docker inspect web","title":"\u542f\u52a8\u4e00\u4e2a\u6302\u8f7d\u6570\u636e\u5377\u7684\u5bb9\u5668"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_13","text":"$ docker volume rm my-vol \u6570\u636e\u5377\u662f\u88ab\u8bbe\u8ba1\u7528\u6765 \u6301\u4e45\u5316\u6570\u636e \u7684\uff0c++\u5b83\u7684\u751f\u547d\u5468\u671f\u72ec\u7acb\u4e8e\u5bb9\u5668++\uff0cDocker \u4e0d\u4f1a\u5728\u5bb9\u5668\u88ab\u5220\u9664\u540e\u81ea\u52a8\u5220\u9664\u6570\u636e\u5377\uff0c\u5e76\u4e14\u4e5f\u4e0d\u5b58\u5728\u5783\u573e\u56de\u6536\u8fd9\u6837\u7684\u673a\u5236\u6765\u5904\u7406\u6ca1\u6709\u4efb\u4f55\u5bb9\u5668\u5f15\u7528\u7684\u6570\u636e\u5377\u3002 \u5982\u679c\u9700\u8981\u5728\u5220\u9664\u5bb9\u5668\u7684\u540c\u65f6\u79fb\u9664\u6570\u636e\u5377\u3002\u53ef\u4ee5\u5728\u5220\u9664\u5bb9\u5668\u7684\u65f6\u5019\u4f7f\u7528 docker rm -v \u8fd9\u4e2a\u547d\u4ee4 \u65e0\u4e3b\u7684\u6570\u636e\u5377\u53ef\u80fd\u4f1a\u5360\u636e\u5f88\u591a\u7a7a\u95f4\uff0c\u8981\u6e05\u7406\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4 docker volume prune","title":"\u5220\u9664\u6570\u636e\u5377"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_14","text":"\u4f7f\u7528 --mount \u6807\u8bb0\u53ef\u4ee5\u6307\u5b9a\u6302\u8f7d\u4e00\u4e2a\u672c\u5730\u4e3b\u673a\u7684\u76ee\u5f55\u5230\u5bb9\u5668\u4e2d\u53bb\u3002 $ docker run -d -P \\ --name web \\ # -v /src/webapp:/opt/webapp \\ --mount type=bind,source=/src/webapp,target=/opt/webapp \\ \u52a0\u8f7d\u4e3b\u673a\u7684 /src/webapp \u76ee\u5f55\u5230\u5bb9\u5668\u7684 /opt/webapp \u76ee\u5f55,\u672c \u5730\u76ee\u5f55\u7684\u8def\u5f84\u5fc5\u987b\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u5982\u679c\u76ee\u5f55\u4e0d\u5b58\u5728 Docker \u4f1a\u81ea\u52a8\u4e3a\u4f60\u521b\u5efa\u5b83 training/webapp \\ python app.py Docker \u6302\u8f7d\u4e3b\u673a\u76ee\u5f55\u7684\u9ed8\u8ba4\u6743\u9650\u662f\u8bfb\u5199\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0 readonly \u6307\u5b9a\u4e3a\u53ea\u8bfb --mount type=bind,source=/src/webapp,target=/opt/webapp,readonly","title":"\u6302\u8f7d\u4e00\u4e2a\u4e3b\u673a\u76ee\u5f55\u4f5c\u4e3a\u6570\u636e\u5377"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_15","text":"--mount \u6807\u8bb0\u4e5f\u53ef\u4ee5\u4ece\u4e3b\u673a\u6302\u8f7d\u5355\u4e2a\u6587\u4ef6\u5230\u5bb9\u5668\u4e2d $ docker run --rm -it \\ --mount type=bind,source=~/.bash_history,target=/root/.bash_history \\ ubuntu:17.10 \\ bash \u8fd9\u6837\u5c31\u53ef\u4ee5\u8bb0\u5f55\u5728\u5bb9\u5668\u8f93\u5165\u8fc7\u7684\u547d\u4ee4\u4e86","title":"\u6302\u8f7d\u4e00\u4e2a\u672c\u5730\u4e3b\u673a\u6587\u4ef6\u4f5c\u4e3a\u6570\u636e\u5377"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_16","text":"\u5bb9\u5668\u4e2d\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e9b\u7f51\u7edc\u5e94\u7528\uff0c\u8981\u8ba9\u5916\u90e8\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u5e94\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7 -P \u6216 -p \u53c2\u6570\u6765\u6307\u5b9a\u7aef\u53e3\u6620\u5c04 \u5f53\u4f7f\u7528 -P \u6807\u8bb0\u65f6\uff0cDocker \u4f1a\u968f\u673a\u6620\u5c04\u4e00\u4e2a 49000~49900 \u7684\u7aef\u53e3\u5230\u5185\u90e8\u5bb9\u5668\u5f00\u653e\u7684\u7f51\u7edc\u7aef\u53e3 \u53ef\u4ee5\u901a\u8fc7 docker logs \u547d\u4ee4\u6765\u67e5\u770b\u5e94\u7528\u7684\u4fe1\u606f -p\uff08\u5c0f\u5199\u7684\uff09 \u5219\u53ef\u4ee5\u6307\u5b9a\u8981\u6620\u5c04\u7684\u7aef\u53e3\uff0c\u5e76\u4e14\uff0c\u5728\u4e00\u4e2a\u6307\u5b9a\u7aef\u53e3\u4e0a\u53ea\u53ef\u4ee5\u7ed1\u5b9a\u4e00\u4e2a\u5bb9\u5668\u3002\u652f\u6301 \u7684\u683c\u5f0f\u6709 ip:hostPort:containerPort | ip::containerPort | hostPort:containerPort \u6620\u5c04\u6240\u6709\u63a5\u53e3\u5730\u5740 \u4f7f\u7528 hostPort:containerPort \u683c\u5f0f\u672c\u5730\u7684 5000 \u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u7684 5000 \u7aef\u53e3\uff0c\u53ef\u4ee5\u6267\u884c docker run -d -p 5000:5000 training/webapp python app.py \u6b64\u65f6\u9ed8\u8ba4\u4f1a\u7ed1\u5b9a\u672c\u5730\u6240\u6709\u63a5\u53e3\u4e0a\u7684\u6240\u6709\u5730\u5740 \u6620\u5c04\u5230\u6307\u5b9a\u5730\u5740\u7684\u6307\u5b9a\u7aef\u53e3 \u53ef\u4ee5\u4f7f\u7528 ip:hostPort:containerPort \u683c\u5f0f\u6307\u5b9a\u6620\u5c04\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u5730\u5740\uff0c\u6bd4\u5982 localhost \u5730\u5740 127.0.0.1 \u6620\u5c04\u5230\u6307\u5b9a\u5730\u5740\u7684\u4efb\u610f\u7aef\u53e3 \u4f7f\u7528 ip::containerPort \u7ed1\u5b9a localhost \u7684\u4efb\u610f\u7aef\u53e3\u5230\u5bb9\u5668\u7684 5000 \u7aef\u53e3\uff0c\u672c\u5730\u4e3b\u673a\u4f1a\u81ea\u52a8\u5206\u914d\u4e00\u4e2a\u7aef\u53e3\u3002 \u8fd8\u53ef\u4ee5\u4f7f\u7528 udp \u6807\u8bb0\u6765\u6307\u5b9a udp \u7aef\u53e3 $ docker run -d -p 127.0.0.1:5000:5000/udp training/webapp python app.py \u67e5\u770b\u6620\u5c04\u7aef\u53e3\u914d\u7f6e \u4f7f\u7528 docker port \u6765\u67e5\u770b\u5f53\u524d\u6620\u5c04\u7684\u7aef\u53e3\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u67e5\u770b\u5230\u7ed1\u5b9a\u7684\u5730\u5740 docker port nostalgic_morse 5000 \u5bb9\u5668\u6709\u81ea\u5df1\u7684\u5185\u90e8\u7f51\u7edc\u548c ip \u5730\u5740\uff08\u4f7f\u7528 docker inspect \u53ef\u4ee5\u83b7\u53d6\u6240\u6709\u7684\u53d8\u91cf\uff0cDocker\u8fd8\u53ef\u4ee5\u6709\u4e00\u4e2a\u53ef\u53d8\u7684\u7f51\u7edc\u914d\u7f6e\uff09 -p \u6807\u8bb0\u53ef\u4ee5\u591a\u6b21\u4f7f\u7528\u6765\u7ed1\u5b9a\u591a\u4e2a\u7aef\u53e3","title":"\u5916\u90e8\u8bbf\u95ee\u5bb9\u5668"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_17","text":"\u5bb9\u5668\u7684\u8fde\u63a5\uff08linking\uff09 \u7cfb\u7edf\u662f\u9664\u4e86\u7aef\u53e3\u6620\u5c04\u5916\uff0c\u53e6\u4e00\u79cd\u8ddf\u5bb9\u5668\u4e2d\u5e94\u7528\u4ea4\u4e92\u7684\u65b9\u5f0f\u3002\u8be5\u7cfb\u7edf\u4f1a\u5728\u6e90\u548c\u63a5\u6536\u5bb9\u5668\u4e4b\u95f4\u521b\u5efa\u4e00\u4e2a\u96a7\u9053\uff0c\u63a5\u6536\u5bb9\u5668\u53ef\u4ee5\u770b\u5230\u6e90\u5bb9\u5668\u6307\u5b9a\u7684\u4fe1\u606f\u3002 \u81ea\u5b9a\u4e49\u5bb9\u5668\u547d\u540d \u8fde\u63a5\u7cfb\u7edf\u4f9d\u636e\u5bb9\u5668\u7684\u540d\u79f0\u6765\u6267\u884c\u3002\u56e0\u6b64\uff0c\u9996\u5148\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u597d\u8bb0\u7684\u5bb9\u5668\u547d\u540d\u3002 \u867d\u7136\u5f53\u521b\u5efa\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u5206\u914d\u4e00\u4e2a\u540d\u5b57\u3002\u81ea\u5b9a\u4e49\u547d\u540d\u5bb9\u5668\u67092\u4e2a\u597d\u5904\uff1a \u81ea\u5b9a\u4e49\u7684\u547d\u540d\uff0c\u6bd4\u8f83\u597d\u8bb0\uff0c\u6bd4\u5982\u4e00\u4e2aweb\u5e94\u7528\u5bb9\u5668\u6211\u4eec\u53ef\u4ee5\u7ed9\u5b83\u8d77\u540d\u53ebweb \u5f53\u8981\u8fde\u63a5\u5176\u4ed6\u5bb9\u5668\u65f6\u5019\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u6709\u7528\u7684\u53c2\u8003\u70b9\uff0c\u6bd4\u5982\u8fde\u63a5web\u5bb9\u5668\u5230db\u5bb9\u5668 \u4f7f\u7528 --name \u6807\u8bb0\u53ef\u4ee5\u4e3a\u5bb9\u5668\u81ea\u5b9a\u4e49\u547d\u540d\u3002 $ docker run -d -P --name web training/webapp python app.py \u5728\u6267\u884c docker run \u7684\u65f6\u5019\u5982\u679c\u6dfb\u52a0 --rm \u6807\u8bb0\uff0c\u5219\u5bb9\u5668\u5728\u7ec8\u6b62\u540e\u4f1a\u7acb\u523b\u5220\u9664 --rm \u548c -d \u53c2\u6570\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528","title":"\u5bb9\u5668\u4e92\u8054"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_18","text":"\u4f7f\u7528 --link \u53c2\u6570\u53ef\u4ee5\u8ba9\u5bb9\u5668\u4e4b\u95f4\u5b89\u5168\u7684\u8fdb\u884c\u4ea4\u4e92 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 web \u5bb9\u5668\uff0c\u5e76\u5c06\u5b83\u8fde\u63a5\u5230 db \u5bb9\u5668 $ docker run -d -P --name web --link db:db training/webapp python app.py --link \u53c2\u6570\u7684\u683c\u5f0f\u4e3a --link name:alias \uff0c\u5176\u4e2d name \u662f\u8981\u94fe\u63a5\u7684\u5bb9\u5668\u7684\u540d\u79f0\uff0c alias \u662f\u8fd9\u4e2a\u8fde\u63a5\u7684\u522b\u540d Docker \u5728\u4e24\u4e2a\u4e92\u8054\u7684\u5bb9\u5668\u4e4b\u95f4\u521b\u5efa\u4e86\u4e00\u4e2a\u5b89\u5168\u96a7\u9053\uff0c\u800c\u4e14\u4e0d\u7528\u6620\u5c04\u5b83\u4eec\u7684\u7aef\u53e3\u5230\u5bbf\u4e3b\u4e3b\u673a\u4e0a\u3002\u5728\u542f\u52a8 db \u5bb9\u5668\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u4f7f\u7528 -p \u548c -P \u6807\u8bb0\uff0c\u4ece\u800c\u907f\u514d\u4e86\u66b4\u9732\u6570\u636e\u5e93\u7aef\u53e3\u5230\u5916\u90e8\u7f51\u7edc\u4e0a Docker \u901a\u8fc7 2 \u79cd\u65b9\u5f0f\u4e3a\u5bb9\u5668\u516c\u5f00\u8fde\u63a5\u4fe1\u606f\uff1a \u73af\u5883\u53d8\u91cf \u66f4\u65b0 /etc/hosts \u6587\u4ef6 \u4f7f\u7528 env \u547d\u4ee4\u6765\u67e5\u770b web \u5bb9\u5668\u7684\u73af\u5883\u53d8\u91cf docker run --rm --name web2 --link db:db training/webapp env \u9664\u4e86\u73af\u5883\u53d8\u91cf\uff0cDocker \u8fd8\u6dfb\u52a0 host \u4fe1\u606f\u5230\u7236\u5bb9\u5668\u7684 /etc/hosts \u7684\u6587\u4ef6","title":"\u5bb9\u5668\u4e92\u8054"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_19","text":"\u5bb9\u5668\u8981\u60f3\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc\uff0c\u9700\u8981\u672c\u5730\u7cfb\u7edf\u7684\u8f6c\u53d1\u652f\u6301\u3002\u5728Linux \u7cfb\u7edf\u4e2d\uff0c\u68c0\u67e5\u8f6c\u53d1\u662f\u5426\u6253\u5f00\u3002 $sysctl net.ipv4.ip_forward net.ipv4.ip_forward = 1 \u5982\u679c\u4e3a 0\uff0c\u8bf4\u660e\u6ca1\u6709\u5f00\u542f\u8f6c\u53d1\uff0c\u5219\u9700\u8981\u624b\u52a8\u6253\u5f00\u3002 $sysctl -w net.ipv4.ip_forward=1 \u5982\u679c\u5728\u542f\u52a8 Docker \u670d\u52a1\u7684\u65f6\u5019\u8bbe\u5b9a --ip-forward=true , Docker \u5c31\u4f1a\u81ea\u52a8\u8bbe\u5b9a\u7cfb\u7edf\u7684ip_forward \u53c2\u6570\u4e3a 1","title":"\u5bb9\u5668\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#dockerfile","text":"\u955c\u50cf\u7684\u5b9a\u5236\u5b9e\u9645\u4e0a\u5c31\u662f\u5b9a\u5236\u6bcf\u4e00\u5c42\u6240\u6dfb\u52a0\u7684\u914d\u7f6e\u3001\u6587\u4ef6\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u5c42\u4fee\u6539\u3001\u5b89\u88c5\u3001\u6784\u5efa\u3001\u64cd\u4f5c\u7684\u547d\u4ee4\u90fd\u5199\u5165\u4e00\u4e2a\u811a\u672c\uff0c\u7528\u8fd9\u4e2a\u811a\u672c\u6765\u6784\u5efa\u3001\u5b9a\u5236\u955c\u50cf\uff0c\u90a3\u4e48\u4e4b\u524d\u63d0\u53ca\u7684\u65e0\u6cd5\u91cd\u590d\u7684\u95ee\u9898\u3001\u955c\u50cf\u6784\u5efa\u900f\u660e\u6027\u7684\u95ee\u9898\u3001\u4f53\u79ef\u7684\u95ee\u9898\u5c31\u90fd\u4f1a\u89e3\u51b3\u3002\u8fd9\u4e2a\u811a\u672c\u5c31\u662f Dockerfile Dockerfile \u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5176\u5185\u5305\u542b\u4e86\u4e00\u6761\u6761\u7684\u6307\u4ee4(Instruction)\uff0c\u6bcf\u4e00\u6761\u6307\u4ee4\u6784\u5efa\u4e00\u5c42\uff0c\u56e0\u6b64\u6bcf\u4e00\u6761\u6307\u4ee4\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u63cf\u8ff0\u8be5\u5c42\u5e94\u5f53\u5982\u4f55\u6784\u5efa","title":"\u4f7f\u7528 dockerfile \u5b9a\u5236\u955c\u50cf"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#from","text":"FROM \u5c31\u662f\u6307\u5b9a\u57fa\u7840\u955c\u50cf\uff0c\u56e0\u6b64\u4e00\u4e2a Dockerfile \u4e2d FROM \u662f\u5fc5\u5907\u7684\u6307\u4ee4\uff0c\u5e76\u4e14\u5fc5\u987b\u662f\u7b2c\u4e00\u6761\u6307\u4ee4 \u9664\u4e86\u9009\u62e9\u73b0\u6709\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\u5916\uff0cDocker \u8fd8\u5b58\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u955c\u50cf\uff0c\u540d\u4e3a scratch \u3002\u8fd9\u4e2a\u955c\u50cf\u662f\u865a\u62df\u7684\u6982\u5ff5\uff0c\u5e76\u4e0d\u5b9e\u9645\u5b58\u5728\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u7a7a\u767d\u7684\u955c\u50cf\uff0c\u5982\u679c\u4f60\u4ee5 scratch \u4e3a\u57fa\u7840\u955c\u50cf\u7684\u8bdd\uff0c\u610f\u5473\u7740\u4f60\u4e0d\u4ee5\u4efb\u4f55\u955c\u50cf\u4e3a\u57fa\u7840\uff0c\u63a5\u4e0b\u6765\u6240\u5199\u7684\u6307\u4ee4\u5c06\u4f5c\u4e3a\u955c\u50cf\u7b2c\u4e00\u5c42\u5f00\u59cb\u5b58\u5728 \u5bf9\u4e8e Linux \u4e0b\u9759\u6001\u7f16\u8bd1\u7684\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5e76\u4e0d\u9700\u8981\u6709\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u8fd0\u884c\u65f6\u652f\u6301\uff0c\u6240\u9700\u7684\u4e00\u5207\u5e93\u90fd\u5df2\u7ecf\u5728\u53ef\u6267\u884c\u6587\u4ef6\u91cc\u4e86\uff0c\u56e0\u6b64\u76f4\u63a5 FROM scratch \u4f1a\u8ba9\u955c\u50cf\u4f53\u79ef\u66f4\u52a0\u5c0f\u5de7\u3002\u4f7f\u7528 Go \u8bed\u8a00 \u5f00\u53d1\u7684\u5e94\u7528\u5f88\u591a\u4f1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u5236\u4f5c\u955c\u50cf\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6709\u4eba\u8ba4\u4e3a Go \u662f\u7279\u522b\u9002\u5408\u5bb9\u5668\u5fae\u670d\u52a1\u67b6\u6784\u7684\u8bed\u8a00\u7684\u539f\u56e0\u4e4b\u4e00","title":"FROM"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#run","text":"RUN \u6307\u4ee4\u662f\u7528\u6765\u6267\u884c\u547d\u4ee4\u884c\u547d\u4ee4\u7684\u3002\u7531\u4e8e\u547d\u4ee4\u884c\u7684\u5f3a\u5927\u80fd\u529b\uff0c RUN \u6307\u4ee4\u5728\u5b9a\u5236\u955c\u50cf\u65f6\u662f\u6700\u5e38\u7528\u7684\u6307\u4ee4\u4e4b\u4e00 \u683c\u5f0f shell \u683c\u5f0f\uff1a RUN <\u547d\u4ee4> \uff0c\u5c31\u50cf\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u7684\u547d\u4ee4\u4e00\u6837 RUN echo '<h1>Hello, Docker!</h1>' > /usr/share/nginx/html/index.html * exec \u683c\u5f0f\uff1a RUN [\"\u53ef\u6267\u884c\u6587\u4ef6\", \"\u53c2\u65701\", \"\u53c2\u65702\"] \uff0c\u8fd9\u66f4\u50cf\u662f\u51fd\u6570\u8c03\u7528\u4e2d\u7684\u683c\u5f0f * **Dockerfile \u4e2d\u6bcf\u4e00\u4e2a\u6307\u4ee4\u90fd\u4f1a\u5efa\u7acb\u4e00\u5c42\uff0c RUN \u4e5f\u4e0d\u4f8b\u5916** \u4f7f\u7528\u4e00\u4e2a RUN \u6307\u4ee4\uff0c\u5e76\u4f7f\u7528 && \u5c06\u5404\u4e2a\u6240\u9700\u547d\u4ee4\u4e32\u8054\u8d77\u6765\u3002\u5c06\u4e4b\u524d\u7684 7 \u5c42\uff0c\u7b80\u5316\u4e3a\u4e861 \u5c42\u3002\u5728\u64b0\u5199 Dockerfile \u7684\u65f6\u5019\uff0c\u8981\u7ecf\u5e38\u63d0\u9192\u81ea\u5df1\uff0c\u8fd9\u5e76\u4e0d\u662f\u5728\u5199 Shell \u811a\u672c\uff0c\u800c\u662f\u5728\u5b9a\u4e49\u6bcf\u4e00\u5c42\u8be5\u5982\u4f55\u6784\u5efa\u3002\u6362\u884c\u7b26 \\ Dockerfile \u652f\u6301 Shell \u7c7b\u7684\u884c\u5c3e\u6dfb\u52a0 \\ \u7684\u547d\u4ee4\u6362\u884c\u65b9\u5f0f\uff0c\u4ee5\u53ca\u884c\u9996 # \u8fdb\u884c\u6ce8\u91ca\u7684\u683c\u5f0f\u3002\u826f\u597d\u7684\u683c\u5f0f\uff0c\u6bd4\u5982\u6362\u884c\u3001\u7f29\u8fdb\u3001\u6ce8\u91ca\u7b49\uff0c\u4f1a\u8ba9\u7ef4\u62a4\u3001\u6392\u969c\u66f4\u4e3a\u5bb9\u6613\uff0c\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u4e60\u60ef\u3002 FROM debian:jessie RUN buildDeps='gcc libc6-dev make' \\ && apt-get update \\ && apt-get install -y $buildDeps \\ && wget -O redis.tar.gz \"http://download.redis && mkdir -p /usr/src/redis \\ && tar -xzf redis.tar.gz -C /usr/src/redis --s && make -C /usr/src/redis \\ && make -C /usr/src/redis install \\ && rm -rf /var/lib/apt/lists/* \\ && rm redis.tar.gz \\ && rm -r /usr/src/redis \\ && apt-get purge -y --auto-remove $buildDeps \u8fd9\u4e00\u7ec4\u547d\u4ee4\u7684\u6700\u540e\u6dfb\u52a0\u4e86\u6e05\u7406\u5de5\u4f5c\u7684\u547d\u4ee4\uff0c\u5220\u9664\u4e86\u4e3a\u4e86\u7f16\u8bd1\u6784\u5efa\u6240\u9700\u8981\u7684\u8f6f\u4ef6\uff0c\u6e05\u7406\u4e86\u6240\u6709\u4e0b\u8f7d\u3001\u5c55\u5f00\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd8\u6e05\u7406\u4e86 apt \u7f13\u5b58\u6587\u4ef6\u3002\u8fd9\u662f\u5f88\u91cd\u8981\u7684\u4e00\u6b65\uff0c\u6211 \u4eec\u4e4b\u524d\u8bf4\u8fc7\uff0c \u955c\u50cf\u662f\u591a\u5c42\u5b58\u50a8\uff0c\u6bcf\u4e00\u5c42\u7684\u4e1c\u897f\u5e76\u4e0d\u4f1a\u5728\u4e0b\u4e00\u5c42\u88ab\u5220\u9664\uff0c\u4f1a\u4e00\u76f4\u8ddf\u968f\u7740\u955c\u50cf\u3002 ++==\u56e0\u6b64\u955c\u50cf\u6784\u5efa\u65f6\uff0c\u4e00\u5b9a\u8981\u786e\u4fdd\u6bcf\u4e00\u5c42\u53ea\u6dfb\u52a0\u771f\u6b63\u9700\u8981\u6dfb\u52a0\u7684\u4e1c\u897f\uff0c\u4efb\u4f55\u65e0\u5173\u7684\u4e1c\u897f\u90fd\u5e94\u8be5\u6e05\u7406\u6389==++","title":"RUN"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_20","text":"\u5728 Dockerfile \u6587\u4ef6\u6240\u5728\u76ee\u5f55\u6267\u884c\uff1a docker build -t \u4ed3\u5e93\u540d:tag docker build [\u9009\u9879] <\u4e0a\u4e0b\u6587\u8def\u5f84/URL/->","title":"\u6784\u5efa\u955c\u50cf"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#context","text":"\u5982\u679c\u6ce8\u610f\uff0c\u4f1a\u770b\u5230 docker build \u547d\u4ee4\u6700\u540e\u6709\u4e00\u4e2a . , . \u8868\u793a\u5f53\u524d\u76ee\u5f55\uff0c\u800c Dockerfile \u5c31\u5728\u5f53\u524d\u76ee\u5f55\uff0c\u56e0\u6b64\u4e0d\u5c11\u521d\u5b66\u8005\u4ee5\u4e3a\u8fd9\u4e2a\u8def\u5f84\u662f\u5728\u6307\u5b9a Dockerfile \u6240\u5728\u8def\u5f84\uff0c\u8fd9\u4e48\u7406\u89e3\u5176\u5b9e\u662f\u4e0d\u51c6\u786e\u7684\u3002\u5982\u679c\u5bf9\u5e94\u4e0a\u9762\u7684\u547d\u4ee4\u683c\u5f0f\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u8fd9\u662f\u5728\u6307\u5b9a\u4e0a\u4e0b\u6587\u8def\u5f84 Docker \u5728\u8fd0\u884c\u65f6\u5206\u4e3a Docker \u5f15\u64ce\uff08\u4e5f\u5c31\u662f\u670d\u52a1\u7aef\u5b88\u62a4\u8fdb\u7a0b\uff09 \u548c\u5ba2\u6237\u7aef\u5de5\u5177\u3002Docker \u7684\u5f15\u64ce\u63d0\u4f9b\u4e86\u4e00\u7ec4 REST API\uff0c\u88ab\u79f0\u4e3a Docker Remote API\uff0c\u800c\u5982 docker \u547d\u4ee4\u8fd9\u6837\u7684\u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u5219\u662f\u901a\u8fc7\u8fd9\u7ec4 API \u4e0e Docker \u5f15\u64ce\u4ea4\u4e92\uff0c\u4ece\u800c\u5b8c\u6210\u5404\u79cd\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u867d\u7136\u8868\u9762\u4e0a\u6211\u4eec\u597d\u50cf\u662f\u5728\u672c\u673a\u6267\u884c\u5404\u79cd docker \u529f\u80fd\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u4e00\u5207\u90fd\u662f\u4f7f\u7528\u7684\u8fdc\u7a0b\u8c03\u7528\u5f62\u5f0f\u5728\u670d\u52a1\u7aef\uff08Docker \u5f15\u64ce\uff09 \u5b8c\u6210\u3002\u4e5f\u56e0\u4e3a\u8fd9\u79cd C/S \u8bbe\u8ba1\uff0c\u8ba9\u6211\u4eec\u64cd\u4f5c\u8fdc\u7a0b\u670d\u52a1\u5668\u7684 Docker \u5f15\u64ce\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e \u5f53\u6211\u4eec\u8fdb\u884c\u955c\u50cf\u6784\u5efa\u7684\u65f6\u5019\uff0c\u5e76\u975e\u6240\u6709\u5b9a\u5236\u90fd\u4f1a\u901a\u8fc7 RUN \u6307\u4ee4\u5b8c\u6210\uff0c\u7ecf\u5e38\u4f1a\u9700\u8981\u5c06\u4e00\u4e9b\u672c\u5730\u6587\u4ef6\u590d\u5236\u8fdb\u955c\u50cf\uff0c\u6bd4\u5982\u901a\u8fc7 COPY \u6307\u4ee4\u3001 ADD \u6307\u4ee4\u7b49\u3002\u800c docker build \u547d\u4ee4\u6784\u5efa\u955c\u50cf\uff0c\u5176\u5b9e\u5e76\u975e\u5728\u672c\u5730\u6784\u5efa\uff0c\u800c\u662f\u5728\u670d\u52a1\u7aef\uff0c\u4e5f\u5c31\u662f Docker \u5f15\u64ce\u4e2d\u6784\u5efa\u7684 \u5f53\u6784\u5efa\u7684\u65f6\u5019\uff0c\u7528\u6237\u4f1a\u6307\u5b9a\u6784\u5efa\u955c\u50cf\u4e0a\u4e0b\u6587\u7684\u8def\u5f84\uff0c docker build \u547d\u4ee4\u5f97\u77e5\u8fd9\u4e2a\u8def\u5f84\u540e\uff0c\u4f1a\u5c06\u8def\u5f84\u4e0b\u7684\u6240\u6709\u5185\u5bb9\u6253\u5305\uff0c\u7136\u540e\u4e0a\u4f20\u7ed9 Docker \u5f15\u64ce\u3002\u8fd9\u6837 Docker \u5f15\u64ce\u6536\u5230\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u5305\u540e\uff0c\u5c31\u4f1a\u83b7\u5f97\u6784\u5efa\u955c\u50cf\u6240\u9700\u7684\u4e00\u5207\u6587\u4ef6\u3002 COPY ./package.json /app/ \u8fd9\u5e76\u4e0d\u662f\u8981\u590d\u5236\u6267\u884c docker build \u547d\u4ee4\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u7684 package.json \uff0c\u4e5f\u4e0d\u662f\u590d\u5236 Dockerfile \u6240\u5728\u76ee\u5f55\u4e0b\u7684 package.json \uff0c\u800c\u662f\u590d\u5236 \u4e0a\u4e0b\u6587\uff08context\uff09 \u76ee\u5f55\u4e0b\u7684 package.json COPY \u8fd9\u7c7b\u6307\u4ee4\u4e2d\u7684\u6e90\u6587\u4ef6\u7684\u8def\u5f84\u90fd\u662f\u76f8\u5bf9\u8def\u5f84\u3002COPY ../package.json /app \u6216\u8005 COPY /opt/xxxx /app \u65e0\u6cd5\u5de5\u4f5c\u7684\u662f\u56e0\u4e3a\u8fd9\u4e9b\u8def\u5f84\u5df2\u7ecf \u8d85\u51fa\u4e86\u4e0a\u4e0b\u6587\u7684\u8303\u56f4\uff0cDocker \u5f15\u64ce\u65e0\u6cd5\u83b7\u5f97\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u6587\u4ef6\u3002\u5982\u679c\u771f\u7684\u9700\u8981\u90a3\u4e9b\u6587\u4ef6\uff0c\u5e94\u8be5\u5c06\u5b83\u4eec\u590d\u5236\u5230\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d\u53bb \u4e00\u822c\u6765\u8bf4\uff0c\u5e94\u8be5\u4f1a\u5c06 Dockerfile \u7f6e\u4e8e\u4e00\u4e2a\u7a7a\u76ee\u5f55\u4e0b\uff0c\u6216\u8005\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u3002\u5982\u679c\u8be5\u76ee\u5f55\u4e0b\u6ca1\u6709\u6240\u9700\u6587\u4ef6\uff0c\u90a3\u4e48\u5e94\u8be5\u628a\u6240\u9700\u6587\u4ef6\u590d\u5236\u4e00\u4efd\u8fc7\u6765\u3002\u5982\u679c\u76ee\u5f55\u4e0b\u6709\u4e9b\u4e1c\u897f\u786e\u5b9e\u4e0d\u5e0c\u671b\u6784\u5efa\u65f6\u4f20\u7ed9 Docker \u5f15\u64ce\uff0c\u90a3\u4e48 \u53ef\u4ee5\u7528 .gitignore \u4e00\u6837\u7684\u8bed\u6cd5\u5199\u4e00\u4e2a .dockerignore \uff0c\u8be5\u6587\u4ef6\u662f\u7528\u4e8e\u5254\u9664\u4e0d\u9700\u8981\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u4f20\u9012\u7ed9 Docker \u5f15\u64ce\u7684 Dockerfile \u7684\u6587\u4ef6\u540d\u5e76\u4e0d\u8981\u6c42\u5fc5\u987b\u4e3a Dockerfile \uff0c\u800c\u4e14\u5e76\u4e0d\u8981\u6c42\u5fc5\u987b\u4f4d\u4e8e\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d\uff0c\u6bd4\u5982\u53ef\u4ee5\u7528 -f ../Dockerfile.php \u53c2\u6570\u6307\u5b9a\u67d0\u4e2a\u6587\u4ef6\u4f5c\u4e3aDockerfile \u76f4\u63a5\u7528 Git repo \u8fdb\u884c\u6784\u5efa $ docker build https://github.com/twang2218/gitlab-ce-zh.git#:8.14 \u8fd9\u884c\u547d\u4ee4\u6307\u5b9a\u4e86\u6784\u5efa\u6240\u9700\u7684 Git repo\uff0c\u5e76\u4e14\u6307\u5b9a\u9ed8\u8ba4\u7684 master \u5206\u652f\uff0c\u6784\u5efa\u76ee\u5f55\u4e3a /8.14/ \uff0c\u7136\u540e Docker \u5c31\u4f1a\u81ea\u5df1\u53bb git clone \u8fd9\u4e2a\u9879\u76ee\u3001\u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\u3001\u5e76\u8fdb\u5165\u5230\u6307\u5b9a\u76ee\u5f55\u540e\u5f00\u59cb\u6784\u5efa \u7528\u7ed9\u5b9a\u7684 tar \u538b\u7f29\u5305\u6784\u5efa $ docker build http://server/context.tar.gz \u5982\u679c\u6240\u7ed9\u51fa\u7684 URL \u4e0d\u662f\u4e2a Git repo\uff0c\u800c\u662f\u4e2a tar \u538b\u7f29\u5305\uff0c\u90a3\u4e48 Docker \u5f15\u64ce\u4f1a\u4e0b\u8f7d\u8fd9\u4e2a\u5305\uff0c\u5e76\u81ea\u52a8\u89e3\u538b\u7f29\uff0c\u4ee5\u5176\u4f5c\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5f00\u59cb\u6784\u5efa \u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6 Dockerfile \u8fdb\u884c\u6784\u5efa docker build - < Dockerfile \u6216 cat Dockerfile | docker build - \u5982\u679c\u6807\u51c6\u8f93\u5165\u4f20\u5165\u7684\u662f\u6587\u672c\u6587\u4ef6\uff0c\u5219\u5c06\u5176\u89c6\u4e3a Dockerfile \uff0c\u5e76\u5f00\u59cb\u6784\u5efa \u3002\u8fd9\u79cd\u5f62\u5f0f\u7531\u4e8e\u76f4\u63a5\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6 Dockerfile \u7684\u5185\u5bb9\uff0c \u5b83\u6ca1\u6709\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u50cf\u5176\u4ed6\u65b9\u6cd5\u90a3\u6837\u53ef\u4ee5\u5c06\u672c\u5730\u6587\u4ef6 COPY \u8fdb\u955c\u50cf\u4e4b\u7c7b\u7684\u4e8b\u60c5 \u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u4e0a\u4e0b\u6587\u538b\u7f29\u5305\u8fdb\u884c\u6784\u5efa $ docker build - < context.tar.gz \u5982\u679c\u53d1\u73b0\u6807\u51c6\u8f93\u5165\u7684\u6587\u4ef6\u683c\u5f0f\u662f gzip \u3001 bzip2 \u4ee5\u53ca xz \u7684\u8bdd\uff0c\u5c06\u4f1a\u4f7f\u5176\u4e3a\u4e0a\u4e0b\u6587\u538b\u7f29\u5305\uff0c\u76f4\u63a5\u5c06\u5176\u5c55\u5f00\uff0c\u5c06\u91cc\u9762\u89c6\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5e76\u5f00\u59cb\u6784\u5efa \u76ee\u524d\u7684\u4e3b\u6d41\u65b9\u6cd5 \u4e00\u822c\u4f7f\u7528 docker + Management Command + Command \u6765\u8fdb\u884c\u64cd\u4f5c","title":"\u955c\u50cf\u6784\u5efa\u4e0a\u4e0b\u6587\uff08Context\uff09"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#copy","text":"\u683c\u5f0f\uff1a COPY <\u6e90\u8def\u5f84>... <\u76ee\u6807\u8def\u5f84> COPY [\"<\u6e90\u8def\u5f841>\",... \"<\u76ee\u6807\u8def\u5f84>\"] COPY \u6307\u4ee4\u5c06\u4ece\u6784\u5efa\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d <\u6e90\u8def\u5f84> \u7684\u6587\u4ef6/\u76ee\u5f55\u590d\u5236\u5230\u65b0\u7684\u4e00\u5c42\u7684\u955c\u50cf\u5185\u7684 <\u76ee\u6807\u8def\u5f84> \u4f4d\u7f6e COPY package.json /usr/src/app/ <\u6e90\u8def\u5f84> \u53ef\u4ee5\u662f\u591a\u4e2a\uff0c\u751a\u81f3\u53ef\u4ee5\u662f\u901a\u914d\u7b26\uff0c\u5176\u901a\u914d\u7b26\u89c4\u5219\u8981\u6ee1\u8db3 Go \u7684 filepath.Match \u89c4\u5219 \u4f7f\u7528 COPY \u6307\u4ee4\uff0c\u6e90\u6587\u4ef6\u7684\u5404\u79cd\u5143\u6570\u636e\u90fd\u4f1a\u4fdd\u7559\u3002\u6bd4\u5982\u8bfb\u3001\u5199\u3001\u6267\u884c\u6743\u9650\u3001\u6587\u4ef6\u53d8\u66f4\u65f6\u95f4\u7b49","title":"COPY \u590d\u5236\u6587\u4ef6"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#add","text":"<\u6e90\u8def\u5f84> \u53ef\u4ee5\u662f\u4e00\u4e2a URL \uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cDocker \u5f15\u64ce\u4f1a\u8bd5\u56fe\u53bb\u4e0b\u8f7d\u8fd9\u4e2a\u94fe\u63a5\u7684\u6587\u4ef6\u653e\u5230 <\u76ee\u6807\u8def\u5f84> \u53bb \u4e0b\u8f7d\u540e\u7684\u6587\u4ef6\u6743\u9650\u81ea\u52a8\u8bbe\u7f6e\u4e3a 600 \uff0c\u5982\u679c\u8fd9\u5e76\u4e0d\u662f\u60f3\u8981\u7684\u6743\u9650\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u589e\u52a0\u989d\u5916\u7684\u4e00\u5c42 RUN \u8fdb\u884c\u6743\u9650\u8c03\u6574 \u5982\u679c\u4e0b\u8f7d\u7684\u662f\u4e2a\u538b\u7f29\u5305\uff0c\u9700\u8981\u89e3\u538b\u7f29\uff0c\u4e5f\u4e00\u6837\u8fd8\u9700\u8981\u989d\u5916\u7684\u4e00\u5c42 RUN \u6307\u4ee4\u8fdb\u884c\u89e3\u538b\u7f29 \u5982\u679c <\u6e90\u8def\u5f84> \u4e3a\u4e00\u4e2a tar \u538b\u7f29\u6587\u4ef6\u7684\u8bdd\uff0c\u538b\u7f29\u683c\u5f0f\u4e3a gzip , bzip2 \u4ee5\u53ca xz \u7684\u60c5\u51b5\u4e0b\uff0c ADD \u6307\u4ee4\u5c06\u4f1a\u81ea\u52a8\u89e3\u538b\u7f29\u8fd9\u4e2a\u538b\u7f29\u6587\u4ef6\u5230 <\u76ee\u6807\u8def\u5f84> \u53bb \u8fd9\u4e2a\u529f\u80fd\u5176\u5b9e\u5e76\u4e0d\u5b9e\u7528\uff0c\u800c\u4e14\u4e0d\u63a8\u8350\u4f7f\u7528","title":"ADD \u66f4\u9ad8\u7ea7\u7684\u590d\u5236\u6587\u4ef6"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#cmd","text":"CMD \u6307\u4ee4\u7684\u683c\u5f0f\u548c RUN \u76f8\u4f3c\uff0c\u4e5f\u662f\u4e24\u79cd\u683c\u5f0f\uff1a shell \u683c\u5f0f\uff1a CMD <\u547d\u4ee4> exec \u683c\u5f0f\uff1a CMD [\"\u53ef\u6267\u884c\u6587\u4ef6\", \"\u53c2\u65701\", \"\u53c2\u65702\"...] \u53c2\u6570\u5217\u8868\u683c\u5f0f\uff1a CMD [\"\u53c2\u65701\", \"\u53c2\u65702\"...] \u3002\u5728\u6307\u5b9a\u4e86 ENTRYPOINT \u6307\u4ee4\u540e\uff0c\u7528 CMD \u6307 \u5b9a\u5177\u4f53\u7684\u53c2\u6570 ubuntu \u955c\u50cf\u9ed8\u8ba4\u7684 CMD \u662f /bin/bash Docker \u4e0d\u662f\u865a\u62df\u673a\uff0c\u5bb9\u5668\u4e2d\u7684\u5e94\u7528\u90fd\u5e94\u8be5\u4ee5\u524d\u53f0\u6267\u884c\uff0c\u800c\u4e0d\u662f\u50cf\u865a\u62df\u673a\u3001\u7269\u7406\u673a\u91cc\u9762\u90a3\u6837\uff0c\u7528 upstart/systemd \u53bb\u542f\u52a8\u540e\u53f0\u670d\u52a1\uff0c\u5bb9\u5668\u5185\u6ca1\u6709\u540e\u53f0\u670d\u52a1\u7684\u6982\u5ff5 \u5bf9\u4e8e\u5bb9\u5668\u800c\u8a00\uff0c\u5176\u542f\u52a8\u7a0b\u5e8f\u5c31\u662f\u5bb9\u5668\u5e94\u7528\u8fdb\u7a0b\uff0c\u5bb9\u5668\u5c31\u662f\u4e3a\u4e86\u4e3b\u8fdb\u7a0b\u800c\u5b58\u5728\u7684\uff0c\u4e3b\u8fdb\u7a0b\u9000\u51fa\uff0c\u5bb9\u5668\u5c31\u5931\u53bb\u4e86\u5b58\u5728\u7684\u610f\u4e49\uff0c\u4ece\u800c\u9000\u51fa\uff0c\u5176\u5b83\u8f85\u52a9\u8fdb\u7a0b\u4e0d\u662f\u5b83\u9700\u8981\u5173\u5fc3\u7684\u4e1c\u897f","title":"CMD \u5bb9\u5668\u542f\u52a8\u547d\u4ee4"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#entrypoint","text":"ENTRYPOINT \u7684\u76ee\u7684\u548c CMD \u4e00\u6837\uff0c\u90fd\u662f\u5728\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u7a0b\u5e8f\u53ca\u53c2\u6570 \u5f53\u6307\u5b9a\u4e86 ENTRYPOINT \u540e\uff0c CMD \u7684\u542b\u4e49\u5c31\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u4e0d\u518d\u662f\u76f4\u63a5\u7684\u8fd0\u884c\u5176\u547d\u4ee4\uff0c\u800c\u662f\u5c06CMD \u7684\u5185\u5bb9\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 ENTRYPOINT \u6307\u4ee4 \u5207\u6362\u6743\u9650\uff0c\u9700\u8981\u9884\u5904\u7406\u65f6\uff0c\u4e00\u822c\u4f1a\u4f7f\u7528","title":"ENTRYPOINT \u5165\u53e3\u70b9"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#env","text":"ENV ENV = = ... \u65e0\u8bba\u662f\u540e\u9762\u7684\u5176\u5b83\u6307\u4ee4\uff0c\u5982 RUN \uff0c\u8fd8\u662f\u8fd0\u884c\u65f6\u7684\u5e94\u7528\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u91cc\u5b9a\u4e49\u7684\u73af\u5883\u53d8\u91cf \u5bf9\u542b\u6709\u7a7a\u683c\u7684\u503c\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u529e\u6cd5 \u6709\u70b9\u76f8\u5f53\u4e8e\u4e00\u4e2a \u5168\u5c40\u53d8\u91cf \u4e0b\u5217\u6307\u4ee4\u53ef\u4ee5\u652f\u6301\u73af\u5883\u53d8\u91cf\u5c55\u5f00\uff1aADD \u3001 COPY \u3001 ENV \u3001 EXPOSE \u3001 LABEL \u3001 USER \u3001 WORKDIR \u3001 VOLUME \u3001 STOPSIGNAL \u3001 ONBUILD","title":"ENV \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#arg","text":"\u683c\u5f0f\uff1a ARG <\u53c2\u6570\u540d>[=<\u9ed8\u8ba4\u503c>] \u6784\u5efa\u53c2\u6570\u548c ENV \u7684\u6548\u679c\u4e00\u6837\uff0c\u90fd\u662f\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002\u6240\u4e0d\u540c\u7684\u662f\uff0c ARG \u6240\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u5728\u5c06\u6765\u5bb9\u5668\u8fd0\u884c\u65f6\u662f\u4e0d\u4f1a\u5b58\u5728\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u7684\u3002\u4f46\u662f\u4e0d\u8981\u56e0\u6b64\u5c31\u4f7f\u7528 ARG \u4fdd\u5b58\u5bc6\u7801\u4e4b\u7c7b\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a docker history \u8fd8\u662f\u53ef\u4ee5\u770b\u5230\u6240\u6709\u503c\u7684 Dockerfile \u4e2d\u7684 ARG \u6307\u4ee4\u662f\u5b9a\u4e49\u53c2\u6570\u540d\u79f0\uff0c\u4ee5\u53ca\u5b9a\u4e49\u5176\u9ed8\u8ba4\u503c\u3002\u8be5\u9ed8\u8ba4\u503c\u53ef\u4ee5\u5728\u6784\u5efa\u547d\u4ee4 docker build \u4e2d\u7528 --build-arg <\u53c2\u6570\u540d>=<\u503c> \u6765\u8986\u76d6","title":"ARG \u6784\u5efa\u53c2\u6570"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#volume","text":"VOLUME [\"<\u8def\u5f841>\", \"<\u8def\u5f842>\"...] VOLUME <\u8def\u5f84> \u4e3a\u4e86\u9632\u6b62\u8fd0\u884c\u65f6\u7528\u6237\u5fd8\u8bb0\u5c06\u52a8\u6001\u6587\u4ef6\u6240\u4fdd\u5b58\u76ee\u5f55\u6302\u8f7d\u4e3a\u5377\uff0c\u5728Dockerfile \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8b\u5148\u6307\u5b9a\u67d0\u4e9b\u76ee\u5f55\u6302\u8f7d\u4e3a\u533f\u540d\u5377\uff0c\u8fd9\u6837\u5728\u8fd0\u884c\u65f6\u5982\u679c\u7528\u6237\u4e0d\u6307\u5b9a\u6302\u8f7d\uff0c\u5176\u5e94\u7528\u4e5f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u4e0d\u4f1a\u5411\u5bb9\u5668\u5b58\u50a8\u5c42\u5199\u5165\u5927\u91cf\u6570\u636e\u3002 VOLUME /data \u8fd9\u91cc\u7684 /data \u76ee\u5f55\u5c31\u4f1a\u5728\u8fd0\u884c\u65f6\u81ea\u52a8\u6302\u8f7d\u4e3a\u533f\u540d\u5377\uff0c\u4efb\u4f55\u5411 /data \u4e2d\u5199\u5165\u7684\u4fe1\u606f\u90fd\u4e0d\u4f1a\u8bb0\u5f55\u8fdb\u5bb9\u5668\u5b58\u50a8\u5c42\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u5bb9\u5668\u5b58\u50a8\u5c42\u7684\u65e0\u72b6\u6001\u5316\u3002\u5f53\u7136\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u8986\u76d6\u8fd9\u4e2a\u6302\u8f7d\u8bbe \u7f6e\u3002\u6bd4\u5982\uff1a docker run -d -v mydata:/data xxxx \u5728\u8fd9\u884c\u547d\u4ee4\u4e2d\uff0c\u5c31\u4f7f\u7528\u4e86 mydata \u8fd9\u4e2a\u547d\u540d\u5377\u6302\u8f7d\u5230\u4e86 /data \u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u66ff\u4ee3\u4e86 Dockerfile \u4e2d\u5b9a\u4e49\u7684\u533f\u540d\u5377\u7684\u6302\u8f7d\u914d\u7f6e","title":"VOLUME \u5b9a\u4e49\u533f\u540d\u5377"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#expose","text":"\u683c\u5f0f\u4e3a EXPOSE <\u7aef\u53e31> [<\u7aef\u53e32>...] EXPOSE \u6307\u4ee4\u662f\u58f0\u660e\u8fd0\u884c\u65f6\u5bb9\u5668\u63d0\u4f9b\u670d\u52a1\u7aef\u53e3\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u58f0\u660e\uff0c\u5728\u8fd0\u884c\u65f6\u5e76\u4e0d\u4f1a\u56e0\u4e3a\u8fd9\u4e2a\u58f0\u660e\u5e94\u7528\u5c31\u4f1a\u5f00\u542f\u8fd9\u4e2a\u7aef\u53e3\u7684\u670d\u52a1\u3002 \u5728 Dockerfile \u4e2d\u5199\u5165\u8fd9\u6837\u7684\u58f0\u660e\u6709\u4e24\u4e2a\u597d\u5904\uff1a \u5e2e\u52a9\u955c\u50cf\u4f7f\u7528\u8005\u7406\u89e3\u8fd9\u4e2a\u955c\u50cf\u670d\u52a1\u7684\u5b88\u62a4\u7aef\u53e3\uff0c\u4ee5\u65b9\u4fbf\u914d\u7f6e\u6620\u5c04 \u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u968f\u673a\u7aef\u53e3\u6620\u5c04\u65f6\uff0c\u4e5f\u5c31\u662f docker run -P \u65f6\uff0c\u4f1a\u81ea\u52a8\u968f\u673a\u6620\u5c04 EXPOSE \u7684\u7aef\u53e3 \u8981\u5c06 EXPOSE \u548c\u5728\u8fd0\u884c\u65f6\u4f7f\u7528 -p <\u5bbf\u4e3b\u7aef\u53e3>:<\u5bb9\u5668\u7aef\u53e3> \u533a\u5206\u5f00\u6765\u3002 -p \uff0c\u662f\u6620\u5c04\u5bbf\u4e3b\u7aef\u53e3\u548c\u5bb9\u5668\u7aef\u53e3\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u5c06\u5bb9\u5668\u7684\u5bf9\u5e94\u7aef\u53e3\u670d\u52a1\u516c\u5f00\u7ed9\u5916\u754c\u8bbf\u95ee\uff0c\u800c EXPOSE \u4ec5\u4ec5\u662f\u58f0\u660e\u5bb9\u5668\u6253\u7b97\u4f7f\u7528\u4ec0\u4e48\u7aef\u53e3\u800c\u5df2\uff0c\u5e76\u4e0d\u4f1a\u81ea\u52a8\u5728\u5bbf\u4e3b\u8fdb\u884c\u7aef\u53e3\u6620\u5c04","title":"EXPOSE \u58f0\u660e\u7aef\u53e3"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#workdir","text":"\u683c\u5f0f\u4e3a WORKDIR <\u5de5\u4f5c\u76ee\u5f55\u8def\u5f84> \u4f7f\u7528 WORKDIR \u6307\u4ee4\u53ef\u4ee5\u6765\u6307\u5b9a\u5de5\u4f5c\u76ee\u5f55\uff08\u6216\u8005\u79f0\u4e3a\u5f53\u524d\u76ee\u5f55\uff09 \uff0c\u4ee5\u540e\u5404\u5c42\u7684\u5f53\u524d\u76ee\u5f55\u5c31\u88ab\u6539\u4e3a\u6307\u5b9a\u7684\u76ee\u5f55\uff0c\u5982\u8be5\u76ee\u5f55\u4e0d\u5b58\u5728\uff0c WORKDIR \u4f1a\u5e2e\u4f60\u5efa\u7acb\u76ee\u5f55 \u5982\u679c\u9700\u8981\u6539\u53d8\u4ee5\u540e\u5404\u5c42\u7684\u5de5\u4f5c\u76ee\u5f55\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5e94\u8be5\u4f7f\u7528 WORKDIR \u6307\u4ee4","title":"WORKDIR \u6307\u5b9a\u5de5\u4f5c\u76ee\u5f55"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#user","text":"\u683c\u5f0f\uff1a USER <\u7528\u6237\u540d> USER \u6307\u4ee4\u548c WORKDIR \u76f8\u4f3c\uff0c\u90fd\u662f\u6539\u53d8\u73af\u5883\u72b6\u6001\u5e76 \u5f71\u54cd\u4ee5\u540e\u7684\u5c42\u3002 WORKDIR \u662f\u6539\u53d8\u5de5\u4f5c\u76ee\u5f55\uff0c USER \u5219\u662f\u6539\u53d8\u4e4b\u540e\u5c42\u7684\u6267\u884c RUN , CMD \u4ee5\u53ca ENTRYPOINT \u8fd9\u7c7b\u547d\u4ee4\u7684\u8eab\u4efd\u3002 \u5f53\u7136\uff0c\u548c WORKDIR \u4e00\u6837\uff0c USER \u53ea\u662f\u5e2e\u52a9\u4f60\u5207\u6362\u5230\u6307\u5b9a\u7528\u6237\u800c\u5df2\uff0c\u8fd9\u4e2a\u7528\u6237\u5fc5\u987b\u662f\u4e8b\u5148\u5efa\u7acb\u597d\u7684\uff0c\u5426\u5219\u65e0\u6cd5\u5207\u6362","title":"USER \u6307\u5b9a\u5f53\u524d\u7528\u6237"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#healthcheck","text":"\u683c\u5f0f\uff1a HEALTHCHECK [\u9009\u9879] CMD <\u547d\u4ee4> \uff1a\u8bbe\u7f6e\u68c0\u67e5\u5bb9\u5668\u5065\u5eb7\u72b6\u51b5\u7684\u547d\u4ee4 HEALTHCHECK NONE \uff1a\u5982\u679c\u57fa\u7840\u955c\u50cf\u6709\u5065\u5eb7\u68c0\u67e5\u6307\u4ee4\uff0c\u4f7f\u7528\u8fd9\u884c\u53ef\u4ee5\u5c4f\u853d\u6389\u5176\u5065\u5eb7\u68c0\u67e5\u6307\u4ee4 HEALTHCHECK \u6307\u4ee4\u662f\u544a\u8bc9 Docker \u5e94\u8be5\u5982\u4f55\u8fdb\u884c\u5224\u65ad\u5bb9\u5668\u7684\u72b6\u6001\u662f\u5426\u6b63\u5e38","title":"HEALTHCHECK \u5065\u5eb7\u68c0\u67e5"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#onbuild","text":"\u683c\u5f0f\uff1a ONBUILD <\u5176\u5b83\u6307\u4ee4> ONBUILD \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6307\u4ee4\uff0c\u5b83\u540e\u9762\u8ddf\u7684\u662f\u5176\u5b83\u6307\u4ee4\uff0c\u6bd4\u5982 RUN , COPY \u7b49\uff0c\u800c\u8fd9\u4e9b\u6307\u4ee4\uff0c\u5728\u5f53\u524d\u955c\u50cf\u6784\u5efa\u65f6\u5e76\u4e0d\u4f1a\u88ab\u6267\u884c\u3002\u53ea\u6709\u5f53\u4ee5\u5f53\u524d\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\uff0c\u53bb\u6784\u5efa\u4e0b\u4e00\u7ea7\u955c\u50cf\u7684\u65f6\u5019\u624d\u4f1a\u88ab\u6267\u884c","title":"ONBUILD \u4e3a\u4ed6\u4eba\u505a\u5ac1\u8863\u88f3"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_21","text":"\u6bd4\u5982\u6211\u4eec\u5e0c\u671b\u4fdd\u5b58\u8fd9\u4e2a alpine \u955c\u50cf \u4fdd\u5b58\u955c\u50cf\u7684\u547d\u4ee4\u4e3a\uff1a $ docker image save alpine | gzip > alpine-latest.tar.gz \u7136\u540e\u6211\u4eec\u5c06 alpine-latest.tar.gz \u6587\u4ef6\u590d\u5236\u5230\u4e86\u5230\u4e86\u53e6\u4e00\u4e2a\u673a\u5668\u4e0a\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u547d\u4ee4\u52a0 \u8f7d\u955c\u50cf\uff1a $ docker load -i alpine-latest.tar.gz \u5982\u679c\u6211\u4eec\u7ed3\u5408\u8fd9\u4e24\u4e2a\u547d\u4ee4\u4ee5\u53ca ssh \u751a\u81f3 pv \u7684\u8bdd\uff0c\u5229\u7528 Linux \u5f3a\u5927\u7684\u7ba1\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2a\u547d\u4ee4\u5b8c\u6210\u4ece\u4e00\u4e2a\u673a\u5668\u5c06\u955c\u50cf\u8fc1\u79fb\u5230\u53e6\u4e00\u4e2a\u673a\u5668\uff0c\u5e76\u4e14\u5e26\u8fdb\u5ea6\u6761\u7684\u529f\u80fd\uff1a docker image save <\u955c\u50cf\u540d> | bzip2 | pv | ssh <\u7528\u6237\u540d>@<\u4e3b\u673a\u540d> 'cat | docker load'","title":"\u4fdd\u5b58\u955c\u50cf"},{"location":"\u6570\u636e\u79d1\u5b66/docker/#_22","text":"\u5982\u679c\u8981\u5220\u9664\u672c\u5730\u7684\u955c\u50cf\uff0c\u53ef\u4ee5\u4f7f\u7528 docker rmi \u547d\u4ee4\uff0c\u5176\u683c\u5f0f\u4e3a\uff1a docker rmi [\u9009\u9879] <\u955c\u50cf1> [<\u955c\u50cf2> ...] \u6ce8\u610f docker rm \u547d\u4ee4\u662f\u5220\u9664\u5bb9\u5668\uff0c\u4e0d\u8981\u6df7\u6dc6\u3002\u7528 ID\u3001\u955c\u50cf\u540d\u3001\u6458\u8981\u5220\u9664\u955c\u50cf,\u5176\u4e2d\uff0c <\u955c\u50cf> \u53ef\u4ee5\u662f \u955c\u50cf\u77ed ID \u3001 \u955c\u50cf\u957f ID \u3001 \u955c\u50cf\u540d \u6216\u8005 \u955c\u50cf\u6458\u8981 \u955c\u50cf\u7684\u552f\u4e00\u6807\u8bc6\u662f\u5176 ID \u548c\u6458\u8981\uff0c\u800c\u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u6709\u591a\u4e2a\u6807\u7b7e\u3002 \u5e76\u975e\u6240\u6709\u7684 docker rmi \u90fd\u4f1a\u4ea7\u751f\u5220\u9664\u955c\u50cf\u7684\u884c\u4e3a\uff0c\u6709\u53ef\u80fd\u4ec5\u4ec5\u662f\u53d6\u6d88\u4e86\u67d0\u4e2a\u6807\u7b7e\u800c\u5df2\u3002 \u5220\u9664\u955c\u50cf\u7684\u6807\u51c6\u65b9\u5f0f docker images --digests \u67d0\u4e2a\u5176\u5b83\u955c\u50cf\u6b63\u4f9d\u8d56\u4e8e\u5f53\u524d\u955c\u50cf\u7684\u67d0\u4e00\u5c42\u3002\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f9d\u65e7\u4e0d\u4f1a\u89e6\u53d1\u5220\u9664\u8be5\u5c42\u7684\u884c\u4e3a\u3002\u76f4\u5230\u6ca1\u6709\u4efb\u4f55\u5c42\u4f9d\u8d56\u5f53\u524d\u5c42\u65f6\uff0c\u624d\u4f1a\u771f\u5b9e\u7684\u5220\u9664\u5f53\u524d\u5c42 \u5982\u679c\u6709\u7528\u8fd9\u4e2a\u955c\u50cf\u542f\u52a8\u7684\u5bb9\u5668\u5b58\u5728\uff08\u5373\u4f7f\u5bb9\u5668\u6ca1\u6709\u8fd0\u884c\uff09 \uff0c\u90a3\u4e48\u540c\u6837\u4e0d\u53ef\u4ee5\u5220\u9664\u8fd9\u4e2a\u955c\u50cf\u3002\u5bb9\u5668\u662f\u4ee5\u955c\u50cf\u4e3a\u57fa\u7840\uff0c\u518d\u52a0\u4e00\u5c42\u5bb9\u5668\u5b58\u50a8\u5c42\uff0c\u7ec4\u6210\u8fd9\u6837\u7684\u591a\u5c42\u5b58\u50a8\u7ed3\u6784\u53bb\u8fd0\u884c\u7684\u3002\u56e0\u6b64\u8be5\u955c\u50cf\u5982\u679c\u88ab\u8fd9\u4e2a\u5bb9\u5668\u6240\u4f9d \u8d56\u7684\uff0c\u90a3\u4e48\u5220\u9664\u5fc5\u7136\u4f1a\u5bfc\u81f4\u6545\u969c\u3002\u5982\u679c\u8fd9\u4e9b\u5bb9\u5668\u662f\u4e0d\u9700\u8981\u7684\uff0c\u5e94\u8be5\u5148\u5c06\u5b83\u4eec\u5220\u9664\uff0c\u7136\u540e\u518d\u6765\u5220\u9664\u955c\u50cf\u3002 docker images -q \u6765\u914d\u5408\u4f7f\u7528 docker rmi \uff0c\u8fd9\u6837\u53ef\u4ee5\u6210\u6279\u7684\u5220\u9664\u5e0c\u671b\u5220\u9664\u7684\u955c\u50cf docker image rm \u63a8\u8350\u65b9\u5f0f","title":"\u5220\u9664\u672c\u5730\u955c\u50cf"},{"location":"\u6570\u636e\u79d1\u5b66/imbalance/","text":"\u5904\u7406\u7c7b\u522b\u4e0d\u5747\u8861 author: autuanliu email: autuanliu@163.com date: 2017/12/01 \u5206\u5272\u6570\u636e\u96c6 \u6570\u636e\u96c6\u7684\u4f7f\u7528\uff1a \u8bad\u7ec3\u6a21\u578b \u8bc4\u4f30\u6a21\u578b \u4e0d\u8981\u91cd\u590d\u4f7f\u7528 \u8bad\u7ec3\u96c6(\u5305\u62ec\u4ea4\u53c9\u9a8c\u8bc1) \u6d4b\u8bd5\u96c6(\u6700\u540e\u624d\u4f7f\u7528) \u5982\u679c\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u8868\u73b0\u826f\u597d\uff0c\u4f46\u662f\u5728\u6d4b\u8bd5\u96c6\u8868\u73b0\u975e\u5e38\u5dee\uff0c\u90a3\u5c31\u8bf4\u660e\u51fa\u73b0\u4e86\u8fc7\u62df\u5408 \u8c03\u6574\u6a21\u578b \u8c03\u6574\u6a21\u578b\u5373\u610f\u5473\u7740\u8c03\u6574\u8d85\u53c2\u6570 \u6a21\u578b\u53c2\u6570+\u8d85\u53c2\u6570\u3002\u6a21\u578b\u53c2\u6570\u53ef\u4ee5\u4ece\u8bad\u7ec3\u96c6\u4e2d\u5b66\u4e60\u5230\uff0c\u800c\u8d85\u53c2\u6570\u4e0d\u53ef\u4ee5 \u4ea4\u53c9\u9a8c\u8bc1\u53ef\u4ee5 \u7528\u4e8e \u8c03\u6574\u6a21\u578b\uff0c \u4e5f\u5c31\u662f\u8c03\u6574\u8d85\u53c2\u6570 ++ \u4ea4\u53c9\u9a8c\u8bc1\u662f\u53ea\u4f7f\u7528\u8bad\u7ec3\u96c6\u6765\u83b7\u5f97\u6a21\u578b\u8868\u73b0\u6027\u80fd\u7684\u53ef\u9760\u4f30\u8ba1\u7684\u4e00\u79cd\u65b9\u6cd5 ++ 10\u6298\u4ea4\u53c9\u9a8c\u8bc1\u7684\u5e73\u5747\u503c\u662f\u6700\u7ec8\u7684 \u6a21\u578b\u8868\u73b0\u6027\u80fd\uff0calso called your cross-validated score. Because you created 10 mini train/test splits, this score is usually pretty reliable Fit and tune models \u5927\u81f4\u8fc7\u7a0b For each algorithm (i.e. regularized regression, random forest, etc.): For each set of hyperparameter values to try: Perform cross-validation using the training set. Calculate cross-validated score. At the end of this process, you will have a cross-validated score for each set of hyperparameter values... for each algorithm. For each algorithm: Keep the set of hyperparameter values with best cross-validated score. Re-train the algorithm on the entire training set (without cross-validation). \u7136\u540e\uff0c\u5c06\u8bad\u7ec3\u597d\u7684\u5bf9\u5e94\u591a\u79cd\u7b97\u6cd5\u7684\u591a\u4e2a\u6a21\u578b\u5728 \u6d4b\u8bd5\u96c6 \u4e0a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u7136\u540e\u9009\u51fa\u6700\u597d\u7684\u90a3\u4e2a\u6a21\u578b \u8bc4\u4f30\u597d\u574f For regression tasks, we recommend Mean Squared Error (MSE) or Mean Absolute Error (MAE). (Lower values are better) For classification tasks, we recommend Area Under ROC Curve (AUROC). (Higher values are better) \u8be2\u95ee\u81ea\u5df1 Which model had the best performance on the test set? (performance) Does it perform well across various performance metrics? (robustness) Did it also have (one of) the best cross-validated scores from the training set? (consistency) Does it solve the original business problem? (win condition) Overfitting in Machine Learning: What It Is and How to Prevent \u9632\u6b62\u8fc7\u5ea6\u62df\u5408 Cross-validation Train with more data Remove features Early stopping Regularization Ensembling How to Handle Imbalanced Classes in Machine Learning \u4e0d\u5e73\u8861\u7c7b\u51fa\u73b0\u5728\u8bb8\u591a\u9886\u57df\uff0c\u5305\u62ec\uff1a \u6b3a\u8bc8\u8bc6\u522b \u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4 \u75be\u75c5\u7b5b\u67e5 SaaS\u8ba2\u9605\u6d41\u5931 \u5e7f\u544a\u70b9\u51fb \u5904\u7406\u65b9\u6cd5 Up-sample Minority Class \u968f\u673a\u4ece\u6700\u5c11\u7684\u7c7b\u522b\u4e2d ++\u590d\u5236++ \u4fe1\u53f7\uff0c\u4ee5\u52a0\u5f3a\u5c11\u6570\u7c7b\u522b\u7684\u5b58\u5728\u611f\uff08\u91cd\u91c7\u6837\uff09 \u5c06\u6bcf\u4e2a\u7c7b\u7684\u89c2\u5bdf\u5206\u6210\u4e0d\u540c\u7684\u6570\u636e\u6846 \u5c06\u4f7f\u7528replace\u65b9\u6cd5\u5bf9\u5c11\u6570\u7c7b\u91cd\u65b0\u62bd\u6837\uff0c\u5e76\u8bbe\u7f6e\u62bd\u6837\u6570\u4ee5\u5339\u914d\u591a\u6570\u7c7b \u5c06\u628a\u4e0a\u91c7\u6837\u7684\u5c11\u6570\u7c7bDataFrame\u4e0e\u539f\u59cb\u7684\u5927\u591a\u6570\u7c7bDataFrame\u7ed3\u5408\u8d77\u6765 Down-sample Majority Class \u4ece\u591a\u6570\u7c7b\u4e2d\u53bb\u6389\u4e00\u90e8\u5206\uff0c\u76f4\u63a5\u91cd\u65b0\u91c7\u6837\u5373\u53ef \u5c06\u6bcf\u4e2a\u7c7b\u7684\u6837\u672c\u5206\u6210\u4e0d\u540c\u7684\u6570\u636e\u6846 \u5c06\u5bf9\u5927\u90e8\u5206\u7c7b\u91cd\u65b0\u53d6\u6837\uff0c\u8bbe\u7f6e\u6837\u672c\u6570\u91cf\u4ee5\u5339\u914d\u5c11\u6570\u7c7b\u522b\u7684\u6837\u672c\u6570\u91cf \u5c06\u4e0b\u91c7\u6837\u7684\u591a\u6570\u7c7bDataFrame\u4e0e\u539f\u59cb\u7684\u5c11\u6570\u7c7bDataFrame\u7ec4\u5408\u8d77\u6765 Change Your Performance Metric \u5206\u7c7b\u95ee\u9898\u901a\u5e38\u4f7f\u7528 AUROC \u6307\u6807 classification - What does AUC stand for and what is it? - Cross Validated \u8981\u8ba1\u7b97AUROC\uff0c\u9700\u8981\u9884\u6d4b\u7684\u7c7b\u7684\u6982\u7387\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u9884\u6d4b\u7c7b\u3002\u53ef\u4ee5\u4f7f\u7528predict_proba()\u51fd\u6570\u83b7\u53d6 Penalize Algorithms (Cost-Sensitive Training) Penalized-SVM \u4f7f\u7528\u60e9\u7f5a\u63aa\u65bd Use Tree-Based Algorithms \u96c6\u6210\u6811\uff08\u968f\u673a\u68ee\u6797\uff0c\u68af\u5ea6\u63d0\u5347\u6811\uff09\u51e0\u4e4e\u603b\u662f\u80dc\u8fc7\u5355\u4e00\u7684 \u51b3\u7b56\u6811 \u5c06\u5c11\u6570\u7c7b\u522b\u5408\u5728\u4e00\u8d77\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u7c7b SMOTE\u7b97\u6cd5 \u53c2\u8003 How to Handle Imbalanced Classes in Machine Learning WTF is the Bias-Variance Tradeoff? (Infographic) Dimensionality Reduction Algorithms: Strengths and Weaknesses Day 6: Model Training - Machine Learning Crash Course Day 7: Next Steps - Machine Learning Crash Course Overfitting in Machine Learning: What It Is and How to Prevent It The 5 Levels of Machine Learning Iteration","title":"\u5904\u7406\u7c7b\u522b\u4e0d\u5747\u8861"},{"location":"\u6570\u636e\u79d1\u5b66/imbalance/#_1","text":"author: autuanliu email: autuanliu@163.com date: 2017/12/01","title":"\u5904\u7406\u7c7b\u522b\u4e0d\u5747\u8861"},{"location":"\u6570\u636e\u79d1\u5b66/imbalance/#_2","text":"\u6570\u636e\u96c6\u7684\u4f7f\u7528\uff1a \u8bad\u7ec3\u6a21\u578b \u8bc4\u4f30\u6a21\u578b \u4e0d\u8981\u91cd\u590d\u4f7f\u7528 \u8bad\u7ec3\u96c6(\u5305\u62ec\u4ea4\u53c9\u9a8c\u8bc1) \u6d4b\u8bd5\u96c6(\u6700\u540e\u624d\u4f7f\u7528) \u5982\u679c\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u8868\u73b0\u826f\u597d\uff0c\u4f46\u662f\u5728\u6d4b\u8bd5\u96c6\u8868\u73b0\u975e\u5e38\u5dee\uff0c\u90a3\u5c31\u8bf4\u660e\u51fa\u73b0\u4e86\u8fc7\u62df\u5408","title":"\u5206\u5272\u6570\u636e\u96c6"},{"location":"\u6570\u636e\u79d1\u5b66/imbalance/#_3","text":"\u8c03\u6574\u6a21\u578b\u5373\u610f\u5473\u7740\u8c03\u6574\u8d85\u53c2\u6570 \u6a21\u578b\u53c2\u6570+\u8d85\u53c2\u6570\u3002\u6a21\u578b\u53c2\u6570\u53ef\u4ee5\u4ece\u8bad\u7ec3\u96c6\u4e2d\u5b66\u4e60\u5230\uff0c\u800c\u8d85\u53c2\u6570\u4e0d\u53ef\u4ee5 \u4ea4\u53c9\u9a8c\u8bc1\u53ef\u4ee5 \u7528\u4e8e \u8c03\u6574\u6a21\u578b\uff0c \u4e5f\u5c31\u662f\u8c03\u6574\u8d85\u53c2\u6570 ++ \u4ea4\u53c9\u9a8c\u8bc1\u662f\u53ea\u4f7f\u7528\u8bad\u7ec3\u96c6\u6765\u83b7\u5f97\u6a21\u578b\u8868\u73b0\u6027\u80fd\u7684\u53ef\u9760\u4f30\u8ba1\u7684\u4e00\u79cd\u65b9\u6cd5 ++ 10\u6298\u4ea4\u53c9\u9a8c\u8bc1\u7684\u5e73\u5747\u503c\u662f\u6700\u7ec8\u7684 \u6a21\u578b\u8868\u73b0\u6027\u80fd\uff0calso called your cross-validated score. Because you created 10 mini train/test splits, this score is usually pretty reliable","title":"\u8c03\u6574\u6a21\u578b"},{"location":"\u6570\u636e\u79d1\u5b66/imbalance/#fit-and-tune-models","text":"\u5927\u81f4\u8fc7\u7a0b For each algorithm (i.e. regularized regression, random forest, etc.): For each set of hyperparameter values to try: Perform cross-validation using the training set. Calculate cross-validated score. At the end of this process, you will have a cross-validated score for each set of hyperparameter values... for each algorithm. For each algorithm: Keep the set of hyperparameter values with best cross-validated score. Re-train the algorithm on the entire training set (without cross-validation). \u7136\u540e\uff0c\u5c06\u8bad\u7ec3\u597d\u7684\u5bf9\u5e94\u591a\u79cd\u7b97\u6cd5\u7684\u591a\u4e2a\u6a21\u578b\u5728 \u6d4b\u8bd5\u96c6 \u4e0a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u7136\u540e\u9009\u51fa\u6700\u597d\u7684\u90a3\u4e2a\u6a21\u578b \u8bc4\u4f30\u597d\u574f For regression tasks, we recommend Mean Squared Error (MSE) or Mean Absolute Error (MAE). (Lower values are better) For classification tasks, we recommend Area Under ROC Curve (AUROC). (Higher values are better) \u8be2\u95ee\u81ea\u5df1 Which model had the best performance on the test set? (performance) Does it perform well across various performance metrics? (robustness) Did it also have (one of) the best cross-validated scores from the training set? (consistency) Does it solve the original business problem? (win condition)","title":"Fit and tune models"},{"location":"\u6570\u636e\u79d1\u5b66/imbalance/#overfitting-in-machine-learning-what-it-is-and-how-to-prevent","text":"\u9632\u6b62\u8fc7\u5ea6\u62df\u5408 Cross-validation Train with more data Remove features Early stopping Regularization Ensembling","title":"Overfitting in Machine Learning: What It Is and How to Prevent"},{"location":"\u6570\u636e\u79d1\u5b66/imbalance/#how-to-handle-imbalanced-classes-in-machine-learning","text":"\u4e0d\u5e73\u8861\u7c7b\u51fa\u73b0\u5728\u8bb8\u591a\u9886\u57df\uff0c\u5305\u62ec\uff1a \u6b3a\u8bc8\u8bc6\u522b \u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4 \u75be\u75c5\u7b5b\u67e5 SaaS\u8ba2\u9605\u6d41\u5931 \u5e7f\u544a\u70b9\u51fb \u5904\u7406\u65b9\u6cd5 Up-sample Minority Class \u968f\u673a\u4ece\u6700\u5c11\u7684\u7c7b\u522b\u4e2d ++\u590d\u5236++ \u4fe1\u53f7\uff0c\u4ee5\u52a0\u5f3a\u5c11\u6570\u7c7b\u522b\u7684\u5b58\u5728\u611f\uff08\u91cd\u91c7\u6837\uff09 \u5c06\u6bcf\u4e2a\u7c7b\u7684\u89c2\u5bdf\u5206\u6210\u4e0d\u540c\u7684\u6570\u636e\u6846 \u5c06\u4f7f\u7528replace\u65b9\u6cd5\u5bf9\u5c11\u6570\u7c7b\u91cd\u65b0\u62bd\u6837\uff0c\u5e76\u8bbe\u7f6e\u62bd\u6837\u6570\u4ee5\u5339\u914d\u591a\u6570\u7c7b \u5c06\u628a\u4e0a\u91c7\u6837\u7684\u5c11\u6570\u7c7bDataFrame\u4e0e\u539f\u59cb\u7684\u5927\u591a\u6570\u7c7bDataFrame\u7ed3\u5408\u8d77\u6765 Down-sample Majority Class \u4ece\u591a\u6570\u7c7b\u4e2d\u53bb\u6389\u4e00\u90e8\u5206\uff0c\u76f4\u63a5\u91cd\u65b0\u91c7\u6837\u5373\u53ef \u5c06\u6bcf\u4e2a\u7c7b\u7684\u6837\u672c\u5206\u6210\u4e0d\u540c\u7684\u6570\u636e\u6846 \u5c06\u5bf9\u5927\u90e8\u5206\u7c7b\u91cd\u65b0\u53d6\u6837\uff0c\u8bbe\u7f6e\u6837\u672c\u6570\u91cf\u4ee5\u5339\u914d\u5c11\u6570\u7c7b\u522b\u7684\u6837\u672c\u6570\u91cf \u5c06\u4e0b\u91c7\u6837\u7684\u591a\u6570\u7c7bDataFrame\u4e0e\u539f\u59cb\u7684\u5c11\u6570\u7c7bDataFrame\u7ec4\u5408\u8d77\u6765 Change Your Performance Metric \u5206\u7c7b\u95ee\u9898\u901a\u5e38\u4f7f\u7528 AUROC \u6307\u6807 classification - What does AUC stand for and what is it? - Cross Validated \u8981\u8ba1\u7b97AUROC\uff0c\u9700\u8981\u9884\u6d4b\u7684\u7c7b\u7684\u6982\u7387\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u9884\u6d4b\u7c7b\u3002\u53ef\u4ee5\u4f7f\u7528predict_proba()\u51fd\u6570\u83b7\u53d6 Penalize Algorithms (Cost-Sensitive Training) Penalized-SVM \u4f7f\u7528\u60e9\u7f5a\u63aa\u65bd Use Tree-Based Algorithms \u96c6\u6210\u6811\uff08\u968f\u673a\u68ee\u6797\uff0c\u68af\u5ea6\u63d0\u5347\u6811\uff09\u51e0\u4e4e\u603b\u662f\u80dc\u8fc7\u5355\u4e00\u7684 \u51b3\u7b56\u6811 \u5c06\u5c11\u6570\u7c7b\u522b\u5408\u5728\u4e00\u8d77\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u7c7b SMOTE\u7b97\u6cd5","title":"How to Handle Imbalanced Classes in Machine Learning"},{"location":"\u6570\u636e\u79d1\u5b66/imbalance/#_4","text":"How to Handle Imbalanced Classes in Machine Learning WTF is the Bias-Variance Tradeoff? (Infographic) Dimensionality Reduction Algorithms: Strengths and Weaknesses Day 6: Model Training - Machine Learning Crash Course Day 7: Next Steps - Machine Learning Crash Course Overfitting in Machine Learning: What It Is and How to Prevent It The 5 Levels of Machine Learning Iteration","title":"\u53c2\u8003"},{"location":"\u6570\u636e\u79d1\u5b66/path/","text":"\u6570\u636e\u79d1\u5b66\u57fa\u672c\u8def\u5f84 author: autuanliu email: autuanliu@163.com date: 2017/11/27 \u4e3b\u8981\u5143\u7d20 \u4eba\u4e3a\u7684\u76d1\u7763\uff1a\u8bbe\u7f6e\u8def\u5f84 \u6570\u636e\u8d28\u91cf \u8fc7\u62df\u5408 \u57fa\u672c\u8def\u5f84 \u9700\u8981\u907f\u514d\u7684\u9519\u8bef Spending too much time on theory Balance your studies with projects that provide you hands-on practice. Learn to be comfortable with partial knowledge. You'll naturally fill in the gaps as you progress. Learn how each piece fits into the big picture Coding too many algorithms from scratch Pick up general-purpose machine learning libraries, such as Scikit-Learn (Python) or Caret (R). If you do code an algorithm from scratch, do so with the intention of learning instead of perfecting your implementation. Understand the landscape of modern machine learning algorithms and their strengths and weaknesses. Jumping into the deep end First, master the techniques and algorithms of \"classical\" machine learning, which serve as building blocks for advanced topics. Know that classical machine learning still has incredible untapped potential. While the algorithms are already mature, we are still in the early stages of discovering fruitful ways to use them. Learn a systematic approach to solving problems with any form of machine learning \u5728\u7406\u8bba\u4e0a\u82b1\u8d39\u592a\u591a\u65f6\u95f4 \u4ece\u5934\u5f00\u59cb\u7f16\u5199\u592a\u591a\u7684\u7b97\u6cd5 \u8df3\u5165\u9ad8\u7ea7\u4e3b\u9898\uff0c\u4f8b\u5982\u6df1\u5165\u5b66\u4e60\uff0c\u592a\u5feb\u4e86 \u7b80\u5386\u4e2d\u6709\u592a\u591a\u7684\u6280\u672f\u672f\u8bed \u9ad8\u4f30\u5b66\u4f4d\u7684\u4ef7\u503c \u8fc7\u4e8e\u72ed\u9698\u5730\u5bfb\u627e\u5de5\u4f5c \u9762\u8bd5\u65f6\u6ca1\u6709\u51c6\u5907\u8ba8\u8bba\u9879\u76ee \u4f4e\u4f30\u9886\u57df\u77e5\u8bc6\u7684\u4ef7\u503c \u5ffd\u89c6\u6c9f\u901a\u6280\u5de7 \u5b66\u4e60\u8d44\u6e90 65 Free Data Science Resources for Beginners \u5404\u79cd\u7b97\u6cd5\u7684\u6bd4\u8f83\u4e0e\u4f18\u7f3a\u70b9 \u968f\u673a\u68ee\u6797\u901a\u5e38\u4f18\u4e8eSVM \u805a\u7c7b\u662f\u65e0\u76d1\u7763\u7684\uff08\u5373\u6ca1\u6709\u201c\u6b63\u786e\u7684\u7b54\u6848\u201d\uff09\uff0c\u6570\u636e\u53ef\u89c6\u5316\u901a\u5e38\u7528\u4e8e\u8bc4\u4f30\u7ed3\u679c K-Means\u662f\u4e00\u79cd\u901a\u7528\u7b97\u6cd5 \u5982\u679c\u6570\u636e\u4e2d\u771f\u5b9e\u7684\u5e95\u5c42\u805a\u7c7b\u4e0d\u662f\u7403\u72b6\u7684\uff0c\u90a3\u4e48K-Means\u5c06\u4ea7\u751f\u4e0d\u597d\u7684\u805a\u7c7b \u5206\u5c42\u805a\u7c7b\u7684\u4e3b\u8981\u4f18\u70b9\u662f\u4e0d\u4f1a\u5047\u8bbe\u7403\u4f53\u662f\u7403\u72b6\u7684\u3002\u53e6\u5916\uff0c\u5b83\u53ef\u4ee5\u5f88\u597d\u5730\u6269\u5c55\u5230\u66f4\u5927\u7684\u6570\u636e\u96c6 DBSCAN\u662f\u4e00\u79cd\u57fa\u4e8e\u5bc6\u5ea6\u7684\u7b97\u6cd5\uff0c\u53ef\u4ee5\u4e3a\u5bc6\u96c6\u7684\u70b9\u533a\u57df\u751f\u6210\u7fa4\u96c6\uff0c\u8fd8\u6709\u4e00\u4e2a\u6700\u8fd1\u7684\u65b0\u53d1\u5c55\u79f0\u4e3aHDBSCAN\uff0c\u5141\u8bb8\u5bc6\u5ea6\u4e0d\u540c\u7684\u7fa4\u96c6 \u7ebf\u6027\u56de\u5f52\u53ef\u4ee5\u76f4\u89c2\u5730\u7406\u89e3\u548c\u89e3\u91ca\uff0c\u5e76\u4e14\u53ef\u4ee5\u6b63\u5219\u5316\u4ee5\u907f\u514d\u8fc7\u5ea6\u62df\u5408\u3002\u53e6\u5916\uff0c\u4f7f\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7684\u65b0\u6570\u636e\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u66f4\u65b0\u7ebf\u6027\u6a21\u578b \u51b3\u7b56\u6811\u53ef\u4ee5\u5b66\u4e60\u975e\u7ebf\u6027\u5173\u7cfb\uff0c\u5e76\u4e14\u5bf9\u5f02\u5e38\u503c\u76f8\u5f53\u5065\u58ee \u968f\u673a\u68ee\u6797 \u66f4\u6709\u6548 \u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u901a\u5e38\u4e0d\u9002\u5408\u4f5c\u4e3a\u901a\u7528\u7b97\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u9700\u8981\u5927\u91cf\u7684\u6570\u636e \u5f53\u5b58\u5728\u591a\u4e2a\u6216\u975e\u7ebf\u6027\u51b3\u7b56\u8fb9\u754c\u65f6\uff0cLogistic\u56de\u5f52\u5f80\u5f80\u8868\u73b0\u4e0d\u4f73\u3002\u5b83\u4eec\u4e0d\u591f\u7075\u6d3b\uff0c\u65e0\u6cd5\u81ea\u7136\u5730\u6355\u6349\u5230\u66f4\u590d\u6742\u7684\u5173\u7cfb \u7531\u4e8e\u9009\u62e9\u6b63\u786e\u7684\u6838\u51fd\u6570\u7684\u91cd\u8981\u6027\uff0cSVM\u662f\u5185\u5b58\u5bc6\u96c6\u578b\u7684\uff0c\u96be\u4ee5\u8c03\u6574\uff0c\u5e76\u4e14\u4e0d\u80fd\u5f88\u597d\u5730\u6269\u5c55\u5230\u8f83\u5927\u7684\u6570\u636e\u96c6\uff0c\u76ee\u524d\u5728\u884c\u4e1a\u4e2d\uff0c\u968f\u673a\u68ee\u6797\u901a\u5e38\u4f18\u4e8eSVM \u7279\u5f81\u9009\u62e9\u7528\u4e8e\u4ece\u6570\u636e\u96c6\u4e2d\u7b5b\u9009\u4e0d\u76f8\u5173\u6216\u5197\u4f59\u7684\u7279\u5f81\u3002\u7279\u5f81\u9009\u62e9\u548c\u63d0\u53d6\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u7279\u5f81\u9009\u62e9\u4fdd\u7559\u4e86\u539f\u59cb\u7279\u5f81\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u800c\u7279\u5f81\u63d0\u53d6\u521b\u5efa\u4e86\u5168\u65b0\u7684\u7279\u5f81 \u4e00\u4e9b\u76d1\u7763\u7b97\u6cd5\u5df2\u7ecf\u5177\u6709 \u5185\u7f6e\u7684\u7279\u5f81\u9009\u62e9 \uff0c\u4f8b\u5982\u6b63\u5219\u5316\u56de\u5f52\u548c\u968f\u673a\u68ee\u6797 \u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u4efb\u52a1\uff0c\u7279\u5f81\u9009\u62e9\u53ef\u4ee5\u662f\u65e0\u76d1\u7763\u7684\uff08\u4f8b\u5982\u65b9\u5dee\u9608\u503c\uff09\u6216\u76d1\u7763\u7684\uff08\u4f8b\u5982\u9057\u4f20\u7b97\u6cd5\uff09 Variance thresholds remove features whose values don't change much from observation to observation (i.e. their variance falls below a threshold). These features provide little value. Correlation thresholds remove features that are highly correlated with others (i.e. its values change very similarly to another's). These features provide redundant information. Which one should you remove? Well, you'd first calculate all pair-wise correlations. Then, if the correlation between a pair of features is above a given threshold, you'd remove the one that has larger mean absolute correlation with other features GA(\u9057\u4f20\u7b97\u6cd5)\u6709\u4e24\u4e2a\u4e3b\u8981\u7528\u9014\u3002\u9996\u5148\u662f \u4f18\u5316\uff0c\u6bd4\u5982\u627e\u5230\u795e\u7ecf\u7f51\u7edc\u7684\u6700\u4f73\u6743\u91cd\u3002\u7b2c\u4e8c\u4e2a\u662f\u76d1\u7763\u529f\u80fd\u9009\u62e9 \u4e00\u4e9b\u7b97\u6cd5\u5df2\u7ecf\u5177\u6709 \u5185\u7f6e\u7684\u7279\u5f81\u63d0\u53d6\u3002\u6700\u597d\u7684\u4f8b\u5b50\u662f\u6df1\u5ea6\u5b66\u4e60\uff0c\u5b83\u901a\u8fc7\u6bcf\u4e2a\u9690\u85cf\u7684\u795e\u7ecf\u5c42\u63d0\u53d6\u8d8a\u6765\u8d8a\u6709\u7528\u7684\u539f\u59cb\u8f93\u5165\u6570\u636e\u8868\u793a \u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u662f\u4e00\u79cd\u65e0\u76d1\u7763\u7b97\u6cd5\uff0c\u53ef\u4ee5\u521b\u5efa\u539f\u59cb\u7279\u5f81\u7684\u7ebf\u6027\u7ec4\u5408 You should always normalize your dataset before performing PCA because the transformation is dependent on scale. If you don't, the features that are on the largest scale would dominate your new principal components \u4e0ePCA\u4e0d\u540c\uff0cLDA(\u7ebf\u6027\u5224\u522b\u5206\u6790)\u4e0d\u80fd\u6700\u5927\u7a0b\u5ea6\u5730\u89e3\u91ca\u65b9\u5dee\u3002\u76f8\u53cd\uff0c\u5b83\u6700\u5927\u5316\u4e86\u7c7b\u4e4b\u95f4\u7684\u53ef\u5206\u6027 \u81ea\u52a8\u7f16\u7801\u5668\u662f\u7ecf\u8fc7\u8bad\u7ec3\u91cd\u6784\u5176\u539f\u59cb\u8f93\u5165\u7684\u795e\u7ecf\u7f51\u7edc \u81ea\u52a8\u7f16\u7801\u5668\u662f\u795e\u7ecf\u7f51\u7edc\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5bf9\u4e8e\u67d0\u4e9b\u7c7b\u578b\u7684\u6570\u636e\uff08\u5982\u56fe\u50cf\u548c\u97f3\u9891\u6570\u636e\uff09\u8868\u73b0\u826f\u597d\u3002 \u4f46\u662f\u4ed6\u4eec\u9700\u8981\u66f4\u591a\u7684\u6570\u636e\u6765\u8bad\u7ec3\u3002\u5b83\u4eec\u4e0d\u88ab\u7528\u4f5c\u901a\u7528\u7ef4\u5ea6\u964d\u4f4e\u7b97\u6cd5 \u73b0\u4ee3\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff1a\u4f18\u70b9\u548c\u7f3a\u70b9 \u7ef4\u5ea6\u964d\u4f4e\u7b97\u6cd5\uff1a\u4f18\u70b9\u548c\u7f3a\u70b9 \u6570\u636e\u96c6 Datasets for Data Science and Machine Learning UCI RotoWire.com - Fantasy Baseball, Football, Basketball, Hockey and More \u6570\u636e\u96c6 \u65b0\u624b\u9879\u76ee 8\u4e2a\u6709\u8da3\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u521d\u5b66\u8005 \u4f53\u80b2\u8fd0\u52a8\u4e5f\u662f\u7ec3\u4e60++\u6570\u636e\u53ef\u89c6\u5316\u548c\u63a2\u7d22\u6027\u5206\u6790++\u7684\u4f18\u79c0\u9886\u57df Python Machine learning with SKLearn Tutorial for Investing - Intro - YouTube Neural networks and deep learning Logistic Regression from Scratch in Python - nick becker Tutorial To Implement k-Nearest Neighbors in Python From Scratch - Machine Learning Mastery K-nearest neighbor algorithm implementation in Python from scratch \u4e3a\u75be\u75c5\u9884\u6d4b\u5efa\u7acb\u6709\u610f\u4e49\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b \u53c2\u8003\u8d44\u6599 Day 1: Bird's Eye View - Machine Learning Crash Course 9 Mistakes to Avoid When Starting Your Career in Data Science 65 Free Data Science Resources for Beginners Python Machine Learning Tutorial, Scikit-Learn: Wine Snob Edition Modern Machine Learning Algorithms: Strengths and Weaknesses Learn Python - Free Interactive Python Tutorial","title":"\u6570\u636e\u79d1\u5b66\u57fa\u672c\u8def\u5f84"},{"location":"\u6570\u636e\u79d1\u5b66/path/#_1","text":"author: autuanliu email: autuanliu@163.com date: 2017/11/27","title":"\u6570\u636e\u79d1\u5b66\u57fa\u672c\u8def\u5f84"},{"location":"\u6570\u636e\u79d1\u5b66/path/#_2","text":"\u4eba\u4e3a\u7684\u76d1\u7763\uff1a\u8bbe\u7f6e\u8def\u5f84 \u6570\u636e\u8d28\u91cf \u8fc7\u62df\u5408","title":"\u4e3b\u8981\u5143\u7d20"},{"location":"\u6570\u636e\u79d1\u5b66/path/#_3","text":"","title":"\u57fa\u672c\u8def\u5f84"},{"location":"\u6570\u636e\u79d1\u5b66/path/#_4","text":"Spending too much time on theory Balance your studies with projects that provide you hands-on practice. Learn to be comfortable with partial knowledge. You'll naturally fill in the gaps as you progress. Learn how each piece fits into the big picture Coding too many algorithms from scratch Pick up general-purpose machine learning libraries, such as Scikit-Learn (Python) or Caret (R). If you do code an algorithm from scratch, do so with the intention of learning instead of perfecting your implementation. Understand the landscape of modern machine learning algorithms and their strengths and weaknesses. Jumping into the deep end First, master the techniques and algorithms of \"classical\" machine learning, which serve as building blocks for advanced topics. Know that classical machine learning still has incredible untapped potential. While the algorithms are already mature, we are still in the early stages of discovering fruitful ways to use them. Learn a systematic approach to solving problems with any form of machine learning \u5728\u7406\u8bba\u4e0a\u82b1\u8d39\u592a\u591a\u65f6\u95f4 \u4ece\u5934\u5f00\u59cb\u7f16\u5199\u592a\u591a\u7684\u7b97\u6cd5 \u8df3\u5165\u9ad8\u7ea7\u4e3b\u9898\uff0c\u4f8b\u5982\u6df1\u5165\u5b66\u4e60\uff0c\u592a\u5feb\u4e86 \u7b80\u5386\u4e2d\u6709\u592a\u591a\u7684\u6280\u672f\u672f\u8bed \u9ad8\u4f30\u5b66\u4f4d\u7684\u4ef7\u503c \u8fc7\u4e8e\u72ed\u9698\u5730\u5bfb\u627e\u5de5\u4f5c \u9762\u8bd5\u65f6\u6ca1\u6709\u51c6\u5907\u8ba8\u8bba\u9879\u76ee \u4f4e\u4f30\u9886\u57df\u77e5\u8bc6\u7684\u4ef7\u503c \u5ffd\u89c6\u6c9f\u901a\u6280\u5de7","title":"\u9700\u8981\u907f\u514d\u7684\u9519\u8bef"},{"location":"\u6570\u636e\u79d1\u5b66/path/#_5","text":"65 Free Data Science Resources for Beginners","title":"\u5b66\u4e60\u8d44\u6e90"},{"location":"\u6570\u636e\u79d1\u5b66/path/#_6","text":"\u968f\u673a\u68ee\u6797\u901a\u5e38\u4f18\u4e8eSVM \u805a\u7c7b\u662f\u65e0\u76d1\u7763\u7684\uff08\u5373\u6ca1\u6709\u201c\u6b63\u786e\u7684\u7b54\u6848\u201d\uff09\uff0c\u6570\u636e\u53ef\u89c6\u5316\u901a\u5e38\u7528\u4e8e\u8bc4\u4f30\u7ed3\u679c K-Means\u662f\u4e00\u79cd\u901a\u7528\u7b97\u6cd5 \u5982\u679c\u6570\u636e\u4e2d\u771f\u5b9e\u7684\u5e95\u5c42\u805a\u7c7b\u4e0d\u662f\u7403\u72b6\u7684\uff0c\u90a3\u4e48K-Means\u5c06\u4ea7\u751f\u4e0d\u597d\u7684\u805a\u7c7b \u5206\u5c42\u805a\u7c7b\u7684\u4e3b\u8981\u4f18\u70b9\u662f\u4e0d\u4f1a\u5047\u8bbe\u7403\u4f53\u662f\u7403\u72b6\u7684\u3002\u53e6\u5916\uff0c\u5b83\u53ef\u4ee5\u5f88\u597d\u5730\u6269\u5c55\u5230\u66f4\u5927\u7684\u6570\u636e\u96c6 DBSCAN\u662f\u4e00\u79cd\u57fa\u4e8e\u5bc6\u5ea6\u7684\u7b97\u6cd5\uff0c\u53ef\u4ee5\u4e3a\u5bc6\u96c6\u7684\u70b9\u533a\u57df\u751f\u6210\u7fa4\u96c6\uff0c\u8fd8\u6709\u4e00\u4e2a\u6700\u8fd1\u7684\u65b0\u53d1\u5c55\u79f0\u4e3aHDBSCAN\uff0c\u5141\u8bb8\u5bc6\u5ea6\u4e0d\u540c\u7684\u7fa4\u96c6 \u7ebf\u6027\u56de\u5f52\u53ef\u4ee5\u76f4\u89c2\u5730\u7406\u89e3\u548c\u89e3\u91ca\uff0c\u5e76\u4e14\u53ef\u4ee5\u6b63\u5219\u5316\u4ee5\u907f\u514d\u8fc7\u5ea6\u62df\u5408\u3002\u53e6\u5916\uff0c\u4f7f\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7684\u65b0\u6570\u636e\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u66f4\u65b0\u7ebf\u6027\u6a21\u578b \u51b3\u7b56\u6811\u53ef\u4ee5\u5b66\u4e60\u975e\u7ebf\u6027\u5173\u7cfb\uff0c\u5e76\u4e14\u5bf9\u5f02\u5e38\u503c\u76f8\u5f53\u5065\u58ee \u968f\u673a\u68ee\u6797 \u66f4\u6709\u6548 \u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u901a\u5e38\u4e0d\u9002\u5408\u4f5c\u4e3a\u901a\u7528\u7b97\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u9700\u8981\u5927\u91cf\u7684\u6570\u636e \u5f53\u5b58\u5728\u591a\u4e2a\u6216\u975e\u7ebf\u6027\u51b3\u7b56\u8fb9\u754c\u65f6\uff0cLogistic\u56de\u5f52\u5f80\u5f80\u8868\u73b0\u4e0d\u4f73\u3002\u5b83\u4eec\u4e0d\u591f\u7075\u6d3b\uff0c\u65e0\u6cd5\u81ea\u7136\u5730\u6355\u6349\u5230\u66f4\u590d\u6742\u7684\u5173\u7cfb \u7531\u4e8e\u9009\u62e9\u6b63\u786e\u7684\u6838\u51fd\u6570\u7684\u91cd\u8981\u6027\uff0cSVM\u662f\u5185\u5b58\u5bc6\u96c6\u578b\u7684\uff0c\u96be\u4ee5\u8c03\u6574\uff0c\u5e76\u4e14\u4e0d\u80fd\u5f88\u597d\u5730\u6269\u5c55\u5230\u8f83\u5927\u7684\u6570\u636e\u96c6\uff0c\u76ee\u524d\u5728\u884c\u4e1a\u4e2d\uff0c\u968f\u673a\u68ee\u6797\u901a\u5e38\u4f18\u4e8eSVM \u7279\u5f81\u9009\u62e9\u7528\u4e8e\u4ece\u6570\u636e\u96c6\u4e2d\u7b5b\u9009\u4e0d\u76f8\u5173\u6216\u5197\u4f59\u7684\u7279\u5f81\u3002\u7279\u5f81\u9009\u62e9\u548c\u63d0\u53d6\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u7279\u5f81\u9009\u62e9\u4fdd\u7559\u4e86\u539f\u59cb\u7279\u5f81\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u800c\u7279\u5f81\u63d0\u53d6\u521b\u5efa\u4e86\u5168\u65b0\u7684\u7279\u5f81 \u4e00\u4e9b\u76d1\u7763\u7b97\u6cd5\u5df2\u7ecf\u5177\u6709 \u5185\u7f6e\u7684\u7279\u5f81\u9009\u62e9 \uff0c\u4f8b\u5982\u6b63\u5219\u5316\u56de\u5f52\u548c\u968f\u673a\u68ee\u6797 \u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u4efb\u52a1\uff0c\u7279\u5f81\u9009\u62e9\u53ef\u4ee5\u662f\u65e0\u76d1\u7763\u7684\uff08\u4f8b\u5982\u65b9\u5dee\u9608\u503c\uff09\u6216\u76d1\u7763\u7684\uff08\u4f8b\u5982\u9057\u4f20\u7b97\u6cd5\uff09 Variance thresholds remove features whose values don't change much from observation to observation (i.e. their variance falls below a threshold). These features provide little value. Correlation thresholds remove features that are highly correlated with others (i.e. its values change very similarly to another's). These features provide redundant information. Which one should you remove? Well, you'd first calculate all pair-wise correlations. Then, if the correlation between a pair of features is above a given threshold, you'd remove the one that has larger mean absolute correlation with other features GA(\u9057\u4f20\u7b97\u6cd5)\u6709\u4e24\u4e2a\u4e3b\u8981\u7528\u9014\u3002\u9996\u5148\u662f \u4f18\u5316\uff0c\u6bd4\u5982\u627e\u5230\u795e\u7ecf\u7f51\u7edc\u7684\u6700\u4f73\u6743\u91cd\u3002\u7b2c\u4e8c\u4e2a\u662f\u76d1\u7763\u529f\u80fd\u9009\u62e9 \u4e00\u4e9b\u7b97\u6cd5\u5df2\u7ecf\u5177\u6709 \u5185\u7f6e\u7684\u7279\u5f81\u63d0\u53d6\u3002\u6700\u597d\u7684\u4f8b\u5b50\u662f\u6df1\u5ea6\u5b66\u4e60\uff0c\u5b83\u901a\u8fc7\u6bcf\u4e2a\u9690\u85cf\u7684\u795e\u7ecf\u5c42\u63d0\u53d6\u8d8a\u6765\u8d8a\u6709\u7528\u7684\u539f\u59cb\u8f93\u5165\u6570\u636e\u8868\u793a \u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u662f\u4e00\u79cd\u65e0\u76d1\u7763\u7b97\u6cd5\uff0c\u53ef\u4ee5\u521b\u5efa\u539f\u59cb\u7279\u5f81\u7684\u7ebf\u6027\u7ec4\u5408 You should always normalize your dataset before performing PCA because the transformation is dependent on scale. If you don't, the features that are on the largest scale would dominate your new principal components \u4e0ePCA\u4e0d\u540c\uff0cLDA(\u7ebf\u6027\u5224\u522b\u5206\u6790)\u4e0d\u80fd\u6700\u5927\u7a0b\u5ea6\u5730\u89e3\u91ca\u65b9\u5dee\u3002\u76f8\u53cd\uff0c\u5b83\u6700\u5927\u5316\u4e86\u7c7b\u4e4b\u95f4\u7684\u53ef\u5206\u6027 \u81ea\u52a8\u7f16\u7801\u5668\u662f\u7ecf\u8fc7\u8bad\u7ec3\u91cd\u6784\u5176\u539f\u59cb\u8f93\u5165\u7684\u795e\u7ecf\u7f51\u7edc \u81ea\u52a8\u7f16\u7801\u5668\u662f\u795e\u7ecf\u7f51\u7edc\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5bf9\u4e8e\u67d0\u4e9b\u7c7b\u578b\u7684\u6570\u636e\uff08\u5982\u56fe\u50cf\u548c\u97f3\u9891\u6570\u636e\uff09\u8868\u73b0\u826f\u597d\u3002 \u4f46\u662f\u4ed6\u4eec\u9700\u8981\u66f4\u591a\u7684\u6570\u636e\u6765\u8bad\u7ec3\u3002\u5b83\u4eec\u4e0d\u88ab\u7528\u4f5c\u901a\u7528\u7ef4\u5ea6\u964d\u4f4e\u7b97\u6cd5 \u73b0\u4ee3\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff1a\u4f18\u70b9\u548c\u7f3a\u70b9 \u7ef4\u5ea6\u964d\u4f4e\u7b97\u6cd5\uff1a\u4f18\u70b9\u548c\u7f3a\u70b9","title":"\u5404\u79cd\u7b97\u6cd5\u7684\u6bd4\u8f83\u4e0e\u4f18\u7f3a\u70b9"},{"location":"\u6570\u636e\u79d1\u5b66/path/#_7","text":"Datasets for Data Science and Machine Learning UCI RotoWire.com - Fantasy Baseball, Football, Basketball, Hockey and More \u6570\u636e\u96c6","title":"\u6570\u636e\u96c6"},{"location":"\u6570\u636e\u79d1\u5b66/path/#_8","text":"8\u4e2a\u6709\u8da3\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u521d\u5b66\u8005 \u4f53\u80b2\u8fd0\u52a8\u4e5f\u662f\u7ec3\u4e60++\u6570\u636e\u53ef\u89c6\u5316\u548c\u63a2\u7d22\u6027\u5206\u6790++\u7684\u4f18\u79c0\u9886\u57df Python Machine learning with SKLearn Tutorial for Investing - Intro - YouTube Neural networks and deep learning Logistic Regression from Scratch in Python - nick becker Tutorial To Implement k-Nearest Neighbors in Python From Scratch - Machine Learning Mastery K-nearest neighbor algorithm implementation in Python from scratch \u4e3a\u75be\u75c5\u9884\u6d4b\u5efa\u7acb\u6709\u610f\u4e49\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b","title":"\u65b0\u624b\u9879\u76ee"},{"location":"\u6570\u636e\u79d1\u5b66/path/#_9","text":"Day 1: Bird's Eye View - Machine Learning Crash Course 9 Mistakes to Avoid When Starting Your Career in Data Science 65 Free Data Science Resources for Beginners Python Machine Learning Tutorial, Scikit-Learn: Wine Snob Edition Modern Machine Learning Algorithms: Strengths and Weaknesses Learn Python - Free Interactive Python Tutorial","title":"\u53c2\u8003\u8d44\u6599"},{"location":"\u6570\u636e\u79d1\u5b66/visualization/","text":"\u6570\u636e\u7684\u53ef\u89c6\u5316\u5206\u6790","title":"\u6570\u636e\u53ef\u89c6\u5316\u5206\u6790"},{"location":"\u6570\u636e\u79d1\u5b66/visualization/#_1","text":"","title":"\u6570\u636e\u7684\u53ef\u89c6\u5316\u5206\u6790"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/","text":"\u5e7f\u4e49\u7ebf\u6027\u6a21\u578b Sklearn \u7684\u5b66\u4e60\u7b14\u8bb0 \u5177\u4f53\u5b9e\u73b0\u89c1 GitHub 1.1.1 \u666e\u901a\u6700\u5c0f\u4e8c\u4e58\u6cd5 \u4f7f \u6b8b\u5dee\u5e73\u65b9\u548c \u6700\u5c0f LinearRegression \u4f1a\u8c03\u7528 fit \u65b9\u6cd5\u6765\u62df\u5408\u6570\u7ec4 X, y, \u5e76\u4e14\u5c06\u7ebf\u6027\u6a21\u578b\u7684\u7cfb\u6570 w \u5b58\u50a8\u5728\u5176\u6210\u5458\u53d8\u91cf coef_ \u4e2d \u6700\u5c0f\u4e8c\u4e58\u4f30\u8ba1\u5bf9\u4e8e\u968f\u673a\u8bef\u5dee\u975e\u5e38\u654f\u611f, \u4ea7\u751f\u5f88\u5927\u7684\u65b9\u5dee \u5f62\u5f0f $$ y = xW^T+b $$ 1.1.2 \u5cad\u56de\u5f52 \u6700\u5c0f\u5316\u5e26\u6709L2\u6b63\u5219\u9879\u7684\u6b8b\u5dee\u5e73\u65b9\u548c RidgeCV \u901a\u8fc7\u5185\u7f6e\u7684 Alpha \u53c2\u6570\u7684\u4ea4\u53c9\u9a8c\u8bc1\u6765\u5b9e\u73b0\u5cad\u56de\u5f52. \u8be5\u5bf9\u8c61\u4e0e GridSearchCV \u7684\u4f7f\u7528\u65b9\u6cd5\u76f8\u540c, \u53ea\u662f\u5b83\u9ed8\u8ba4\u4e3a Generalized Cross-Validation(\u5e7f\u4e49\u4ea4\u53c9\u9a8c\u8bc1 GCV), \u8fd9\u662f\u4e00\u79cd\u6709\u6548\u7684\u7559\u4e00\u9a8c\u8bc1\u65b9\u6cd5(LOO-CV) 1.1.3 Lasso \u4f30\u8ba1\u7a00\u758f\u7cfb\u6570\u7684\u7ebf\u6027\u6a21\u578b \u5b83\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u662f\u6709\u7528\u7684, \u56e0\u4e3a\u5b83\u503e\u5411\u4e8e\u4f7f\u7528\u5177\u6709\u8f83\u5c11\u53c2\u6570\u503c\u7684\u60c5\u51b5, \u6709\u6548\u5730\u51cf\u5c11\u7ed9\u5b9a\u89e3\u51b3\u65b9\u6848\u6240\u4f9d\u8d56\u53d8\u91cf\u7684\u6570\u91cf Lasso\u53ca\u5176\u53d8\u4f53\u662f\u538b\u7f29\u611f\u77e5\u9886\u57df\u7684\u57fa\u7840. \u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b, \u5b83\u53ef\u4ee5\u6062\u590d\u4e00\u7ec4\u975e\u96f6\u6743\u91cd\u7684\u7cbe\u786e\u96c6 \u635f\u5931\u51fd\u6570 $$\\min \\frac 1 {2 n_{samples}}||Xw-y||_2^2 +\\alpha||w||_1 $$ \u4f7f\u7528\u4e86 coordinate descent (\u5750\u6807\u4e0b\u964d\u7b97\u6cd5)\u6765\u62df\u5408\u7cfb\u6570 \u7531\u4e8e Lasso \u56de\u5f52\u4ea7\u751f\u7a00\u758f\u6a21\u578b, \u56e0\u6b64\u53ef\u4ee5\u7528\u4e8e\u6267\u884c\u7279\u5f81\u9009\u62e9 \u5bf9\u4e8e\u5177\u6709\u8bb8\u591a\u7ebf\u6027\u56de\u5f52\u7684\u9ad8\u7ef4\u6570\u636e\u96c6, LassoCV \u6700\u5e38\u89c1 LassoLarsCV \u5728\u5bfb\u627e alpha parameter \u53c2\u6570\u503c\u4e0a\u66f4\u5177\u6709\u4f18\u52bf, \u800c\u4e14\u5982\u679c\u6837\u672c\u6570\u91cf\u4e0e\u7279\u5f81\u6570\u91cf\u76f8\u6bd4\u975e\u5e38\u5c0f\u65f6, \u901a\u5e38 LassoLarsCV \u6bd4 LassoCV \u8981\u5feb \u5f53\u4f7f\u7528 k-fold \u4ea4\u53c9\u9a8c\u8bc1\u65f6, \u6b63\u5219\u5316\u8def\u5f84\u53ea\u8ba1\u7b97\u4e00\u6b21\u800c\u4e0d\u662fk + 1\u6b21, \u6240\u4ee5\u627e\u5230\u03b1\u7684\u6700\u4f18\u503c\u662f\u4e00\u79cd\u8ba1\u7b97\u4e0a\u66f4\u4fbf\u5b9c\u7684\u66ff\u4ee3\u65b9\u6cd5 1.1.4 MultiTaskLasso MultiTaskLasso\u662f\u4e00\u4e2a\u4f30\u8ba1\u591a\u5143\u56de\u5f52\u7a00\u758f\u7cfb\u6570\u7684\u7ebf\u6027\u6a21\u578b\uff1a y \u662f\u4e00\u4e2a (n_samples, n_tasks) \u7684\u4e8c\u7ef4\u6570\u7ec4, \u5176\u7ea6\u675f\u6761\u4ef6\u548c\u5176\u4ed6\u56de\u5f52\u95ee\u9898(\u4e5f\u79f0\u4e3a\u4efb\u52a1)\u662f\u4e00\u6837\u7684, \u90fd\u662f\u6240\u9009\u7684\u7279\u5f81\u503c 1.1.5 \u5f39\u6027\u7f51 \u5f39\u6027\u7f51\u7edc \u662f\u4e00\u79cd\u4f7f\u7528L1,L2\u8303\u6570\u4f5c\u4e3a\u5148\u9a8c\u6b63\u5219\u9879\u8bad\u7ec3\u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b. \u8fd9\u79cd\u7ec4\u5408\u5141\u8bb8\u5b66\u4e60\u5230\u4e00\u4e2a\u53ea\u6709\u5c11\u91cf\u53c2\u6570\u662f\u975e\u96f6\u7a00\u758f\u7684\u6a21\u578b, \u5c31\u50cf Lasso \u4e00\u6837, \u4f46\u662f\u5b83\u4ecd\u7136\u4fdd\u6301 \u4e00\u4e9b\u50cf Ridge \u7684\u6b63\u5219\u6027\u8d28. \u6211\u4eec\u53ef\u5229\u7528 l1_ratio \u53c2\u6570\u63a7\u5236L1\u548cL2\u7684\u51f8\u7ec4\u5408 \u5f39\u6027\u7f51\u7edc\u5728\u5f88\u591a\u7279\u5f81\u4e92\u76f8\u8054\u7cfb\u7684\u60c5\u51b5\u4e0b\u662f\u975e\u5e38\u6709\u7528\u7684 Lasso\u5f88\u53ef\u80fd\u53ea\u968f\u673a\u8003\u8651\u8fd9\u4e9b\u7279\u5f81\u4e2d\u7684\u4e00\u4e2a, \u800c\u5f39\u6027\u7f51\u7edc\u66f4\u503e\u5411\u4e8e\u9009\u62e9\u4e24\u4e2a loss $$\\min \\frac 1 {2 n_{samples}}||Xw-y||_2^2 +\\alpha||w||_1 + \\frac{\\alpha(1-\\rho)} 2 ||w||_2^2 $$ ElasticNetCV \u7c7b\u53ef\u4ee5\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u6765\u8bbe\u7f6e\u53c2\u6570alpha ( \\alpha \\alpha ) \u548c l1_ratio ( \\rho \\rho ) MultiTaskElasticNet \u662f\u4e00\u4e2a\u5bf9\u591a\u56de\u5f52\u95ee\u9898\u4f30\u7b97\u7a00\u758f\u53c2\u6570\u7684\u5f39\u6027\u7f51\u7edc: Y \u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4, \u5f62\u72b6\u662f (n_samples,n_tasks). \u5176\u9650\u5236\u6761\u4ef6\u662f\u548c\u5176\u4ed6\u56de\u5f52\u95ee\u9898\u4e00\u6837, \u662f\u9009\u62e9\u7684\u7279\u5f81, \u4e5f\u79f0\u4e3a tasks \u91c7\u7528\u4e86\u5750\u6807\u4e0b\u964d\u6cd5\u6c42\u89e3\u53c2\u6570 1.1.7 \u6700\u5c0f\u89d2\u56de\u5f52 \u6700\u5c0f\u89d2\u56de\u5f52 (LARS) \u662f\u5bf9 \u9ad8\u7ef4\u6570\u636e \u7684\u56de\u5f52\u7b97\u6cd5 LARS\u548c\u9010\u6b65\u56de\u5f52\u5f88\u50cf. \u5728\u6bcf\u4e00\u6b65, \u5b83\u5bfb\u627e\u4e0e\u54cd\u5e94\u6700\u6709\u5173\u8054\u7684 \u9884\u6d4b. \u5f53\u6709\u5f88\u591a\u9884\u6d4b\u7531\u76f8\u540c\u7684\u5173\u8054\u65f6, \u5b83\u6ca1\u6709\u7ee7\u7eed\u5229\u7528\u76f8\u540c\u7684\u9884\u6d4b, \u800c\u662f\u5728\u8fd9\u4e9b\u9884\u6d4b\u4e2d\u627e\u51fa\u5e94\u8be5\u7b49\u89d2\u7684\u65b9\u5411 \u5b83\u5bf9\u566a\u58f0\u975e\u5e38\u654f\u611f LassoLars \u662f\u4e00\u4e2a\u4f7f\u7528LARS\u7b97\u6cd5\u7684lasso\u6a21\u578b, \u4e0d\u540c\u4e8e\u57fa\u4e8e\u5750\u6807\u4e0b\u964d\u6cd5\u7684\u5b9e\u73b0, \u5b83\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7cbe\u786e\u89e3, \u4e5f\u5c31\u662f\u4e00\u4e2a \u5173\u4e8e\u81ea\u8eab\u53c2\u6570\u6807\u51c6\u5316\u540e\u7684\u4e00\u4e2a\u5206\u6bb5\u7ebf\u6027\u89e3 1.1.10 \u8d1d\u53f6\u65af\u56de\u5f52 \u8d1d\u53f6\u65af\u56de\u5f52\u53ef\u4ee5\u7528\u4e8e\u5728\u9884\u4f30\u9636\u6bb5\u7684\u53c2\u6570\u6b63\u5219\u5316: \u6b63\u5219\u5316\u53c2\u6570\u7684\u9009\u62e9\u4e0d\u662f\u901a\u8fc7\u4eba\u4e3a\u7684\u9009\u62e9, \u800c\u662f\u901a\u8fc7\u624b\u52a8\u8c03\u8282\u6570\u636e\u503c\u6765\u5b9e\u73b0 \u5b83\u80fd\u6839\u636e\u5df2\u6709\u7684\u6570\u636e\u8fdb\u884c\u6539\u53d8. \u5b83\u80fd\u5728\u4f30\u8ba1\u8fc7\u7a0b\u4e2d\u5f15\u5165\u6b63\u5219\u9879. \u5b83\u7684\u63a8\u65ad\u8fc7\u7a0b\u662f\u975e\u5e38\u8017\u65f6\u7684 1.1.10.1 \u8d1d\u53f6\u65af\u5cad\u56de\u5f52 \u53c2\u6570 w, \\alpha \\alpha \u548c \\lambda \\lambda \u662f\u5728\u6a21\u578b\u62df\u5408\u7684\u65f6\u5019\u4e00\u8d77\u88ab\u4f30\u7b97\u51fa\u6765\u7684. \u5269\u4e0b\u7684\u8d85\u53c2\u6570\u5c31\u662f gamma \u5206\u5e03\u7684\u5148\u9a8c\u4e86. \\alpha \\alpha \u548c \\lambda \\lambda . \u5b83\u4eec\u901a\u5e38\u88ab\u9009\u62e9\u4e3a \u6ca1\u6709\u4fe1\u606f\u91cf . \u6a21\u578b\u53c2\u6570\u7684\u4f30\u8ba1\u4e00\u822c\u5229\u7528 \u6700\u5927\u4f3c\u7136\u5bf9\u6570\u4f30\u8ba1\u6cd5 . \\alpha_1 = \\alpha_2 = \\lambda_1 = \\lambda_2 = 10^{-6} \\alpha_1 = \\alpha_2 = \\lambda_1 = \\lambda_2 = 10^{-6} \u8d1d\u53f6\u65af\u5cad\u56de\u5f52\u5bf9\u75c5\u6001\u95ee\u9898(ill-posed)\u7684\u9c81\u68d2\u6027\u8981\u66f4\u597d 1.1.11 logistic \u56de\u5f52 logistic \u56de\u5f52\u53c8\u88ab\u79f0\u4f5c logit regression(logit \u56de\u5f52), maximum-entropy classification(MaxEnt, \u6700\u5927\u71b5\u5206\u7c7b), \u6216 log-linear classifier(\u7ebf\u6027\u5bf9\u6570\u5206\u7c7b\u5668) \u8be5\u6a21\u578b\u5229\u7528\u51fd\u6570 logistic function \u5c06\u5355\u6b21\u8bd5\u9a8c(single trial)\u7684\u8f93\u51fa\u8f6c\u5316\u5e76\u63cf\u8ff0\u4e3a\u6982\u7387 scikit-learn \u4e2d logistic \u56de\u5f52\u5728 LogisticRegression \u7c7b\u4e2d\u5b9e\u73b0\u4e86 \u4e8c\u5143(binary)\u3001\u4e00\u5bf9\u4f59(one-vs-rest)\u53ca\u591a\u5143 logistic \u56de\u5f52, \u5e76\u5e26\u6709\u53ef\u9009\u7684 L1 \u548c L2 \u6b63\u5219\u5316 liblinear \u5e94\u7528\u4e86\u5750\u6807\u4e0b\u964d\u7b97\u6cd5(Coordinate Descent, CD CD\u7b97\u6cd5\u8bad\u7ec3\u7684\u6a21\u578b\u4e0d\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u591a\u5206\u7c7b\u6a21\u578b, \u800c\u662f\u57fa\u4e8e one-vs-rest \u601d\u60f3\u5206\u89e3\u4e86\u8fd9\u4e2a\u4f18\u5316\u95ee\u9898, \u4e3a\u6bcf\u4e2a\u7c7b\u522b\u90fd\u8bad\u7ec3\u4e86\u4e00\u4e2a\u4e8c\u5143\u5206\u7c7b\u5668 lbfgs, sag \u548c newton-cg solvers (\u6c42\u89e3\u5668)\u53ea\u652f\u6301 L2 \u7f5a\u9879, \u5bf9\u67d0\u4e9b\u9ad8\u7ef4\u6570\u636e\u6536\u655b\u66f4\u5feb. \u8fd9\u4e9b\u6c42\u89e3\u5668\u7684\u53c2\u6570 multi_class \u8bbe\u4e3a multinomial \u5373\u53ef\u8bad\u7ec3\u4e00\u4e2a\u771f\u6b63\u7684\u591a\u5143 logistic \u56de\u5f52 , \u5176\u9884\u6d4b\u7684\u6982\u7387\u6bd4\u9ed8\u8ba4\u7684 one-vs-rest \u8bbe\u5b9a\u66f4\u4e3a\u51c6\u786e sag \u6c42\u89e3\u5668\u57fa\u4e8e\u5e73\u5747\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5(Stochastic Average Gradient descent). \u5728\u5927\u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\u66f4\u5feb, \u5927\u6570\u636e\u96c6\u6307\u6837\u672c\u91cf\u5927\u4e14\u7279\u5f81\u6570\u591a saga solver \u662f sag \u7684\u4e00\u7c7b\u53d8\u4f53, \u5b83\u652f\u6301\u975e\u5e73\u6ed1(non-smooth)\u7684 L1 \u6b63\u5219\u9009\u9879 penalty=l1 . \u56e0\u6b64\u5bf9\u4e8e\u7a00\u758f\u591a\u5143 logistic \u56de\u5f52 , \u5f80\u5f80\u9009\u7528\u8be5\u6c42\u89e3\u5668 Case Solver L1\u6b63\u5219 liblinear or saga \u591a\u5143\u635f\u5931 lbfgs, sag, saga or newton-cg \u5927\u6570\u636e\u96c6 sag or saga saga \u4e00\u822c\u90fd\u662f\u6700\u4f73\u7684\u9009\u62e9,\u4f46\u51fa\u4e8e\u4e00\u4e9b\u5386\u53f2\u9057\u7559\u539f\u56e0\u9ed8\u8ba4\u7684\u662f liblinear SGDClassifier \u548c SGDRegressor \u5206\u522b\u7528\u4e8e\u62df\u5408\u5206\u7c7b\u95ee\u9898\u548c\u56de\u5f52\u95ee\u9898\u7684\u7ebf\u6027\u6a21\u578b, \u53ef\u4f7f\u7528\u4e0d\u540c\u7684(\u51f8)\u635f\u5931\u51fd\u6570, \u652f\u6301\u4e0d\u540c\u7684\u7f5a\u9879 1.1.13 Perceptron\u611f\u77e5\u673a Perceptron \u662f\u9002\u7528\u4e8e large scale learning(\u5927\u89c4\u6a21\u5b66\u4e60)\u7684\u4e00\u79cd\u7b80\u5355\u7b97\u6cd5 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5b66\u4e60\u7387(learning rate). \u4e0d\u9700\u8981\u6b63\u5219\u5316\u5904\u7406. \u4ec5\u4f7f\u7528\u9519\u8bef\u6837\u672c\u66f4\u65b0\u6a21\u578b \u5408\u9875\u635f\u5931(hinge loss)\u7684\u611f\u77e5\u673a\u6bd4SGD\u7565\u5feb, \u6240\u5f97\u6a21\u578b\u66f4\u7a00\u758f 1.1.16 \u591a\u9879\u5f0f\u56de\u5f52\uff1a\u7528\u57fa\u51fd\u6570\u5c55\u5f00\u7ebf\u6027\u6a21\u578b polynomial regression \u662f\u7ebf\u6027\u6a21\u578b\u4e2d\u7684\u540c\u4e00\u7c7b, \u6211\u4eec\u8ba4\u4e3a\u4ee5\u4e0a(\u5373\u6a21\u578b\u662f\u7ebf\u6027 ), \u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u89e3\u51b3 poly = PolynomialFeatures(degree=2) \u548c poly.fit_transform(X) \u7528\u4e8e\u5b9e\u73b0\u975e\u7ebf\u6027\u5230\u7ebf\u6027\u7684\u8f6c\u6362 \u5229\u7528\u591a\u9879\u5f0f\u7279\u5f81\u8bad\u7ec3\u7684\u7ebf\u6027\u6a21\u578b\u80fd\u591f\u51c6\u786e\u5730\u6062\u590d\u8f93\u5165\u591a\u9879\u5f0f\u7cfb\u6570 1.2 \u7ebf\u6027\u548c\u4e8c\u6b21\u5224\u522b\u5206\u6790 Linear Discriminant Analysis(\u7ebf\u6027\u5224\u522b\u5206\u6790)(discriminant_analysis.LinearDiscriminantAnalysis) \u548c Quadratic Discriminant Analysis (\u4e8c\u6b21\u5224\u522b\u5206\u6790)(discriminant_analysis.QuadraticDiscriminantAnalysis) \u662f\u4e24\u4e2a\u7ecf\u5178\u7684\u5206\u7c7b\u5668. \u6b63\u5982\u4ed6\u4eec\u540d\u5b57\u6240\u63cf\u8ff0\u7684\u90a3\u6837, \u4ed6\u4eec\u5206\u522b\u4ee3\u8868\u4e86 \u7ebf\u6027\u51b3\u7b56\u5e73\u9762\u548c\u4e8c\u6b21\u51b3\u7b56\u5e73\u9762 \u5176\u5929\u751f\u7684\u591a\u5206\u7c7b\u7279\u6027, \u5728\u5b9e\u8df5\u4e2d\u5df2\u7ecf\u8bc1\u660e\u5f88\u6709\u6548, \u5e76\u4e14 \u4e0d\u9700\u8981\u518d\u6b21\u8c03\u53c2 \u7ebf\u6027\u5224\u522b\u5206\u6790\u53ea\u80fd\u5b66\u4e60\u7ebf\u6027\u8fb9\u754c, \u800c\u4e8c\u6b21\u5224\u522b\u5206\u6790\u5219\u53ef\u4ee5\u5b66\u4e60\u4e8c\u6b21\u51fd\u6570\u7684\u8fb9\u754c, \u56e0\u6b64\u5b83\u76f8\u5bf9\u800c\u8a00\u66f4\u52a0\u7075\u6d3b \u7ebf\u6027\u5224\u522b\u5206\u6790\u964d\u7ef4 \u662f\u603b\u4f53\u800c\u8a00\u5341\u5206\u5f3a\u5927\u7684\u964d\u7ef4\u65b9\u5f0f, \u540c\u6837\u4e5f \u4ec5\u4ec5\u5728\u591a\u5206\u7c7b\u73af\u5883\u4e0b\u624d\u4f1a\u8d77\u4f5c\u7528 discriminant_analysis.LinearDiscriminantAnalysis.transform LDA \u5206\u7c7b\u5668\u4e2d\u5b58\u5728\u4e00\u4e2a\u5229\u7528\u7ebf\u6027\u6295\u5f71\u5230 K-1 \u4e2a\u7ef4\u5ea6\u7a7a\u95f4\u7684\u964d\u7ef4\u5de5\u5177 \u6536\u7f29\u662f\u4e00\u4e2a\u5728\u8bad\u7ec3\u6837\u672c\u6570\u91cf\u76f8\u6bd4\u7279\u5f81\u800c\u8a00\u5f88\u5c0f\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u63d0\u5347\u9884\u6d4b(\u51c6\u786e\u6027)\u7684\u534f\u65b9\u5dee\u77e9\u9635 LDA \u6536\u7f29\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e discriminant_analysis.LinearDiscriminantAnalysis \u7c7b\u7684 shrinkage \u53c2\u6570\u4e3a \u2018auto\u2019 \u4ee5\u5f97\u5230\u5e94\u7528. 1.3 \u6838\u5cad\u56de\u5f52 Kernel ridge regression (KRR) (\u5185\u6838\u5cad\u56de\u5f52\u7531 \u4f7f\u7528\u5185\u6838\u65b9\u6cd5\u7684 (\u5cad\u56de\u5f52)(\u4f7f\u7528 l2 \u6b63\u5219\u5316\u7684\u6700\u5c0f\u4e8c\u4e58\u6cd5)\u6240\u7ec4\u6210. \u56e0\u6b64, \u5b83\u6240\u5b66\u4e60\u5230\u7684\u5728\u7a7a\u95f4\u4e2d\u4e0d\u540c\u7684\u7ebf\u6027\u51fd\u6570\u662f\u7531\u4e0d\u540c\u7684\u5185\u6838\u548c\u6570\u636e\u6240\u5bfc\u81f4\u7684. \u5bf9\u4e8e\u975e\u7ebf\u6027\u7684\u5185\u6838, \u5b83\u4e0e\u539f\u59cb\u7a7a\u95f4\u4e2d\u7684\u975e\u7ebf\u6027\u51fd\u6570\u76f8\u5bf9\u5e94 \u7531 KernelRidge \u5b66\u4e60\u7684\u6a21\u578b\u7684\u5f62\u5f0f\u4e0e\u652f\u6301\u5411\u91cf\u56de\u5f52( SVR ) \u662f\u4e00\u6837\u7684. \u4f46\u662f\u4ed6\u4eec\u4f7f\u7528\u4e0d\u540c\u7684\u635f\u5931\u51fd\u6570\uff1a\u5185\u6838\u5cad\u56de\u5f52(KRR)\u4f7f\u7528 squared error loss (\u5e73\u65b9\u8bef\u5dee\u635f\u5931\u51fd\u6570)\u800c support vector regression (\u652f\u6301\u5411\u91cf\u56de\u5f52)(SVR)\u4f7f\u7528 \\epsilon \\epsilon -insensitive loss , \u4e24\u8005\u90fd\u4f7f\u7528 l2 regularization (l2 \u6b63\u5219\u5316). \u4e0e SVR \u76f8\u53cd, \u62df\u5408 KernelRidge \u53ef\u4ee5\u4ee5 closed-form (\u5c01\u95ed\u5f62\u5f0f)\u5b8c\u6210, \u5bf9\u4e8e\u4e2d\u578b\u6570\u636e\u96c6\u901a\u5e38\u66f4\u5feb. \u53e6\u4e00\u65b9\u9762, \u5b66\u4e60\u7684\u6a21\u578b\u662f\u975e\u7a00\u758f\u7684, \u56e0\u6b64\u6bd4 SVR \u6162, \u5728\u9884\u6d4b\u65f6\u95f4, SVR \u5b66\u4e60\u4e86 \\epsilon>0 \\epsilon>0 \u7684\u7a00\u758f\u6a21\u578b. \u5b83\u4eec\u7684 learned functions (\u5b66\u4e60\u51fd\u6570)\u975e\u5e38\u76f8\u4f3c;\u4f46\u662f, \u62df\u5408 KernelRidge \u5927\u7ea6\u6bd4\u62df\u5408 SVR \u5feb\u4e03\u500d(\u90fd\u4f7f\u7528 grid-search ( \u7f51\u683c\u641c\u7d22 ) ). \u7136\u800c, \u7531\u4e8e SVR \u53ea\u5b66\u4e60\u4e86\u4e00\u4e2a\u7a00\u758f\u6a21\u578b, \u6240\u4ee5 SVR \u9884\u6d4b 10 \u4e07\u4e2a\u76ee\u6807\u503c\u6bd4\u4f7f\u7528 KernelRidge \u5feb\u4e09\u500d\u4ee5\u4e0a. SVR \u53ea\u4f7f\u7528\u4e86\u767e\u5206\u4e4b\u4e09\u5341\u7684\u6570\u636e\u70b9\u505a\u4e3a\u652f\u6491\u5411\u91cf \u5bf9\u4e8e\u4e2d\u578b\u8bad\u7ec3\u96c6(\u5c0f\u4e8e 1000 \u4e2a\u6837\u672c), \u62df\u5408 KernelRidge \u6bd4 SVR \u5feb; \u7136\u800c, \u5bf9\u4e8e\u66f4\u5927\u7684\u8bad\u7ec3\u96c6 SVR \u901a\u5e38\u66f4\u597d. \u5173\u4e8e\u9884\u6d4b\u65f6\u95f4, \u7531\u4e8e\u5b66\u4e60\u7684\u7a00\u758f\u89e3, SVR \u5bf9\u4e8e\u6240\u6709\u4e0d\u540c\u5927\u5c0f\u7684\u8bad\u7ec3\u96c6\u90fd\u6bd4 KernelRidge \u5feb \u7a00\u758f\u89e3 \u662f\u8bf4\u53ea\u4f7f\u7528\u4e00\u90e8\u5206\u7279\u5f81\u4f5c\u4e3a\u5173\u952e\u8bad\u7ec3\u7279\u5f81 1.4 SVM \u652f\u6301\u5411\u91cf\u673a\u53ef\u4ee5\u7528\u4e8e \u5206\u7c7b, \u56de\u5f52, \u5f02\u5e38\u68c0\u6d4b \u4f18\u52bf: \u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u975e\u5e38\u9ad8\u6548 \u5373\u4f7f\u5728 \u6570\u636e\u7ef4\u5ea6\u6bd4\u6837\u672c\u6570\u91cf\u5927 \u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u6709\u6548 \u5728\u51b3\u7b56\u51fd\u6570(\u79f0\u4e3a\u652f\u6301\u5411\u91cf)\u4e2d\u4f7f\u7528\u8bad\u7ec3\u96c6\u7684\u5b50\u96c6 \u901a\u7528\u6027: \u4e0d\u540c\u7684\u6838\u51fd\u6570\u4e0e\u7279\u5b9a\u7684\u51b3\u7b56\u51fd\u6570\u4e00\u4e00\u5bf9\u5e94 \u52a3\u52bf: \u5982\u679c\u7279\u5f81\u6570\u91cf\u6bd4\u6837\u672c\u6570\u91cf\u5927\u5f97\u591a, \u5728\u9009\u62e9\u6838\u51fd\u6570\u65f6\u8981\u907f\u514d\u8fc7\u62df\u5408 \u5f53\u7c7b\u522b\u4e0d\u5747\u8861\u65f6, \u4f7f\u7528\u5e26\u6709 \u7c7b\u522b\u6743\u91cd\u7684 wclf = svm.SVC(kernel='linear', class_weight={1: 10}) \u652f\u6301\u5411\u91cf\u5206\u7c7b\u7684\u65b9\u6cd5\u53ef\u4ee5\u88ab\u6269\u5c55\u7528\u4f5c\u89e3\u51b3\u56de\u5f52\u95ee\u9898. \u8fd9\u4e2a\u65b9\u6cd5\u88ab\u79f0\u4f5c\u652f\u6301\u5411\u91cf\u56de\u5f52. \u652f\u6301\u5411\u91cf\u5206\u7c7b\u751f\u6210\u7684\u6a21\u578b\u53ea\u4f9d\u8d56\u4e8e\u8bad\u7ec3\u96c6\u7684\u5b50\u96c6,\u56e0\u4e3a\u6784\u5efa\u6a21\u578b\u7684 cost function \u4e0d\u5728\u4e4e\u8fb9 \u7f18\u4e4b\u5916\u7684\u8bad\u7ec3\u70b9. \u7c7b\u4f3c\u7684, \u652f\u6301\u5411\u91cf\u56de\u5f52\u751f\u6210\u7684\u6a21\u578b\u53ea\u4f9d\u8d56\u4e8e\u8bad\u7ec3\u96c6\u7684\u5b50\u96c6, \u56e0\u4e3a\u6784\u5efa\u6a21\u578b\u7684 cost function \u5ffd\u7565\u4efb\u4f55\u63a5\u8fd1\u4e8e\u6a21\u578b\u9884\u6d4b\u7684\u8bad\u7ec3\u6570\u636e. SVM\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u4e8c\u6b21\u89c4\u5212 \u95ee\u9898(Quadratic Programming, QP), \u662f\u5c06\u652f\u6301\u5411\u91cf\u548c\u8bad\u7ec3\u6570\u636e\u7684\u5176\u4f59\u90e8\u5206\u5206\u79bb\u5f00\u6765, \u652f\u6301\u5411\u91cf\u673a\u662f\u4e2a\u5f3a\u5927\u7684\u5de5\u5177, \u4e0d\u8fc7\u5b83\u7684\u8ba1\u7b97\u548c\u5b58\u50a8\u7a7a\u95f4\u8981\u6c42\u4e5f\u4f1a\u968f\u7740\u8981\u8bad\u7ec3\u5411\u91cf\u7684\u6570\u76ee\u589e \u52a0\u800c\u5feb\u901f\u589e\u52a0 \u60e9\u7f5a\u7cfb\u6570C\u7684\u8bbe\u7f6e:\u5728\u5408\u7406\u7684\u60c5\u51b5\u4e0b, C \u7684\u9ed8\u8ba4\u9009\u62e9\u4e3a 1. \u5982\u679c\u60a8\u6709\u5f88\u591a\u6df7\u6742\u7684\u89c2\u5bdf\u6570\u636e, \u60a8\u5e94\u8be5\u8981\u53bb\u8c03\u5c0f\u5b83. C \u8d8a\u5c0f, \u5c31\u80fd\u66f4\u597d\u5730\u53bb\u6b63\u89c4\u5316\u4f30\u8ba1 \u5e38\u7528\u6838\u51fd\u6570 \u7ebf\u6027 $$ k(x_i, x_j) = x_i^T x_j $$ \u591a\u9879\u5f0f $$ k(x_i, x_j) = (x_i^T x_j)^d $$ \u9ad8\u65af\u6838rbf $$ k(x_i, x_j) = exp(-\\frac{||x_i - x_j||^2}{2 \\sigma^2}) $$ \u62c9\u666e\u62c9\u65af $$ k(x_i, x_j) = exp(-\\frac{||x_i - x_j||}{\\sigma}) $$ sigmoid $$ k(x_i, x_j) = \\tanh(\\beta x_i^T x_j + \\theta) $$ \u6838\u51fd\u6570\u901a\u8fc7\u521b\u5efa\u5b9e\u4f8b\u65f6\u8fdb\u884c\u6307\u5b9a svm.SVC(kernel='linear') \u81ea\u5b9a\u4e49\u6838\u51fd\u6570 def my_kernel(x, y): return np.dot(x, y.T) \u5f53\u7528 \u5f84\u5411\u57fa(RBF)\u5185\u6838\u53bb\u8bad\u7ec3 SVM, \u6709\u4e24\u4e2a\u53c2\u6570\u5fc5\u987b\u8981\u53bb\u8003\u8651: C, \\gamma \\gamma . \u8f83\u5c0f\u7684 C \u4f1a\u4f7f\u51b3\u7b56\u8868\u9762\u66f4\u5e73\u6ed1, \u540c\u65f6\u8f83\u9ad8\u7684 C \u65e8\u5728\u6b63\u786e\u5730\u5206\u7c7b\u6240\u6709\u8bad\u7ec3\u6837\u672c. Gamma \u5b9a\u4e49\u4e86\u5355\u4e00 \u8bad\u7ec3\u6837\u672c\u80fd\u8d77\u5230\u591a\u5927\u7684\u5f71\u54cd. \u8f83\u5927\u7684 gamma \u4f1a\u66f4\u8ba9\u5176\u4ed6\u6837\u672c\u53d7\u5230\u5f71\u54cd 1.5 \u968f\u673a\u68af\u5ea6\u4e0b\u964d SGD \u5bf9\u7279\u5f81\u7f29\u653e \u654f\u611f \u5fc5\u987b\u5c06 \u76f8\u540c \u7684\u7f29\u653e\u5e94\u7528\u4e8e\u5bf9\u5e94\u7684\u6d4b\u8bd5\u5411\u91cf\u4e2d, \u4ee5\u83b7\u5f97\u6709\u610f\u4e49\u7684\u7ed3\u679c \u5728\u62df\u5408\u6a21\u578b\u524d\u8981\u786e\u4fdd\u8bad\u7ec3\u6570\u636e\u7ecf\u8fc7\u4e86\u6253\u4e71 shuffle=True from sklearn.linear_model import SGDClassifier X = [[0, 0], [1, 1]] y = [0, 1] clf = SGDClassifier(loss='hinge', penalty='l2', max_iter=500, tol=1e-3) clf.fit(X, y) # prediction res = clf.predict([[2, 2]]) print(res) SGDClassifier \u901a\u8fc7\u5728\u5c06\u591a\u4e2a binary classifiers\u7ec4\u5408\u5728 one versus all(OVA) \u65b9\u6848\u4e2d\u6765\u652f\u6301\u591a\u7c7b\u5206\u7c7b SGDRegressor \u7c7b\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u968f\u5373\u68af\u5ea6\u4e0b\u964d\u5b66\u4e60\u7a0b\u5e8f, \u5b83\u652f\u6301\u4e0d\u540c\u7684\u635f\u5931\u51fd\u6570\u548c\u60e9\u7f5a\u6765\u62df\u5408\u7ebf\u6027\u56de\u5f52\u6a21\u578b 1.6 \u6700\u8fd1\u90bb \u65e0\u76d1\u7763\u7684\u6700\u8fd1\u90bb\u662f\u8bb8\u591a\u5176\u5b83\u5b66\u4e60\u65b9\u6cd5\u7684\u57fa\u7840, \u5c24\u5176\u662f manifold learning \u548c spectral clustering \u53d7\u76d1\u7763\u7684 neighbors-based\u5b66\u4e60\u5206\u4e3a\u4e24\u79cd classification \u9488\u5bf9\u7684\u662f\u5177\u6709\u79bb\u6563\u6807\u7b7e\u7684\u6570\u636e, regression \u9488\u5bf9\u7684\u662f\u5177\u6709\u8fde\u7eed\u6807\u7b7e\u7684\u6570\u636e \u975e\u53c2\u6570\u65b9\u6cd5 \u5e94\u7528\u4e8e\u51b3\u7b56\u8fb9\u754c\u975e\u5e38\u4e0d\u89c4\u5219\u7684\u60c5\u666f\u4e0b \u6700\u8fd1\u90bb\u5206\u7c7b \u5206\u7c7b\u662f\u7531\u6bcf\u4e2a\u70b9\u7684\u6700\u8fd1\u90bb\u7684\u7b80\u5355\u591a\u6570\u6295\u7968\u4e2d\u8ba1\u7b97\u5f97\u5230\u7684 \u4e00\u4e2a\u67e5\u8be2\u70b9\u7684\u6570\u636e\u7c7b\u578b\u662f\u7531\u5b83\u6700\u8fd1\u90bb\u70b9\u4e2d\u6700\u5177\u4ee3\u8868\u6027\u7684\u6570\u636e\u7c7b\u578b\u6765\u51b3\u5b9a\u7684 k \u503c\u7684\u6700\u4f73\u9009\u62e9\u662f\u9ad8\u5ea6\u6570\u636e\u4f9d\u8d56\u7684 \u901a\u5e38\u8f83\u5927\u7684 k \u662f\u4f1a\u6291\u5236\u566a\u58f0\u7684\u5f71\u54cd, \u4f46\u662f\u4f7f\u5f97\u5206\u7c7b\u754c\u9650\u4e0d\u660e\u663e \u5982\u679c\u6570\u636e\u662f\u4e0d\u5747\u5300\u91c7\u6837\u7684, \u90a3\u4e48 RadiusNeighborsClassifier \u4e2d\u7684\u57fa\u4e8e\u534a\u5f84\u7684\u8fd1\u90bb\u5206\u7c7b\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9 \u6307\u5b9a\u4e00\u4e2a\u56fa\u5b9a\u534a\u5f84 r, \u4f7f\u5f97\u7a00\u758f\u90bb\u5c45\u4e2d\u7684\u70b9\u4f7f\u7528\u8f83\u5c11\u7684\u6700\u8fd1\u90bb\u6765\u5206\u7c7b \u6700\u8fd1\u90bb\u56de\u5f52 \u6700\u8fd1\u90bb\u56de\u5f52\u662f\u7528\u5728\u6570\u636e\u6807\u7b7e\u4e3a\u8fde\u7eed\u53d8\u91cf, \u800c\u4e0d\u662f\u79bb\u6563\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b \u5206\u914d\u7ed9\u67e5\u8be2\u70b9\u7684\u6807\u7b7e\u662f\u7531\u5b83\u7684 \u6700\u8fd1\u90bb\u6807\u7b7e\u7684\u5747\u503c \u8ba1\u7b97\u800c\u6765\u7684 \u5728\u67d0\u4e9b\u73af\u5883\u4e0b, \u589e\u52a0\u6743\u91cd\u53ef\u80fd\u662f\u6709\u5229\u7684, \u4f7f\u5f97\u9644\u8fd1\u70b9\u5bf9\u4e8e\u56de\u5f52\u6240\u4f5c\u51fa\u7684\u8d21\u732e\u591a\u4e8e\u8fdc\u5904\u70b9. \u8fd9\u53ef\u4ee5\u901a\u8fc7 weights \u5173\u952e\u5b57\u6765\u5b9e\u73b0 \u9ad8\u65af\u8fc7\u7a0b\u662f\u4e00\u79cd\u5e38\u7528\u7684\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5, \u65e8\u5728\u89e3\u51b3 \u56de\u5f52\u95ee\u9898 \u548c \u6982\u7387\u5206\u7c7b\u95ee\u9898 1.8 \u4ea4\u53c9\u5206\u89e3 \u504f\u6700\u5c0f\u4e8c\u4e58\u6cd5(PLS)\u548c\u5178\u578b\u76f8\u5173\u5206\u6790(CCA) \u5177\u6709\u53d1\u73b0\u4e24\u4e2a\u591a\u5143\u6570\u636e\u96c6\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb \u7684\u7528\u9014: fit method(\u62df\u5408\u65b9\u6cd5)\u7684\u53c2\u6570 X \u548c Y \u90fd\u662f 2 \u7ef4\u6570\u7ec4 1.9 \u6734\u7d20\u8d1d\u53f6\u65af \u6734\u7d20\u8d1d\u53f6\u65af\u65b9\u6cd5\u662f\u57fa\u4e8e\u8d1d\u53f6\u65af\u5b9a\u7406\u7684\u4e00\u7ec4\u6709\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5 \u7b80\u5355\u5730\u5047\u8bbe \u6bcf\u5bf9\u7279\u5f81\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb , \u6734\u7d20\u7684\u7531\u6765 \u9ad8\u65af\u6734\u7d20\u8d1d\u53f6\u65af \u7684\u53c2\u6570\u4f7f\u7528 \u6700\u5927\u4f3c\u7136\u4f30\u8ba1 \u591a\u9879\u5206\u5e03\u6734\u7d20\u8d1d\u53f6\u65af \u4f2f\u52aa\u5229\u6734\u7d20\u8d1d\u53f6\u65af \u5806\u5916\u6734\u7d20\u8d1d\u53f6\u65af\u6a21\u578b\u62df\u5408 1.10 \u51b3\u7b56\u6811 \u65e0\u53c2\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u56de\u5f52\u4e0e\u5206\u7c7b \u76ee\u7684\u662f\u521b\u5efa\u4e00\u79cd\u6a21\u578b\u4ece\u6570\u636e\u7279\u5f81\u4e2d\u5b66\u4e60\u7b80\u5355\u7684\u51b3\u7b56\u89c4\u5219\u6765\u9884\u6d4b\u4e00\u4e2a\u76ee\u6807\u53d8\u91cf\u7684\u503c \u51b3\u7b56\u6811\u6a21\u578b\u5bb9\u6613\u4ea7\u751f\u4e00\u4e2a\u8fc7\u4e8e\u590d\u6742\u7684\u6a21\u578b, \u8fd9\u6837\u7684\u6a21\u578b\u5bf9\u6570\u636e\u7684\u6cdb\u5316\u6027\u80fd\u4f1a\u5f88\u5dee \u51b3\u7b56\u6811\u53ef\u80fd\u662f\u4e0d\u7a33\u5b9a\u7684, \u56e0\u4e3a\u6570\u636e\u4e2d\u7684\u5fae\u5c0f\u53d8\u5316\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5b8c\u5168\u4e0d\u540c\u7684\u6811\u751f\u6210 1.11 \u96c6\u6210\u65b9\u6cd5 \u96c6\u6210\u65b9\u6cd5 \u7684\u76ee\u6807\u662f\u628a\u4f7f\u7528\u7ed9\u5b9a\u5b66\u4e60\u7b97\u6cd5\u6784\u5efa\u7684\u591a\u4e2a\u57fa\u4f30\u8ba1\u5668\u7684\u9884\u6d4b\u7ed3\u679c\u7ed3\u5408\u8d77\u6765, \u4ece\u800c\u83b7\u5f97\u6bd4\u5355\u4e2a\u4f30\u8ba1\u5668\u66f4\u597d\u7684\u6cdb\u5316\u80fd\u529b/\u9c81\u68d2\u6027 \u5e73\u5747\u65b9\u6cd5, \u8be5\u65b9\u6cd5\u7684\u539f\u7406\u662f\u6784\u5efa\u591a\u4e2a\u72ec\u7acb\u7684\u4f30\u8ba1\u5668, \u7136\u540e\u53d6\u5b83\u4eec\u7684\u9884\u6d4b\u7ed3\u679c\u7684\u5e73\u5747. \u4e00\u822c\u6765\u8bf4\u7ec4\u5408\u4e4b\u540e\u7684\u4f30\u8ba1\u5668\u662f\u4f1a\u6bd4\u5355\u4e2a\u4f30\u8ba1\u5668\u8981\u597d\u7684, \u56e0\u4e3a\u5b83\u7684 \u65b9\u5dee \u51cf\u5c0f\u4e86. Bagging \u65b9\u6cd5, \u968f\u673a\u68ee\u6797, \u2026 \u5728 boosting \u65b9\u6cd5 \u4e2d, \u57fa\u4f30\u8ba1\u5668\u662f\u4f9d\u6b21\u6784\u5efa\u7684, \u5e76\u4e14\u6bcf\u4e00\u4e2a\u57fa\u4f30\u8ba1\u5668\u90fd\u5c1d\u8bd5\u53bb\u51cf\u5c11\u7ec4\u5408\u4f30\u8ba1\u5668\u7684 \u504f\u5dee . \u8fd9\u79cd\u65b9\u6cd5\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u7ed3\u5408\u591a\u4e2a\u5f31\u6a21\u578b, \u4f7f\u96c6\u6210\u7684\u6a21\u578b\u66f4\u52a0\u5f3a\u5927. AdaBoost, \u68af\u5ea6\u63d0\u5347\u6811, \u2026 bagging \u65b9\u6cd5\u4f1a\u5728\u539f\u59cb\u8bad\u7ec3\u96c6\u7684\u968f\u673a\u5b50\u96c6\u4e0a\u6784\u5efa\u4e00\u7c7b\u9ed1\u76d2\u4f30\u8ba1\u5668\u7684\u591a\u4e2a\u5b9e\u4f8b,\u7136\u540e\u628a\u8fd9\u591a\u4e2a\u4f30\u8ba1\u5668\u7684\u9884\u6d4b\u7ed3\u679c\u7ed3\u5408\u8d77\u6765\u5f62\u6210\u6700\u7ec8\u7684\u9884\u6d4b\u7ed3\u679c. \u8be5\u65b9\u6cd5\u901a\u8fc7\u5728\u6784\u5efa\u6a21\u578b\u7684\u8fc7\u7a0b\u4e2d\u5f15\u5165\u968f\u673a\u6027,\u6765\u51cf\u5c11\u57fa\u4f30\u8ba1\u5668\u7684\u65b9\u5dee(\u4f8b\u5982,\u51b3\u7b56\u6811). \u5728\u591a\u6570\u60c5\u51b5\u4e0b,bagging \u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u5bf9\u5355\u4e00\u6a21\u578b\u8fdb\u884c\u6539\u8fdb,\u800c\u65e0\u9700\u4fee\u6539\u80cc\u540e\u7684\u7b97\u6cd5. \u56e0\u4e3a bagging \u65b9\u6cd5\u53ef\u4ee5\u51cf\u5c0f\u8fc7\u62df\u5408,\u6240\u4ee5\u901a\u5e38\u6700\u9002\u5408\u5728\u5f3a\u5206\u7c7b\u5668\u548c\u590d\u6742\u6a21\u578b\u4e0a\u4f7f\u7528,\u76f8\u6bd4\u4e4b\u4e0b boosting \u65b9\u6cd5\u5219\u5728\u5f31\u6a21\u578b\u4e0a\u8868\u73b0\u66f4\u597d bagging \u65b9\u6cd5\u6709\u5f88\u591a\u79cd,\u533a\u522b\u5927\u591a\u6570\u5728\u4e8e\u62bd\u53d6\u8bad\u7ec3\u5b50\u96c6\u7684\u65b9\u6cd5\uff1a \u62bd\u53d6\u7684\u6570\u636e\u96c6\u662f\u5bf9\u4e8e\u6837\u4f8b\u62bd\u53d6\u7684\u5b50\u96c6,\u6211\u4eec\u53eb\u505aPasting \u6837\u4f8b\u62bd\u53d6\u662f\u6709\u653e\u56de\u7684,\u6211\u4eec\u79f0\u4e3a Bagging \u62bd\u53d6\u7684\u6570\u636e\u96c6\u7684\u968f\u673a\u5b50\u96c6\u662f\u5bf9\u4e8e\u7279\u5f81\u62bd\u53d6\u7684\u968f\u673a\u5b50\u96c6,\u6211\u4eec\u53eb\u505aRandom Subspaces \u4f30\u8ba1\u5668\u6784\u5efa\u5728\u5bf9\u4e8e\u6837\u672c\u548c\u7279\u5f81\u62bd\u53d6\u7684\u5b50\u96c6\u4e4b\u4e0a\u65f6,\u6211\u4eec\u53eb\u505aRandom Patches \u96c6\u6210\u6a21\u578b\u4e2d\u7684\u6bcf\u68f5\u6811\u6784\u5efa\u65f6\u7684\u6837\u672c\u90fd\u662f\u7531\u8bad\u7ec3\u96c6\u7ecf\u8fc7\u6709\u653e\u56de\u62bd\u6837\u5f97\u6765\u7684. \u53e6\u5916,\u5728\u6784\u5efa\u6811\u7684\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u7ed3\u70b9\u5206\u5272\u65f6,\u9009\u62e9\u7684\u5206\u5272\u70b9\u4e0d\u518d\u662f\u6240\u6709\u7279\u5f81\u4e2d\u6700\u4f73\u5206\u5272\u70b9,\u800c\u662f\u7279\u5f81\u7684\u4e00\u4e2a\u968f\u673a\u5b50\u96c6\u4e2d\u7684\u6700\u4f73\u5206\u5272\u70b9. \u7531\u4e8e\u8fd9\u79cd\u968f\u673a\u6027,\u68ee\u6797\u7684\u504f\u5dee\u901a\u5e38\u4f1a\u6709\u7565\u5fae\u7684\u589e\u5927(\u76f8\u5bf9\u4e8e\u5355\u4e2a\u975e\u968f\u673a\u6811\u7684\u504f\u5dee),\u4f46\u662f\u7531\u4e8e\u53d6\u4e86\u5e73\u5747,\u5176\u65b9\u5dee\u4e5f\u4f1a\u51cf\u5c0f,\u901a\u5e38\u80fd\u591f\u8865\u507f\u504f\u5dee\u7684\u589e\u52a0,\u4ece\u800c\u4ea7\u751f\u4e00\u4e2a\u603b\u4f53\u4e0a\u66f4\u597d\u7684\u6a21\u578b scikit-learn \u7684\u5b9e\u73b0\u662f\u53d6\u6bcf\u4e2a\u5206\u7c7b\u5668\u9884\u6d4b\u6982\u7387\u7684\u5e73\u5747,\u800c\u4e0d\u662f\u8ba9\u6bcf\u4e2a\u5206\u7c7b\u5668\u5bf9\u7c7b\u522b\u8fdb\u884c\u6295\u7968 \u5728\u6781\u9650\u968f\u673a\u6811\u4e2dExtraTreesClassifier \u548c ExtraTreesRegressor, \u8ba1\u7b97\u5206\u5272\u70b9\u65b9\u6cd5\u4e2d\u7684\u968f\u673a\u6027\u8fdb\u4e00\u6b65\u589e\u5f3a. \u5728\u968f\u673a\u68ee\u6797\u4e2d,\u4f7f\u7528\u7684\u7279\u5f81\u662f \u5019\u9009\u7279\u5f81\u7684\u968f\u673a\u5b50\u96c6 ; \u4e0d\u540c\u4e8e\u5bfb\u627e\u6700\u5177\u6709\u533a\u5206\u5ea6\u7684\u9608\u503c, \u8fd9\u91cc\u7684\u9608\u503c\u662f\u9488\u5bf9\u6bcf\u4e2a\u5019\u9009\u7279\u5f81\u968f\u673a\u751f\u6210\u7684,\u5e76\u4e14\u9009\u62e9\u8fd9\u4e9b\u968f\u673a\u751f\u6210\u7684\u9608\u503c\u4e2d\u7684\u6700\u4f73\u8005\u4f5c\u4e3a\u5206\u5272\u89c4\u5219. \u8fd9\u79cd\u505a\u6cd5\u901a\u5e38\u80fd\u591f\u51cf\u5c11\u4e00\u70b9\u6a21\u578b\u7684\u65b9\u5dee,\u4ee3\u4ef7\u5219\u662f\u7565\u5fae\u5730\u589e\u5927\u504f\u5dee \u56de\u5f52\u95ee\u9898\u4e2d\u4f7f\u7528 max_features = n_features, \u5206\u7c7b\u95ee\u9898\u4f7f\u7528 max_features = sqrt(n_features (\u5176\u4e2d n_features \u662f\u7279\u5f81\u7684\u4e2a\u6570)\u662f\u6bd4\u8f83\u597d\u7684\u9ed8\u8ba4\u503c. max_depth = None \u548c min_samples_split = 2 \u7ed3\u5408\u901a\u5e38\u4f1a\u6709\u4e0d\u9519\u7684\u6548\u679c(\u5373\u751f\u6210\u5b8c\u5168\u7684\u6811). \u8bf7\u8bb0\u4f4f,\u8fd9\u4e9b(\u9ed8\u8ba4)\u503c\u901a\u5e38\u4e0d\u662f\u6700\u4f73\u7684,\u540c\u65f6\u8fd8\u53ef\u80fd\u6d88\u8017\u5927\u91cf\u7684\u5185\u5b58,\u6700\u4f73\u53c2\u6570\u503c\u5e94\u7531\u4ea4\u53c9\u9a8c\u8bc1\u83b7\u5f97 \u5982\u679c\u8bbe\u7f6e n_jobs = k, \u5219\u8ba1\u7b97\u88ab\u5212\u5206\u4e3a k \u4e2a\u4f5c\u4e1a, \u5e76\u8fd0\u884c\u5728\u673a\u5668\u7684 k \u4e2a\u6838\u4e0a. \u5982\u679c\u8bbe\u7f6e n_jobs = -1, \u5219\u4f7f\u7528\u673a\u5668\u7684\u6240\u6709\u6838 \u7279\u5f81\u5bf9\u76ee\u6807\u53d8\u91cf\u9884\u6d4b\u7684\u76f8\u5bf9\u91cd\u8981\u6027\u53ef\u4ee5\u901a\u8fc7(\u6811\u4e2d\u7684\u51b3\u7b56\u8282\u70b9\u7684)\u7279\u5f81\u4f7f\u7528\u7684\u76f8\u5bf9\u987a\u5e8f(\u5373\u6df1\u5ea6)\u6765\u8fdb\u884c\u8bc4\u4f30. \u51b3\u7b56\u6811\u9876\u90e8\u4f7f\u7528\u7684\u7279\u5f81\u5bf9\u66f4\u5927\u4e00\u90e8\u5206\u8f93\u5165\u6837\u672c\u7684\u6700\u7ec8\u9884\u6d4b\u51b3\u7b56\u505a\u51fa\u8d21\u732e\uff1b\u56e0\u6b64, \u53ef\u4ee5\u4f7f\u7528\u63a5\u53d7\u6bcf\u4e2a\u7279\u5f81\u5bf9\u6700\u7ec8\u9884\u6d4b\u7684\u8d21\u732e\u7684\u6837\u672c\u6bd4\u4f8b\u6765\u8bc4\u4f30\u8be5 \u7279\u5f81\u7684\u76f8\u5bf9\u91cd\u8981\u6027 \u9996\u5148\u5e94\u5f53\u8bc4\u4f30\u5404\u4e2a\u7279\u5f81\u7684\u91cd\u8981\u6027 http://sklearn.apachecn.org/cn/0.19.0/auto_examples/ensemble/plot_forest_importances.html#sphx-glr-auto-examples-ensemble-plot-forest-importances-py AdaBoost AdaBoost \u7684\u6838\u5fc3\u601d\u60f3\u662f\u7528\u53cd\u590d\u4fee\u6539\u7684\u6570\u636e(\u4e3b\u8981\u662f\u4fee\u6b63\u6570\u636e\u7684\u6743\u91cd)\u6765\u5b66\u4e60\u4e00\u7cfb\u5217\u7684\u5f31\u5b66\u4e60\u5668(\u4e00\u4e2a\u5f31\u5b66\u4e60\u5668\u6a21\u578b\u4ec5\u4ec5\u6bd4\u968f\u673a\u731c\u6d4b\u597d\u4e00\u70b9, \u6bd4\u5982\u4e00\u4e2a\u7b80\u5355\u7684\u51b3\u7b56\u6811),\u7531\u8fd9\u4e9b\u5f31\u5b66\u4e60\u5668\u7684\u9884\u6d4b\u7ed3\u679c\u901a\u8fc7\u52a0\u6743\u6295\u7968(\u6216\u52a0\u6743\u6c42\u548c)\u7684\u65b9\u5f0f\u7ec4\u5408, \u5f97\u5230\u6211\u4eec\u6700\u7ec8\u7684\u9884\u6d4b\u7ed3\u679c. \u5728\u6bcf\u4e00\u6b21\u6240\u8c13\u7684\u63d0\u5347(boosting)\u8fed\u4ee3\u4e2d, \u6570\u636e\u7684\u4fee\u6539\u7531\u5e94\u7528\u4e8e\u6bcf\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u7684(\u65b0) \u7684\u6743\u91cd w_1, w_2, \u2026, w_N \u7ec4\u6210(\u5373\u4fee\u6539\u6bcf\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u5e94\u7528\u4e8e\u65b0\u4e00\u8f6e\u5b66\u4e60\u5668\u7684\u6743\u91cd). \u521d\u59cb\u5316\u65f6,\u5c06\u6240\u6709\u5f31\u5b66\u4e60\u5668\u7684\u6743\u91cd\u90fd\u8bbe\u7f6e\u4e3a w_i = 1/N ,\u56e0\u6b64\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4ec5\u4ec5\u662f\u901a\u8fc7\u539f\u59cb\u6570\u636e\u8bad\u7ec3\u51fa\u4e00\u4e2a\u5f31\u5b66\u4e60\u5668. \u5728\u63a5\u4e0b\u6765\u7684 \u8fde\u7eed\u8fed\u4ee3\u4e2d,\u6837\u672c\u7684\u6743\u91cd\u9010\u4e2a\u5730\u88ab\u4fee\u6539,\u5b66\u4e60\u7b97\u6cd5\u4e5f\u56e0\u6b64\u8981\u91cd\u65b0\u5e94\u7528\u8fd9\u4e9b\u5df2\u7ecf\u4fee\u6539\u7684\u6743\u91cd. \u5728\u7ed9\u5b9a\u7684\u4e00\u4e2a\u8fed\u4ee3\u4e2d, \u90a3\u4e9b\u5728\u4e0a\u4e00\u8f6e\u8fed\u4ee3\u4e2d\u88ab\u9884\u6d4b\u4e3a\u9519\u8bef\u7ed3\u679c\u7684\u6837\u672c\u7684\u6743\u91cd\u5c06\u4f1a\u88ab\u589e\u52a0, \u800c\u90a3\u4e9b\u88ab\u9884\u6d4b\u4e3a\u6b63\u786e\u7ed3\u679c\u7684\u6837\u672c\u7684\u6743 \u91cd\u5c06\u4f1a\u88ab\u964d\u4f4e. \u968f\u7740\u8fed\u4ee3\u6b21\u6570\u7684\u589e\u52a0, \u90a3\u4e9b\u96be\u4ee5\u9884\u6d4b\u7684\u6837\u4f8b\u7684\u5f71\u54cd\u5c06\u4f1a\u8d8a\u6765\u8d8a\u5927, \u6bcf\u4e00\u4e2a\u968f\u540e\u7684\u5f31\u5b66\u4e60\u5668\u90fd\u5c06 \u4f1a\u88ab\u5f3a\u8feb\u66f4\u52a0\u5173\u6ce8\u90a3\u4e9b\u5728\u4e4b\u524d\u88ab\u9519\u8bef\u9884\u6d4b\u7684\u6837\u4f8b Gradient Tree Boosting Gradient Tree Boosting \u6216\u68af\u5ea6\u63d0\u5347\u56de\u5f52\u6811(GBRT)\u662f\u5bf9\u4e8e\u4efb\u610f\u7684\u53ef\u5fae\u635f\u5931\u51fd\u6570\u7684\u63d0\u5347\u7b97\u6cd5\u7684\u6cdb\u5316. GBRT \u662f\u4e00\u4e2a\u51c6\u786e\u9ad8\u6548\u7684\u73b0\u6709\u7a0b\u5e8f, \u5b83\u65e2\u80fd\u7528\u4e8e\u5206\u7c7b\u95ee\u9898\u4e5f\u53ef\u4ee5\u7528\u4e8e\u56de\u5f52\u95ee\u9898. \u68af\u5ea6\u6811\u63d0\u5347\u6a21\u578b\u88ab\u5e94\u7528\u5230\u5404\u79cd\u9886\u57df, \u5305\u62ec\u7f51\u9875\u641c\u7d22\u6392\u540d\u548c\u751f\u6001\u9886\u57df. \u56de\u5f52\u6811\u57fa\u5b66\u4e60\u5668\u7684\u5927\u5c0f\u5b9a\u4e49\u4e86\u53ef\u4ee5\u88ab\u68af\u5ea6\u63d0\u5347\u6a21\u578b\u6355\u6349\u5230\u7684\u53d8\u91cf(\u5373\u7279\u5f81)\u76f8\u4e92\u4f5c\u7528(\u5373\u591a\u4e2a\u7279\u5f81\u5171\u540c\u5bf9\u9884\u6d4b\u4ea7\u751f\u5f71\u54cd)\u7684\u7a0b\u5ea6. \u901a\u5e38\u4e00\u68f5\u6df1\u5ea6\u4e3a h \u7684\u6811\u80fd\u6355\u83b7\u5230\u79e9\u4e3a h \u7684\u76f8\u4e92\u4f5c\u7528 \u76ee\u524d\u652f\u6301\u7684\u635f\u5931\u51fd\u6570, \u5177\u4f53\u635f\u5931\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570 loss \u6307\u5b9a: \u56de\u5f52 (Regression) Least squares ('ls'): \u7531\u4e8e\u5176\u4f18\u8d8a\u7684\u8ba1\u7b97\u6027\u80fd,\u8be5\u635f\u5931\u51fd\u6570\u6210\u4e3a\u56de\u5f52\u7b97\u6cd5\u4e2d\u7684\u81ea\u7136\u9009\u62e9. \u521d\u59cb\u6a21\u578b\u901a\u8fc7\u76ee\u6807\u503c\u7684\u5747\u503c\u7ed9\u51fa. Least absolute deviation ('lad'): \u56de\u5f52\u4e2d\u5177\u6709\u9c81\u68d2\u6027\u7684\u635f\u5931\u51fd\u6570,\u521d\u59cb\u6a21\u578b\u901a\u8fc7\u76ee \u6807\u503c\u7684\u4e2d\u503c\u7ed9\u51fa. Huber ('huber'): \u56de\u5f52\u4e2d\u53e6\u4e00\u4e2a\u5177\u6709\u9c81\u68d2\u6027\u7684\u635f\u5931\u51fd\u6570,\u5b83\u662f\u6700\u5c0f\u4e8c\u4e58\u548c\u6700\u5c0f\u7edd\u5bf9\u504f\u5dee\u4e24\u8005\u7684\u7ed3\u5408. \u5176\u5229\u7528 alpha \u6765\u63a7\u5236\u6a21\u578b\u5bf9\u4e8e\u5f02\u5e38\u70b9\u7684\u654f\u611f\u5ea6 Quantile ('quantile'): \u5206\u4f4d\u6570\u56de\u5f52\u635f\u5931\u51fd\u6570.\u7528 0 < alpha < 1 \u6765\u6307\u5b9a\u5206\u4f4d\u6570\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u4ea7\u751f\u9884\u6d4b\u95f4\u9694 \u5206\u7c7b (Classification) Binomial deviance ('deviance'): \u5bf9\u4e8e\u4e8c\u5206\u7c7b\u95ee\u9898(\u63d0\u4f9b\u6982\u7387\u4f30\u8ba1)\u5373\u8d1f\u7684\u4e8c\u9879log\u4f3c\u7136 \u635f\u5931\u51fd\u6570.\u6a21\u578b\u4ee5log\u7684\u6bd4\u503c\u6bd4\u6765\u521d\u59cb\u5316. Multinomial deviance ('deviance'): \u5bf9\u4e8e\u591a\u5206\u7c7b\u95ee\u9898\u7684\u8d1f\u7684\u591a\u9879log\u4f3c\u7136\u635f\u5931\u51fd\u6570\u5177\u6709 n_classes \u4e2a\u4e92\u65a5\u7684\u7c7b.\u63d0\u4f9b\u6982\u7387\u4f30\u8ba1. \u521d\u59cb\u6a21\u578b\u7531\u6bcf\u4e2a\u7c7b\u7684\u5148\u9a8c\u6982\u7387\u7ed9\u51fa.\u5728\u6bcf\u4e00\u6b21\u8fed\u4ee3\u4e2d n_classes \u56de\u5f52\u6811\u88ab\u6784\u5efa,\u8fd9\u4f7f\u5f97 GBRT \u5728\u5904\u7406\u591a\u7c7b\u522b\u6570\u636e\u96c6\u65f6\u76f8\u5f53\u4f4e\u6548. Exponential loss ('exponential'): \u4e0e AdaBoostClassifier \u5177\u6709\u76f8\u540c\u7684\u635f\u5931 \u51fd\u6570\u4e0e 'deviance' \u76f8\u6bd4, \u5bf9\u5177\u6709\u9519\u8bef\u6807\u8bb0\u7684\u6837\u672c\u7684\u9c81\u68d2\u6027\u8f83\u5dee,\u4ec5\u7528\u4e8e\u5728\u4e8c\u5206\u7c7b\u95ee\u9898 \u5728\u62df\u5408\u4e00\u5b9a\u6570\u91cf\u7684\u5f31\u5206\u7c7b\u5668\u65f6, \u53c2\u6570 learning_rate \u548c\u53c2\u6570 n_estimators \u4e4b\u95f4\u6709\u5f88\u5f3a\u7684\u5236\u7ea6\u5173\u7cfb. \u8f83\u5c0f\u7684 learning_rate \u9700\u8981\u5927\u91cf\u7684\u5f31\u5206\u7c7b\u5668\u624d\u80fd\u4fdd\u8bc1\u8bad\u7ec3\u8bef\u5dee\u7684\u4e0d\u53d8.\u7ecf\u9a8c\u8868\u660e\u6570\u503c\u8f83\u5c0f\u7684 learning_rate \u5c06\u4f1a\u5f97\u5230\u66f4\u597d\u7684\u6d4b\u8bd5\u8bef\u5dee. XGBoost XGBoost \u662f Extreme Gradient Boosting \u7684\u7f29\u5199 XGBoost \u7528\u4e8e\u76d1\u7763\u5b66\u4e60\u95ee\u9898 \u6b63\u5219\u5316\u9879\u63a7\u5236\u6a21\u578b\u7684\u590d\u6742\u6027, \u8fd9\u6709\u52a9\u4e8e\u907f\u514d\u8fc7\u62df\u5408 \u6811\u96c6\u6210\u6a21\u578b\u662f\u4e00\u7ec4 classification and regression trees(CART) CART \u4e0e decision trees(\u51b3\u7b56\u6811)\u6709\u4e9b\u8bb8\u7684\u4e0d\u540c, \u5c31\u662f\u53f6\u5b50\u53ea\u5305\u542b\u51b3\u7b56\u503c. \u5728 CART \u4e2d, \u6bcf\u4e2a\u53f6\u5b50\u90fd\u6709\u4e00\u4e2a real score (\u771f\u5b9e\u7684\u5206\u6570), \u8fd9\u7ed9\u4e86\u6211\u4eec\u66f4\u4e30\u5bcc\u7684\u89e3\u91ca, \u8d85\u8d8a\u4e86\u5206\u7c7b \u652f\u6301\u5bfc\u5165\u7684\u6570\u636e\u683c\u5f0f libsvm txt format file numpy \u7684 2D \u6570\u7ec4 xgboost binary buffer file \u6570\u636e\u5c06\u4f1a\u88ab\u5b58\u5728\u4e00\u4e2a\u540d\u4e3a DMatrix \u7684\u5bf9\u8c61\u4e2d \u52a0\u8f7d ligbsvm \u6587\u672c\u683c\u5f0f\u6216\u8005 XGBoost \u4e8c\u8fdb\u5236\u6587\u4ef6\u5230 DMatrix \u5bf9\u8c61\u4e2d dtrain = xgb.DMatrix('train.svm.txt') dtest = xgb.DMatrix('test.svm.buffer') \u52a0\u8f7d numpy \u7684\u6570\u7ec4\u5230 DMatrix \u5bf9\u8c61\u4e2d data = np.random.rand(5,10) # 5 entities, each contains 10 features label = np.random.randint(2, size=5) # binary target dtrain = xgb.DMatrix( data, label=label) \u52a0\u8f7d scpiy.sparse \u6570\u7ec4\u5230 DMatrix \u5bf9\u8c61\u4e2d csr = scipy.sparse.csr_matrix((dat, (row, col))) dtrain = xgb.DMatrix(csr) \u4fdd\u5b58 DMatrix \u5230 XGBoost \u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u540e, \u4f1a\u5728\u4e0b\u6b21\u52a0\u8f7d\u65f6\u66f4\u5feb dtrain = xgb.DMatrix('train.svm.txt') dtrain.save_binary(\"train.buffer\") \u5904\u7406 DMatrix \u4e2d\u7684\u7f3a\u5931\u503c, \u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u7f3a\u5931\u503c\u7684\u53c2\u6570\u6765\u521d\u59cb\u5316 DMatrix dtrain = xgb.DMatrix(data, label=label, missing = -999.0) xgboost \u4f7f\u7528 \u5b57\u5178 \u6765\u4fdd\u5b58\u53c2\u6570 booster \u53c2\u6570 param = {'bst:max_depth':2, 'bst:eta':1, 'silent':1, 'objective':'binary:logistic' } param['nthread'] = 4 param['eval_metric'] = 'auc' \u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u8bc4\u4f30\u6307\u6807 param['eval_metric'] = ['auc', 'ams@0'] plst = param.items() plst += [('eval_metric', 'ams@0')] \u6307\u5b9a \u6a21\u5f0f evallist = [(dtest,'eval'), (dtrain,'train')] \u8bad\u7ec3\u6a21\u578b num_round = 10 bst = xgb.train( plst, dtrain, num_round, evallist ) \u4fdd\u5b58 bst.save_model('0001.model') \u52a0\u8f7d\u548c\u8f6c\u5b58 dump_model() load_model() \u5982\u679c\u60a8\u6709\u4e00\u4e2a\u9a8c\u8bc1\u96c6, \u4f60\u53ef\u4ee5\u4f7f\u7528\u63d0\u524d\u505c\u6b62\u627e\u5230\u6700\u4f73\u6570\u91cf\u7684 boosting rounds\uff08\u68af\u5ea6\u6b21\u6570\uff09. \u63d0\u524d\u505c\u6b62\u81f3\u5c11\u9700\u8981\u4e00\u4e2a evals \u96c6\u5408. \u5982\u679c\u6709\u591a\u4e2a, \u5b83\u5c06\u4f7f\u7528\u6700\u540e\u4e00\u4e2a. train(..., evals=evals, early_stopping_rounds=10) \u5982\u679c\u63d0\u524d\u505c\u6b62\uff0c\u6a21\u578b\u5c06\u6709\u4e09\u4e2a\u989d\u5916\u7684\u5b57\u6bb5: bst.best_score, bst.best_iteration \u548c bst.best_ntree_limit. \u8bf7\u6ce8\u610f train() \u5c06\u4ece\u4e0a\u4e00\u6b21\u8fed\u4ee3\u4e2d\u8fd4\u56de\u4e00\u4e2a\u6a21\u578b, \u800c\u4e0d\u662f\u6700\u597d\u7684\u4e00\u4e2a. \u8fd9\u4e0e\u4e24\u4e2a\u5ea6\u91cf\u6807\u51c6\u4e00\u8d77\u4f7f\u7528\u4ee5\u8fbe\u5230\u6700\u5c0f\u5316\uff08RMSE, \u5bf9\u6570\u635f\u5931\u7b49\uff09\u548c\u6700\u5927\u5316\uff08MAP, NDCG, AUC\uff09. \u8bf7\u6ce8\u610f, \u5982\u679c\u60a8\u6307\u5b9a\u591a\u4e2a\u8bc4\u4f30\u6307\u6807, \u5219 param ['eval_metric'] \u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u7528\u4e8e\u63d0\u524d\u505c\u6b62 \u9884\u6d4b predict() \u7ed8\u56fe # \u91cd\u8981\u6027 xgb.plot_importance(bst) # \u6811 xgb.plot_tree(bst, num_trees=2) xgb.to_graphviz(bst, num_trees=2) xgboost \u5e93\u7684\u4e3b\u8981 API class xgboost.DMatrix() # \u7c7b get_label() get_weight() num_col() save_binary(fname, silent=True) set_label(label) slice(rindex) class xgboost.Booster(params=None, cache=(), model_file=None) # \u7c7b eval(data, name='eval', iteration=0) get_score(fmap='', importance_type='weight') get_split_value_histogram(feature, fmap='', bins=None, as_pandas=True) predict(data, output_margin=False, ntree_limit=0, pred_leaf=False, pred_contribs=False, approx_contribs=False) save_model(fname) xgboost.train() # \u51fd\u6570 params (dict) \u2013 Booster params dtrain (DMatrix) \u2013 Data to be trained num_boost_round (int) \u2013 Number of boosting iterations early_stopping_rounds (int) \u2013 Activates early stopping learning_rates xgboost.cv() # \u51fd\u6570 class xgboost.XGBRegressor() # \u7c7b, sklearn wrapper class xgboost.XGBClassifier() xgboost.plot_importance() # \u51fd\u6570 xgboost.plot_tree() # \u51fd\u6570 xgboost.to_graphviz() # \u51fd\u6570 xgboost/demo at master \u00b7 dmlc/xgboost xgboost/demo/guide-python at master \u00b7 tqchen/xgboost Python API Reference \u2014 xgboost 0.6 documentation \u89e3\u91ca\u6027 \u7279\u5f81\u91cd\u8981\u6027 \u5355\u4e2a\u51b3\u7b56\u6811\u672c\u8d28\u4e0a\u662f\u901a\u8fc7\u9009\u62e9\u6700\u4f73\u5207\u5206\u70b9\u6765\u8fdb\u884c\u7279\u5f81\u9009\u62e9.\u8fd9\u4e2a\u4fe1\u606f\u53ef\u4ee5\u7528\u6765\u68c0\u6d4b\u6bcf\u4e2a\u7279\u5f81\u7684\u91cd\u8981\u6027.\u57fa\u672c\u601d\u60f3\u662f\uff1a\u5728\u6811 \u7684\u5206\u5272\u70b9\u4e2d\u4f7f\u7528\u7684\u7279\u5f81\u8d8a\u9891\u7e41, \u7279\u5f81\u8d8a\u91cd\u8981. \u90e8\u5206\u4f9d\u8d56 (Partial dependence) VotingClassifier (\u6295\u7968\u5206\u7c7b\u5668)\u7684\u539f\u7406\u662f\u7ed3\u5408\u4e86\u591a\u4e2a\u4e0d\u540c\u7684\u673a\u5668\u5b66\u4e60\u5206\u7c7b\u5668, \u5e76\u4e14\u91c7\u7528\u591a\u6570\u8868\u51b3(majority vote)\u6216\u8005\u5e73\u5747\u9884\u6d4b\u6982\u7387(\u8f6f\u6295\u7968)\u7684\u65b9\u5f0f\u6765\u9884\u6d4b\u5206\u7c7b\u6807\u7b7e. \u8fd9\u6837\u7684\u5206\u7c7b\u5668\u53ef\u4ee5\u7528\u4e8e\u4e00\u7ec4\u540c\u6837\u8868\u73b0\u826f\u597d\u7684\u6a21\u578b, \u4ee5\u4fbf\u5e73\u8861\u5b83\u4eec\u5404\u81ea\u7684\u5f31\u70b9 1.12 \u591a\u7c7b\u548c\u591a\u6807\u7b7e\u7b97\u6cd5 1 vs 1 sklearn.svm.NuSVC sklearn.svm.SVC sklearn.gaussian_process.GaussianProcessClassifier 1 vs many GradientBoostingClassifier GaussianProcessClassifier LogisticRegression PassiveAggressiveClassifier Perceptron \u7279\u5f81\u9009\u62e9 VarianceThreshold \u662f\u7279\u5f81\u9009\u62e9\u7684\u4e00\u4e2a\u7b80\u5355\u57fa\u672c\u65b9\u6cd5\uff0c\u5b83\u4f1a\u79fb\u9664\u6240\u6709\u90a3\u4e9b\u65b9\u5dee\u4e0d\u6ee1\u8db3\u4e00\u4e9b\u9608\u503c\u7684\u7279\u5f81, \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u4f1a\u79fb\u9664\u6240\u6709\u7684\u96f6\u65b9\u5dee\u7279\u5f81\uff0c\u5373\u90a3\u4e9b\u5728\u6240\u6709\u7684\u6837\u672c\u4e0a\u7684\u53d6\u503c\u5747\u4e0d\u53d8\u7684\u7279\u5f81 \u5355\u53d8\u91cf\u7684\u7279\u5f81\u9009\u62e9\u662f\u901a\u8fc7\u57fa\u4e8e\u5355\u53d8\u91cf\u7684\u7edf\u8ba1\u6d4b\u8bd5\u6765\u9009\u62e9\u6700\u597d\u7684\u7279\u5f81\u3002\u5b83\u53ef\u4ee5\u5f53\u505a\u662f\u8bc4\u4f30\u5668\u7684\u9884\u5904\u7406\u6b65\u9aa4 \u53ef\u4ee5\u901a\u8fc7 \u7edf\u8ba1\u6d4b\u8bd5 \u8fdb\u884c\u7279\u5f81\u9009\u62e9 \u5c06\u5f97\u5206\u51fd\u6570\u4f5c\u4e3a\u8f93\u5165\uff0c\u8fd4\u56de\u5355\u53d8\u91cf\u7684\u5f97\u5206\u548c p \u503c \uff08\u6216\u8005\u4ec5\u4ec5\u662f SelectKBest \u548c SelectPercentile \u7684\u5206\u6570\uff09: \u5bf9\u4e8e\u56de\u5f52: f_regression , mutual_info_regression \u5bf9\u4e8e\u5206\u7c7b: chi2 , f_classif , mutual_info_classif \u8fd9\u4e9b\u57fa\u4e8e F-test \u7684\u65b9\u6cd5\u8ba1\u7b97\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\u4e4b\u95f4\u7684\u7ebf\u6027\u76f8\u5173\u7a0b\u5ea6 mutual information methods\uff08\u4e92\u4fe1\u606f\uff09\u80fd\u591f\u8ba1\u7b97\u4efb\u4f55\u79cd\u7c7b\u7684\u7edf\u8ba1\u76f8\u5173\u6027\uff0c\u4f46\u662f\u4f5c\u4e3a\u975e\u53c2\u6570\u7684\u65b9\u6cd5\uff0c\u4e92\u4fe1\u606f\u9700\u8981\u66f4\u591a\u7684\u6837\u672c\u6765\u8fdb\u884c\u51c6\u786e\u7684\u4f30\u8ba1 \u4e0d\u8981\u4f7f\u7528\u4e00\u4e2a\u56de\u5f52\u8bc4\u5206\u51fd\u6570\u6765\u5904\u7406\u5206\u7c7b\u95ee\u9898 \u9012\u5f52\u5f0f\u7279\u5f81\u6d88\u9664 recursive feature elimination ( RFE ) \u901a\u8fc7\u8003\u8651\u8d8a\u6765\u8d8a\u5c0f\u7684\u7279\u5f81\u96c6\u5408\u6765\u9012\u5f52\u7684\u9009\u62e9\u7279\u5f81 Linear models \u4f7f\u7528 L1 \u6b63\u5219\u5316\u7684\u7ebf\u6027\u6a21\u578b\u4f1a\u5f97\u5230\u7a00\u758f\u89e3 \u57fa\u4e8e Tree\uff08\u6811\uff09\u7684\u7279\u5f81\u9009\u53d6 \u53ef\u4ee5\u7528\u6765\u8ba1\u7b97\u7279\u5f81\u7684\u91cd\u8981\u6027\uff0c\u7136\u540e\u53ef\u4ee5\u6d88\u9664\u4e0d\u76f8\u5173\u7684\u7279\u5f81 \u7279\u5f81\u9009\u62e9\u901a\u5e38\u5728\u5b9e\u9645\u7684\u5b66\u4e60\u4e4b\u524d\u7528\u6765\u505a\u9884\u5904\u7406\u3002\u5728 scikit-learn \u4e2d\u63a8\u8350\u7684\u65b9\u5f0f\u662f\u4f7f\u7528 sklearn.pipeline.Pipeline \u6982\u7387\u6821\u51c6 \u6267\u884c\u5206\u7c7b\u65f6, \u60a8\u7ecf\u5e38\u5e0c\u671b\u4e0d\u4ec5\u53ef\u4ee5\u9884\u6d4b\u7c7b\u6807\u7b7e, \u8fd8\u8981\u83b7\u5f97\u76f8\u5e94\u6807\u7b7e\u7684\u6982\u7387\uff0c \u6821\u51c6\u6a21\u5757\u53ef\u4ee5\u8ba9\u60a8\u66f4\u597d\u5730\u6821\u51c6\u7ed9\u5b9a\u6a21\u578b\u7684\u6982\u7387, \u6216\u6dfb\u52a0\u5bf9\u6982\u7387\u9884\u6d4b\u7684\u652f\u6301\uff0c \u7cbe\u786e\u6821\u51c6\u7684\u5206\u7c7b\u5668\u662f\u6982\u7387\u5206\u7c7b\u5668, \u5176\u53ef\u4ee5\u5c06 predict_proba \u65b9\u6cd5\u7684\u8f93\u51fa\u76f4\u63a5\u89e3\u91ca\u4e3a confidence level\uff08\u7f6e\u4fe1\u5ea6\u7ea7\u522b\uff09 LogisticRegression \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8fd4\u56de\u826f\u597d\u7684\u6821\u51c6\u9884\u6d4b, \u56e0\u4e3a\u5b83\u76f4\u63a5\u4f18\u5316\u4e86 log-loss\uff08\u5bf9\u6570\u635f\u5931\uff09\u60c5\u51b5 \u795e\u7ecf\u7f51\u7edc \u591a\u5c42\u611f\u77e5\u5668\u7684\u4f18\u70b9: \u53ef\u4ee5\u5b66\u4e60\u5f97\u5230\u975e\u7ebf\u6027\u6a21\u578b\u3002 \u4f7f\u7528 partial_fit \u53ef\u4ee5\u5b66\u4e60\u5f97\u5230\u5b9e\u65f6\u6a21\u578b(\u5728\u7ebf\u5b66\u4e60) \u591a\u5c42\u611f\u77e5\u5668(MLP)\u7684\u7f3a\u70b9: \u5177\u6709\u9690\u85cf\u5c42\u7684 MLP \u5177\u6709\u975e\u51f8\u7684\u635f\u5931\u51fd\u6570\uff0c\u5b83\u6709\u4e0d\u6b62\u4e00\u4e2a\u7684\u5c40\u90e8\u6700\u5c0f\u503c\u3002 \u56e0\u6b64\u4e0d\u540c\u7684\u968f\u673a\u6743\u91cd\u521d\u59cb\u5316\u4f1a\u5bfc\u81f4\u4e0d\u540c\u7684\u9a8c\u8bc1\u96c6\u51c6\u786e\u7387\u3002 MLP \u9700\u8981\u8c03\u8bd5\u4e00\u4e9b\u8d85\u53c2\u6570\uff0c\u4f8b\u5982\u9690\u85cf\u5c42\u795e\u7ecf\u5143\u7684\u6570\u91cf\u3001\u5c42\u6570\u548c\u8fed\u4ee3\u8f6e\u6570\u3002 MLP \u5bf9\u7279\u5f81\u5f52\u4e00\u5316\u5f88\u654f\u611f.","title":"\u5e7f\u4e49\u7ebf\u6027\u6a21\u578b(GLM)"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#_1","text":"Sklearn \u7684\u5b66\u4e60\u7b14\u8bb0 \u5177\u4f53\u5b9e\u73b0\u89c1 GitHub","title":"\u5e7f\u4e49\u7ebf\u6027\u6a21\u578b"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#111","text":"\u4f7f \u6b8b\u5dee\u5e73\u65b9\u548c \u6700\u5c0f LinearRegression \u4f1a\u8c03\u7528 fit \u65b9\u6cd5\u6765\u62df\u5408\u6570\u7ec4 X, y, \u5e76\u4e14\u5c06\u7ebf\u6027\u6a21\u578b\u7684\u7cfb\u6570 w \u5b58\u50a8\u5728\u5176\u6210\u5458\u53d8\u91cf coef_ \u4e2d \u6700\u5c0f\u4e8c\u4e58\u4f30\u8ba1\u5bf9\u4e8e\u968f\u673a\u8bef\u5dee\u975e\u5e38\u654f\u611f, \u4ea7\u751f\u5f88\u5927\u7684\u65b9\u5dee \u5f62\u5f0f $$ y = xW^T+b $$","title":"1.1.1 \u666e\u901a\u6700\u5c0f\u4e8c\u4e58\u6cd5"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#112","text":"\u6700\u5c0f\u5316\u5e26\u6709L2\u6b63\u5219\u9879\u7684\u6b8b\u5dee\u5e73\u65b9\u548c RidgeCV \u901a\u8fc7\u5185\u7f6e\u7684 Alpha \u53c2\u6570\u7684\u4ea4\u53c9\u9a8c\u8bc1\u6765\u5b9e\u73b0\u5cad\u56de\u5f52. \u8be5\u5bf9\u8c61\u4e0e GridSearchCV \u7684\u4f7f\u7528\u65b9\u6cd5\u76f8\u540c, \u53ea\u662f\u5b83\u9ed8\u8ba4\u4e3a Generalized Cross-Validation(\u5e7f\u4e49\u4ea4\u53c9\u9a8c\u8bc1 GCV), \u8fd9\u662f\u4e00\u79cd\u6709\u6548\u7684\u7559\u4e00\u9a8c\u8bc1\u65b9\u6cd5(LOO-CV)","title":"1.1.2 \u5cad\u56de\u5f52"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#113-lasso","text":"\u4f30\u8ba1\u7a00\u758f\u7cfb\u6570\u7684\u7ebf\u6027\u6a21\u578b \u5b83\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u662f\u6709\u7528\u7684, \u56e0\u4e3a\u5b83\u503e\u5411\u4e8e\u4f7f\u7528\u5177\u6709\u8f83\u5c11\u53c2\u6570\u503c\u7684\u60c5\u51b5, \u6709\u6548\u5730\u51cf\u5c11\u7ed9\u5b9a\u89e3\u51b3\u65b9\u6848\u6240\u4f9d\u8d56\u53d8\u91cf\u7684\u6570\u91cf Lasso\u53ca\u5176\u53d8\u4f53\u662f\u538b\u7f29\u611f\u77e5\u9886\u57df\u7684\u57fa\u7840. \u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b, \u5b83\u53ef\u4ee5\u6062\u590d\u4e00\u7ec4\u975e\u96f6\u6743\u91cd\u7684\u7cbe\u786e\u96c6 \u635f\u5931\u51fd\u6570 $$\\min \\frac 1 {2 n_{samples}}||Xw-y||_2^2 +\\alpha||w||_1 $$ \u4f7f\u7528\u4e86 coordinate descent (\u5750\u6807\u4e0b\u964d\u7b97\u6cd5)\u6765\u62df\u5408\u7cfb\u6570 \u7531\u4e8e Lasso \u56de\u5f52\u4ea7\u751f\u7a00\u758f\u6a21\u578b, \u56e0\u6b64\u53ef\u4ee5\u7528\u4e8e\u6267\u884c\u7279\u5f81\u9009\u62e9 \u5bf9\u4e8e\u5177\u6709\u8bb8\u591a\u7ebf\u6027\u56de\u5f52\u7684\u9ad8\u7ef4\u6570\u636e\u96c6, LassoCV \u6700\u5e38\u89c1 LassoLarsCV \u5728\u5bfb\u627e alpha parameter \u53c2\u6570\u503c\u4e0a\u66f4\u5177\u6709\u4f18\u52bf, \u800c\u4e14\u5982\u679c\u6837\u672c\u6570\u91cf\u4e0e\u7279\u5f81\u6570\u91cf\u76f8\u6bd4\u975e\u5e38\u5c0f\u65f6, \u901a\u5e38 LassoLarsCV \u6bd4 LassoCV \u8981\u5feb \u5f53\u4f7f\u7528 k-fold \u4ea4\u53c9\u9a8c\u8bc1\u65f6, \u6b63\u5219\u5316\u8def\u5f84\u53ea\u8ba1\u7b97\u4e00\u6b21\u800c\u4e0d\u662fk + 1\u6b21, \u6240\u4ee5\u627e\u5230\u03b1\u7684\u6700\u4f18\u503c\u662f\u4e00\u79cd\u8ba1\u7b97\u4e0a\u66f4\u4fbf\u5b9c\u7684\u66ff\u4ee3\u65b9\u6cd5","title":"1.1.3 Lasso"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#114-multitasklasso","text":"MultiTaskLasso\u662f\u4e00\u4e2a\u4f30\u8ba1\u591a\u5143\u56de\u5f52\u7a00\u758f\u7cfb\u6570\u7684\u7ebf\u6027\u6a21\u578b\uff1a y \u662f\u4e00\u4e2a (n_samples, n_tasks) \u7684\u4e8c\u7ef4\u6570\u7ec4, \u5176\u7ea6\u675f\u6761\u4ef6\u548c\u5176\u4ed6\u56de\u5f52\u95ee\u9898(\u4e5f\u79f0\u4e3a\u4efb\u52a1)\u662f\u4e00\u6837\u7684, \u90fd\u662f\u6240\u9009\u7684\u7279\u5f81\u503c","title":"1.1.4 MultiTaskLasso"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#115","text":"\u5f39\u6027\u7f51\u7edc \u662f\u4e00\u79cd\u4f7f\u7528L1,L2\u8303\u6570\u4f5c\u4e3a\u5148\u9a8c\u6b63\u5219\u9879\u8bad\u7ec3\u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b. \u8fd9\u79cd\u7ec4\u5408\u5141\u8bb8\u5b66\u4e60\u5230\u4e00\u4e2a\u53ea\u6709\u5c11\u91cf\u53c2\u6570\u662f\u975e\u96f6\u7a00\u758f\u7684\u6a21\u578b, \u5c31\u50cf Lasso \u4e00\u6837, \u4f46\u662f\u5b83\u4ecd\u7136\u4fdd\u6301 \u4e00\u4e9b\u50cf Ridge \u7684\u6b63\u5219\u6027\u8d28. \u6211\u4eec\u53ef\u5229\u7528 l1_ratio \u53c2\u6570\u63a7\u5236L1\u548cL2\u7684\u51f8\u7ec4\u5408 \u5f39\u6027\u7f51\u7edc\u5728\u5f88\u591a\u7279\u5f81\u4e92\u76f8\u8054\u7cfb\u7684\u60c5\u51b5\u4e0b\u662f\u975e\u5e38\u6709\u7528\u7684 Lasso\u5f88\u53ef\u80fd\u53ea\u968f\u673a\u8003\u8651\u8fd9\u4e9b\u7279\u5f81\u4e2d\u7684\u4e00\u4e2a, \u800c\u5f39\u6027\u7f51\u7edc\u66f4\u503e\u5411\u4e8e\u9009\u62e9\u4e24\u4e2a loss $$\\min \\frac 1 {2 n_{samples}}||Xw-y||_2^2 +\\alpha||w||_1 + \\frac{\\alpha(1-\\rho)} 2 ||w||_2^2 $$ ElasticNetCV \u7c7b\u53ef\u4ee5\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u6765\u8bbe\u7f6e\u53c2\u6570alpha ( \\alpha \\alpha ) \u548c l1_ratio ( \\rho \\rho ) MultiTaskElasticNet \u662f\u4e00\u4e2a\u5bf9\u591a\u56de\u5f52\u95ee\u9898\u4f30\u7b97\u7a00\u758f\u53c2\u6570\u7684\u5f39\u6027\u7f51\u7edc: Y \u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4, \u5f62\u72b6\u662f (n_samples,n_tasks). \u5176\u9650\u5236\u6761\u4ef6\u662f\u548c\u5176\u4ed6\u56de\u5f52\u95ee\u9898\u4e00\u6837, \u662f\u9009\u62e9\u7684\u7279\u5f81, \u4e5f\u79f0\u4e3a tasks \u91c7\u7528\u4e86\u5750\u6807\u4e0b\u964d\u6cd5\u6c42\u89e3\u53c2\u6570","title":"1.1.5 \u5f39\u6027\u7f51"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#117","text":"\u6700\u5c0f\u89d2\u56de\u5f52 (LARS) \u662f\u5bf9 \u9ad8\u7ef4\u6570\u636e \u7684\u56de\u5f52\u7b97\u6cd5 LARS\u548c\u9010\u6b65\u56de\u5f52\u5f88\u50cf. \u5728\u6bcf\u4e00\u6b65, \u5b83\u5bfb\u627e\u4e0e\u54cd\u5e94\u6700\u6709\u5173\u8054\u7684 \u9884\u6d4b. \u5f53\u6709\u5f88\u591a\u9884\u6d4b\u7531\u76f8\u540c\u7684\u5173\u8054\u65f6, \u5b83\u6ca1\u6709\u7ee7\u7eed\u5229\u7528\u76f8\u540c\u7684\u9884\u6d4b, \u800c\u662f\u5728\u8fd9\u4e9b\u9884\u6d4b\u4e2d\u627e\u51fa\u5e94\u8be5\u7b49\u89d2\u7684\u65b9\u5411 \u5b83\u5bf9\u566a\u58f0\u975e\u5e38\u654f\u611f LassoLars \u662f\u4e00\u4e2a\u4f7f\u7528LARS\u7b97\u6cd5\u7684lasso\u6a21\u578b, \u4e0d\u540c\u4e8e\u57fa\u4e8e\u5750\u6807\u4e0b\u964d\u6cd5\u7684\u5b9e\u73b0, \u5b83\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7cbe\u786e\u89e3, \u4e5f\u5c31\u662f\u4e00\u4e2a \u5173\u4e8e\u81ea\u8eab\u53c2\u6570\u6807\u51c6\u5316\u540e\u7684\u4e00\u4e2a\u5206\u6bb5\u7ebf\u6027\u89e3","title":"1.1.7 \u6700\u5c0f\u89d2\u56de\u5f52"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#1110","text":"\u8d1d\u53f6\u65af\u56de\u5f52\u53ef\u4ee5\u7528\u4e8e\u5728\u9884\u4f30\u9636\u6bb5\u7684\u53c2\u6570\u6b63\u5219\u5316: \u6b63\u5219\u5316\u53c2\u6570\u7684\u9009\u62e9\u4e0d\u662f\u901a\u8fc7\u4eba\u4e3a\u7684\u9009\u62e9, \u800c\u662f\u901a\u8fc7\u624b\u52a8\u8c03\u8282\u6570\u636e\u503c\u6765\u5b9e\u73b0 \u5b83\u80fd\u6839\u636e\u5df2\u6709\u7684\u6570\u636e\u8fdb\u884c\u6539\u53d8. \u5b83\u80fd\u5728\u4f30\u8ba1\u8fc7\u7a0b\u4e2d\u5f15\u5165\u6b63\u5219\u9879. \u5b83\u7684\u63a8\u65ad\u8fc7\u7a0b\u662f\u975e\u5e38\u8017\u65f6\u7684","title":"1.1.10 \u8d1d\u53f6\u65af\u56de\u5f52"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#11101","text":"\u53c2\u6570 w, \\alpha \\alpha \u548c \\lambda \\lambda \u662f\u5728\u6a21\u578b\u62df\u5408\u7684\u65f6\u5019\u4e00\u8d77\u88ab\u4f30\u7b97\u51fa\u6765\u7684. \u5269\u4e0b\u7684\u8d85\u53c2\u6570\u5c31\u662f gamma \u5206\u5e03\u7684\u5148\u9a8c\u4e86. \\alpha \\alpha \u548c \\lambda \\lambda . \u5b83\u4eec\u901a\u5e38\u88ab\u9009\u62e9\u4e3a \u6ca1\u6709\u4fe1\u606f\u91cf . \u6a21\u578b\u53c2\u6570\u7684\u4f30\u8ba1\u4e00\u822c\u5229\u7528 \u6700\u5927\u4f3c\u7136\u5bf9\u6570\u4f30\u8ba1\u6cd5 . \\alpha_1 = \\alpha_2 = \\lambda_1 = \\lambda_2 = 10^{-6} \\alpha_1 = \\alpha_2 = \\lambda_1 = \\lambda_2 = 10^{-6} \u8d1d\u53f6\u65af\u5cad\u56de\u5f52\u5bf9\u75c5\u6001\u95ee\u9898(ill-posed)\u7684\u9c81\u68d2\u6027\u8981\u66f4\u597d","title":"1.1.10.1 \u8d1d\u53f6\u65af\u5cad\u56de\u5f52"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#1111-logistic","text":"logistic \u56de\u5f52\u53c8\u88ab\u79f0\u4f5c logit regression(logit \u56de\u5f52), maximum-entropy classification(MaxEnt, \u6700\u5927\u71b5\u5206\u7c7b), \u6216 log-linear classifier(\u7ebf\u6027\u5bf9\u6570\u5206\u7c7b\u5668) \u8be5\u6a21\u578b\u5229\u7528\u51fd\u6570 logistic function \u5c06\u5355\u6b21\u8bd5\u9a8c(single trial)\u7684\u8f93\u51fa\u8f6c\u5316\u5e76\u63cf\u8ff0\u4e3a\u6982\u7387 scikit-learn \u4e2d logistic \u56de\u5f52\u5728 LogisticRegression \u7c7b\u4e2d\u5b9e\u73b0\u4e86 \u4e8c\u5143(binary)\u3001\u4e00\u5bf9\u4f59(one-vs-rest)\u53ca\u591a\u5143 logistic \u56de\u5f52, \u5e76\u5e26\u6709\u53ef\u9009\u7684 L1 \u548c L2 \u6b63\u5219\u5316 liblinear \u5e94\u7528\u4e86\u5750\u6807\u4e0b\u964d\u7b97\u6cd5(Coordinate Descent, CD CD\u7b97\u6cd5\u8bad\u7ec3\u7684\u6a21\u578b\u4e0d\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u591a\u5206\u7c7b\u6a21\u578b, \u800c\u662f\u57fa\u4e8e one-vs-rest \u601d\u60f3\u5206\u89e3\u4e86\u8fd9\u4e2a\u4f18\u5316\u95ee\u9898, \u4e3a\u6bcf\u4e2a\u7c7b\u522b\u90fd\u8bad\u7ec3\u4e86\u4e00\u4e2a\u4e8c\u5143\u5206\u7c7b\u5668 lbfgs, sag \u548c newton-cg solvers (\u6c42\u89e3\u5668)\u53ea\u652f\u6301 L2 \u7f5a\u9879, \u5bf9\u67d0\u4e9b\u9ad8\u7ef4\u6570\u636e\u6536\u655b\u66f4\u5feb. \u8fd9\u4e9b\u6c42\u89e3\u5668\u7684\u53c2\u6570 multi_class \u8bbe\u4e3a multinomial \u5373\u53ef\u8bad\u7ec3\u4e00\u4e2a\u771f\u6b63\u7684\u591a\u5143 logistic \u56de\u5f52 , \u5176\u9884\u6d4b\u7684\u6982\u7387\u6bd4\u9ed8\u8ba4\u7684 one-vs-rest \u8bbe\u5b9a\u66f4\u4e3a\u51c6\u786e sag \u6c42\u89e3\u5668\u57fa\u4e8e\u5e73\u5747\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5(Stochastic Average Gradient descent). \u5728\u5927\u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\u66f4\u5feb, \u5927\u6570\u636e\u96c6\u6307\u6837\u672c\u91cf\u5927\u4e14\u7279\u5f81\u6570\u591a saga solver \u662f sag \u7684\u4e00\u7c7b\u53d8\u4f53, \u5b83\u652f\u6301\u975e\u5e73\u6ed1(non-smooth)\u7684 L1 \u6b63\u5219\u9009\u9879 penalty=l1 . \u56e0\u6b64\u5bf9\u4e8e\u7a00\u758f\u591a\u5143 logistic \u56de\u5f52 , \u5f80\u5f80\u9009\u7528\u8be5\u6c42\u89e3\u5668 Case Solver L1\u6b63\u5219 liblinear or saga \u591a\u5143\u635f\u5931 lbfgs, sag, saga or newton-cg \u5927\u6570\u636e\u96c6 sag or saga saga \u4e00\u822c\u90fd\u662f\u6700\u4f73\u7684\u9009\u62e9,\u4f46\u51fa\u4e8e\u4e00\u4e9b\u5386\u53f2\u9057\u7559\u539f\u56e0\u9ed8\u8ba4\u7684\u662f liblinear SGDClassifier \u548c SGDRegressor \u5206\u522b\u7528\u4e8e\u62df\u5408\u5206\u7c7b\u95ee\u9898\u548c\u56de\u5f52\u95ee\u9898\u7684\u7ebf\u6027\u6a21\u578b, \u53ef\u4f7f\u7528\u4e0d\u540c\u7684(\u51f8)\u635f\u5931\u51fd\u6570, \u652f\u6301\u4e0d\u540c\u7684\u7f5a\u9879","title":"1.1.11 logistic \u56de\u5f52"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#1113-perceptron","text":"Perceptron \u662f\u9002\u7528\u4e8e large scale learning(\u5927\u89c4\u6a21\u5b66\u4e60)\u7684\u4e00\u79cd\u7b80\u5355\u7b97\u6cd5 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5b66\u4e60\u7387(learning rate). \u4e0d\u9700\u8981\u6b63\u5219\u5316\u5904\u7406. \u4ec5\u4f7f\u7528\u9519\u8bef\u6837\u672c\u66f4\u65b0\u6a21\u578b \u5408\u9875\u635f\u5931(hinge loss)\u7684\u611f\u77e5\u673a\u6bd4SGD\u7565\u5feb, \u6240\u5f97\u6a21\u578b\u66f4\u7a00\u758f","title":"1.1.13 Perceptron\u611f\u77e5\u673a"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#1116","text":"polynomial regression \u662f\u7ebf\u6027\u6a21\u578b\u4e2d\u7684\u540c\u4e00\u7c7b, \u6211\u4eec\u8ba4\u4e3a\u4ee5\u4e0a(\u5373\u6a21\u578b\u662f\u7ebf\u6027 ), \u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u89e3\u51b3 poly = PolynomialFeatures(degree=2) \u548c poly.fit_transform(X) \u7528\u4e8e\u5b9e\u73b0\u975e\u7ebf\u6027\u5230\u7ebf\u6027\u7684\u8f6c\u6362 \u5229\u7528\u591a\u9879\u5f0f\u7279\u5f81\u8bad\u7ec3\u7684\u7ebf\u6027\u6a21\u578b\u80fd\u591f\u51c6\u786e\u5730\u6062\u590d\u8f93\u5165\u591a\u9879\u5f0f\u7cfb\u6570","title":"1.1.16 \u591a\u9879\u5f0f\u56de\u5f52\uff1a\u7528\u57fa\u51fd\u6570\u5c55\u5f00\u7ebf\u6027\u6a21\u578b"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#12","text":"Linear Discriminant Analysis(\u7ebf\u6027\u5224\u522b\u5206\u6790)(discriminant_analysis.LinearDiscriminantAnalysis) \u548c Quadratic Discriminant Analysis (\u4e8c\u6b21\u5224\u522b\u5206\u6790)(discriminant_analysis.QuadraticDiscriminantAnalysis) \u662f\u4e24\u4e2a\u7ecf\u5178\u7684\u5206\u7c7b\u5668. \u6b63\u5982\u4ed6\u4eec\u540d\u5b57\u6240\u63cf\u8ff0\u7684\u90a3\u6837, \u4ed6\u4eec\u5206\u522b\u4ee3\u8868\u4e86 \u7ebf\u6027\u51b3\u7b56\u5e73\u9762\u548c\u4e8c\u6b21\u51b3\u7b56\u5e73\u9762 \u5176\u5929\u751f\u7684\u591a\u5206\u7c7b\u7279\u6027, \u5728\u5b9e\u8df5\u4e2d\u5df2\u7ecf\u8bc1\u660e\u5f88\u6709\u6548, \u5e76\u4e14 \u4e0d\u9700\u8981\u518d\u6b21\u8c03\u53c2 \u7ebf\u6027\u5224\u522b\u5206\u6790\u53ea\u80fd\u5b66\u4e60\u7ebf\u6027\u8fb9\u754c, \u800c\u4e8c\u6b21\u5224\u522b\u5206\u6790\u5219\u53ef\u4ee5\u5b66\u4e60\u4e8c\u6b21\u51fd\u6570\u7684\u8fb9\u754c, \u56e0\u6b64\u5b83\u76f8\u5bf9\u800c\u8a00\u66f4\u52a0\u7075\u6d3b \u7ebf\u6027\u5224\u522b\u5206\u6790\u964d\u7ef4 \u662f\u603b\u4f53\u800c\u8a00\u5341\u5206\u5f3a\u5927\u7684\u964d\u7ef4\u65b9\u5f0f, \u540c\u6837\u4e5f \u4ec5\u4ec5\u5728\u591a\u5206\u7c7b\u73af\u5883\u4e0b\u624d\u4f1a\u8d77\u4f5c\u7528 discriminant_analysis.LinearDiscriminantAnalysis.transform LDA \u5206\u7c7b\u5668\u4e2d\u5b58\u5728\u4e00\u4e2a\u5229\u7528\u7ebf\u6027\u6295\u5f71\u5230 K-1 \u4e2a\u7ef4\u5ea6\u7a7a\u95f4\u7684\u964d\u7ef4\u5de5\u5177 \u6536\u7f29\u662f\u4e00\u4e2a\u5728\u8bad\u7ec3\u6837\u672c\u6570\u91cf\u76f8\u6bd4\u7279\u5f81\u800c\u8a00\u5f88\u5c0f\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u63d0\u5347\u9884\u6d4b(\u51c6\u786e\u6027)\u7684\u534f\u65b9\u5dee\u77e9\u9635 LDA \u6536\u7f29\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e discriminant_analysis.LinearDiscriminantAnalysis \u7c7b\u7684 shrinkage \u53c2\u6570\u4e3a \u2018auto\u2019 \u4ee5\u5f97\u5230\u5e94\u7528.","title":"1.2 \u7ebf\u6027\u548c\u4e8c\u6b21\u5224\u522b\u5206\u6790"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#13","text":"Kernel ridge regression (KRR) (\u5185\u6838\u5cad\u56de\u5f52\u7531 \u4f7f\u7528\u5185\u6838\u65b9\u6cd5\u7684 (\u5cad\u56de\u5f52)(\u4f7f\u7528 l2 \u6b63\u5219\u5316\u7684\u6700\u5c0f\u4e8c\u4e58\u6cd5)\u6240\u7ec4\u6210. \u56e0\u6b64, \u5b83\u6240\u5b66\u4e60\u5230\u7684\u5728\u7a7a\u95f4\u4e2d\u4e0d\u540c\u7684\u7ebf\u6027\u51fd\u6570\u662f\u7531\u4e0d\u540c\u7684\u5185\u6838\u548c\u6570\u636e\u6240\u5bfc\u81f4\u7684. \u5bf9\u4e8e\u975e\u7ebf\u6027\u7684\u5185\u6838, \u5b83\u4e0e\u539f\u59cb\u7a7a\u95f4\u4e2d\u7684\u975e\u7ebf\u6027\u51fd\u6570\u76f8\u5bf9\u5e94 \u7531 KernelRidge \u5b66\u4e60\u7684\u6a21\u578b\u7684\u5f62\u5f0f\u4e0e\u652f\u6301\u5411\u91cf\u56de\u5f52( SVR ) \u662f\u4e00\u6837\u7684. \u4f46\u662f\u4ed6\u4eec\u4f7f\u7528\u4e0d\u540c\u7684\u635f\u5931\u51fd\u6570\uff1a\u5185\u6838\u5cad\u56de\u5f52(KRR)\u4f7f\u7528 squared error loss (\u5e73\u65b9\u8bef\u5dee\u635f\u5931\u51fd\u6570)\u800c support vector regression (\u652f\u6301\u5411\u91cf\u56de\u5f52)(SVR)\u4f7f\u7528 \\epsilon \\epsilon -insensitive loss , \u4e24\u8005\u90fd\u4f7f\u7528 l2 regularization (l2 \u6b63\u5219\u5316). \u4e0e SVR \u76f8\u53cd, \u62df\u5408 KernelRidge \u53ef\u4ee5\u4ee5 closed-form (\u5c01\u95ed\u5f62\u5f0f)\u5b8c\u6210, \u5bf9\u4e8e\u4e2d\u578b\u6570\u636e\u96c6\u901a\u5e38\u66f4\u5feb. \u53e6\u4e00\u65b9\u9762, \u5b66\u4e60\u7684\u6a21\u578b\u662f\u975e\u7a00\u758f\u7684, \u56e0\u6b64\u6bd4 SVR \u6162, \u5728\u9884\u6d4b\u65f6\u95f4, SVR \u5b66\u4e60\u4e86 \\epsilon>0 \\epsilon>0 \u7684\u7a00\u758f\u6a21\u578b. \u5b83\u4eec\u7684 learned functions (\u5b66\u4e60\u51fd\u6570)\u975e\u5e38\u76f8\u4f3c;\u4f46\u662f, \u62df\u5408 KernelRidge \u5927\u7ea6\u6bd4\u62df\u5408 SVR \u5feb\u4e03\u500d(\u90fd\u4f7f\u7528 grid-search ( \u7f51\u683c\u641c\u7d22 ) ). \u7136\u800c, \u7531\u4e8e SVR \u53ea\u5b66\u4e60\u4e86\u4e00\u4e2a\u7a00\u758f\u6a21\u578b, \u6240\u4ee5 SVR \u9884\u6d4b 10 \u4e07\u4e2a\u76ee\u6807\u503c\u6bd4\u4f7f\u7528 KernelRidge \u5feb\u4e09\u500d\u4ee5\u4e0a. SVR \u53ea\u4f7f\u7528\u4e86\u767e\u5206\u4e4b\u4e09\u5341\u7684\u6570\u636e\u70b9\u505a\u4e3a\u652f\u6491\u5411\u91cf \u5bf9\u4e8e\u4e2d\u578b\u8bad\u7ec3\u96c6(\u5c0f\u4e8e 1000 \u4e2a\u6837\u672c), \u62df\u5408 KernelRidge \u6bd4 SVR \u5feb; \u7136\u800c, \u5bf9\u4e8e\u66f4\u5927\u7684\u8bad\u7ec3\u96c6 SVR \u901a\u5e38\u66f4\u597d. \u5173\u4e8e\u9884\u6d4b\u65f6\u95f4, \u7531\u4e8e\u5b66\u4e60\u7684\u7a00\u758f\u89e3, SVR \u5bf9\u4e8e\u6240\u6709\u4e0d\u540c\u5927\u5c0f\u7684\u8bad\u7ec3\u96c6\u90fd\u6bd4 KernelRidge \u5feb \u7a00\u758f\u89e3 \u662f\u8bf4\u53ea\u4f7f\u7528\u4e00\u90e8\u5206\u7279\u5f81\u4f5c\u4e3a\u5173\u952e\u8bad\u7ec3\u7279\u5f81","title":"1.3 \u6838\u5cad\u56de\u5f52"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#14-svm","text":"\u652f\u6301\u5411\u91cf\u673a\u53ef\u4ee5\u7528\u4e8e \u5206\u7c7b, \u56de\u5f52, \u5f02\u5e38\u68c0\u6d4b \u4f18\u52bf: \u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u975e\u5e38\u9ad8\u6548 \u5373\u4f7f\u5728 \u6570\u636e\u7ef4\u5ea6\u6bd4\u6837\u672c\u6570\u91cf\u5927 \u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u6709\u6548 \u5728\u51b3\u7b56\u51fd\u6570(\u79f0\u4e3a\u652f\u6301\u5411\u91cf)\u4e2d\u4f7f\u7528\u8bad\u7ec3\u96c6\u7684\u5b50\u96c6 \u901a\u7528\u6027: \u4e0d\u540c\u7684\u6838\u51fd\u6570\u4e0e\u7279\u5b9a\u7684\u51b3\u7b56\u51fd\u6570\u4e00\u4e00\u5bf9\u5e94 \u52a3\u52bf: \u5982\u679c\u7279\u5f81\u6570\u91cf\u6bd4\u6837\u672c\u6570\u91cf\u5927\u5f97\u591a, \u5728\u9009\u62e9\u6838\u51fd\u6570\u65f6\u8981\u907f\u514d\u8fc7\u62df\u5408 \u5f53\u7c7b\u522b\u4e0d\u5747\u8861\u65f6, \u4f7f\u7528\u5e26\u6709 \u7c7b\u522b\u6743\u91cd\u7684 wclf = svm.SVC(kernel='linear', class_weight={1: 10}) \u652f\u6301\u5411\u91cf\u5206\u7c7b\u7684\u65b9\u6cd5\u53ef\u4ee5\u88ab\u6269\u5c55\u7528\u4f5c\u89e3\u51b3\u56de\u5f52\u95ee\u9898. \u8fd9\u4e2a\u65b9\u6cd5\u88ab\u79f0\u4f5c\u652f\u6301\u5411\u91cf\u56de\u5f52. \u652f\u6301\u5411\u91cf\u5206\u7c7b\u751f\u6210\u7684\u6a21\u578b\u53ea\u4f9d\u8d56\u4e8e\u8bad\u7ec3\u96c6\u7684\u5b50\u96c6,\u56e0\u4e3a\u6784\u5efa\u6a21\u578b\u7684 cost function \u4e0d\u5728\u4e4e\u8fb9 \u7f18\u4e4b\u5916\u7684\u8bad\u7ec3\u70b9. \u7c7b\u4f3c\u7684, \u652f\u6301\u5411\u91cf\u56de\u5f52\u751f\u6210\u7684\u6a21\u578b\u53ea\u4f9d\u8d56\u4e8e\u8bad\u7ec3\u96c6\u7684\u5b50\u96c6, \u56e0\u4e3a\u6784\u5efa\u6a21\u578b\u7684 cost function \u5ffd\u7565\u4efb\u4f55\u63a5\u8fd1\u4e8e\u6a21\u578b\u9884\u6d4b\u7684\u8bad\u7ec3\u6570\u636e. SVM\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u4e8c\u6b21\u89c4\u5212 \u95ee\u9898(Quadratic Programming, QP), \u662f\u5c06\u652f\u6301\u5411\u91cf\u548c\u8bad\u7ec3\u6570\u636e\u7684\u5176\u4f59\u90e8\u5206\u5206\u79bb\u5f00\u6765, \u652f\u6301\u5411\u91cf\u673a\u662f\u4e2a\u5f3a\u5927\u7684\u5de5\u5177, \u4e0d\u8fc7\u5b83\u7684\u8ba1\u7b97\u548c\u5b58\u50a8\u7a7a\u95f4\u8981\u6c42\u4e5f\u4f1a\u968f\u7740\u8981\u8bad\u7ec3\u5411\u91cf\u7684\u6570\u76ee\u589e \u52a0\u800c\u5feb\u901f\u589e\u52a0 \u60e9\u7f5a\u7cfb\u6570C\u7684\u8bbe\u7f6e:\u5728\u5408\u7406\u7684\u60c5\u51b5\u4e0b, C \u7684\u9ed8\u8ba4\u9009\u62e9\u4e3a 1. \u5982\u679c\u60a8\u6709\u5f88\u591a\u6df7\u6742\u7684\u89c2\u5bdf\u6570\u636e, \u60a8\u5e94\u8be5\u8981\u53bb\u8c03\u5c0f\u5b83. C \u8d8a\u5c0f, \u5c31\u80fd\u66f4\u597d\u5730\u53bb\u6b63\u89c4\u5316\u4f30\u8ba1 \u5e38\u7528\u6838\u51fd\u6570 \u7ebf\u6027 $$ k(x_i, x_j) = x_i^T x_j $$ \u591a\u9879\u5f0f $$ k(x_i, x_j) = (x_i^T x_j)^d $$ \u9ad8\u65af\u6838rbf $$ k(x_i, x_j) = exp(-\\frac{||x_i - x_j||^2}{2 \\sigma^2}) $$ \u62c9\u666e\u62c9\u65af $$ k(x_i, x_j) = exp(-\\frac{||x_i - x_j||}{\\sigma}) $$ sigmoid $$ k(x_i, x_j) = \\tanh(\\beta x_i^T x_j + \\theta) $$ \u6838\u51fd\u6570\u901a\u8fc7\u521b\u5efa\u5b9e\u4f8b\u65f6\u8fdb\u884c\u6307\u5b9a svm.SVC(kernel='linear') \u81ea\u5b9a\u4e49\u6838\u51fd\u6570 def my_kernel(x, y): return np.dot(x, y.T) \u5f53\u7528 \u5f84\u5411\u57fa(RBF)\u5185\u6838\u53bb\u8bad\u7ec3 SVM, \u6709\u4e24\u4e2a\u53c2\u6570\u5fc5\u987b\u8981\u53bb\u8003\u8651: C, \\gamma \\gamma . \u8f83\u5c0f\u7684 C \u4f1a\u4f7f\u51b3\u7b56\u8868\u9762\u66f4\u5e73\u6ed1, \u540c\u65f6\u8f83\u9ad8\u7684 C \u65e8\u5728\u6b63\u786e\u5730\u5206\u7c7b\u6240\u6709\u8bad\u7ec3\u6837\u672c. Gamma \u5b9a\u4e49\u4e86\u5355\u4e00 \u8bad\u7ec3\u6837\u672c\u80fd\u8d77\u5230\u591a\u5927\u7684\u5f71\u54cd. \u8f83\u5927\u7684 gamma \u4f1a\u66f4\u8ba9\u5176\u4ed6\u6837\u672c\u53d7\u5230\u5f71\u54cd","title":"1.4 SVM"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#15","text":"SGD \u5bf9\u7279\u5f81\u7f29\u653e \u654f\u611f \u5fc5\u987b\u5c06 \u76f8\u540c \u7684\u7f29\u653e\u5e94\u7528\u4e8e\u5bf9\u5e94\u7684\u6d4b\u8bd5\u5411\u91cf\u4e2d, \u4ee5\u83b7\u5f97\u6709\u610f\u4e49\u7684\u7ed3\u679c \u5728\u62df\u5408\u6a21\u578b\u524d\u8981\u786e\u4fdd\u8bad\u7ec3\u6570\u636e\u7ecf\u8fc7\u4e86\u6253\u4e71 shuffle=True from sklearn.linear_model import SGDClassifier X = [[0, 0], [1, 1]] y = [0, 1] clf = SGDClassifier(loss='hinge', penalty='l2', max_iter=500, tol=1e-3) clf.fit(X, y) # prediction res = clf.predict([[2, 2]]) print(res) SGDClassifier \u901a\u8fc7\u5728\u5c06\u591a\u4e2a binary classifiers\u7ec4\u5408\u5728 one versus all(OVA) \u65b9\u6848\u4e2d\u6765\u652f\u6301\u591a\u7c7b\u5206\u7c7b SGDRegressor \u7c7b\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u968f\u5373\u68af\u5ea6\u4e0b\u964d\u5b66\u4e60\u7a0b\u5e8f, \u5b83\u652f\u6301\u4e0d\u540c\u7684\u635f\u5931\u51fd\u6570\u548c\u60e9\u7f5a\u6765\u62df\u5408\u7ebf\u6027\u56de\u5f52\u6a21\u578b","title":"1.5 \u968f\u673a\u68af\u5ea6\u4e0b\u964d"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#16","text":"\u65e0\u76d1\u7763\u7684\u6700\u8fd1\u90bb\u662f\u8bb8\u591a\u5176\u5b83\u5b66\u4e60\u65b9\u6cd5\u7684\u57fa\u7840, \u5c24\u5176\u662f manifold learning \u548c spectral clustering \u53d7\u76d1\u7763\u7684 neighbors-based\u5b66\u4e60\u5206\u4e3a\u4e24\u79cd classification \u9488\u5bf9\u7684\u662f\u5177\u6709\u79bb\u6563\u6807\u7b7e\u7684\u6570\u636e, regression \u9488\u5bf9\u7684\u662f\u5177\u6709\u8fde\u7eed\u6807\u7b7e\u7684\u6570\u636e \u975e\u53c2\u6570\u65b9\u6cd5 \u5e94\u7528\u4e8e\u51b3\u7b56\u8fb9\u754c\u975e\u5e38\u4e0d\u89c4\u5219\u7684\u60c5\u666f\u4e0b","title":"1.6 \u6700\u8fd1\u90bb"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#_2","text":"\u5206\u7c7b\u662f\u7531\u6bcf\u4e2a\u70b9\u7684\u6700\u8fd1\u90bb\u7684\u7b80\u5355\u591a\u6570\u6295\u7968\u4e2d\u8ba1\u7b97\u5f97\u5230\u7684 \u4e00\u4e2a\u67e5\u8be2\u70b9\u7684\u6570\u636e\u7c7b\u578b\u662f\u7531\u5b83\u6700\u8fd1\u90bb\u70b9\u4e2d\u6700\u5177\u4ee3\u8868\u6027\u7684\u6570\u636e\u7c7b\u578b\u6765\u51b3\u5b9a\u7684 k \u503c\u7684\u6700\u4f73\u9009\u62e9\u662f\u9ad8\u5ea6\u6570\u636e\u4f9d\u8d56\u7684 \u901a\u5e38\u8f83\u5927\u7684 k \u662f\u4f1a\u6291\u5236\u566a\u58f0\u7684\u5f71\u54cd, \u4f46\u662f\u4f7f\u5f97\u5206\u7c7b\u754c\u9650\u4e0d\u660e\u663e \u5982\u679c\u6570\u636e\u662f\u4e0d\u5747\u5300\u91c7\u6837\u7684, \u90a3\u4e48 RadiusNeighborsClassifier \u4e2d\u7684\u57fa\u4e8e\u534a\u5f84\u7684\u8fd1\u90bb\u5206\u7c7b\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9 \u6307\u5b9a\u4e00\u4e2a\u56fa\u5b9a\u534a\u5f84 r, \u4f7f\u5f97\u7a00\u758f\u90bb\u5c45\u4e2d\u7684\u70b9\u4f7f\u7528\u8f83\u5c11\u7684\u6700\u8fd1\u90bb\u6765\u5206\u7c7b","title":"\u6700\u8fd1\u90bb\u5206\u7c7b"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#_3","text":"\u6700\u8fd1\u90bb\u56de\u5f52\u662f\u7528\u5728\u6570\u636e\u6807\u7b7e\u4e3a\u8fde\u7eed\u53d8\u91cf, \u800c\u4e0d\u662f\u79bb\u6563\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b \u5206\u914d\u7ed9\u67e5\u8be2\u70b9\u7684\u6807\u7b7e\u662f\u7531\u5b83\u7684 \u6700\u8fd1\u90bb\u6807\u7b7e\u7684\u5747\u503c \u8ba1\u7b97\u800c\u6765\u7684 \u5728\u67d0\u4e9b\u73af\u5883\u4e0b, \u589e\u52a0\u6743\u91cd\u53ef\u80fd\u662f\u6709\u5229\u7684, \u4f7f\u5f97\u9644\u8fd1\u70b9\u5bf9\u4e8e\u56de\u5f52\u6240\u4f5c\u51fa\u7684\u8d21\u732e\u591a\u4e8e\u8fdc\u5904\u70b9. \u8fd9\u53ef\u4ee5\u901a\u8fc7 weights \u5173\u952e\u5b57\u6765\u5b9e\u73b0 \u9ad8\u65af\u8fc7\u7a0b\u662f\u4e00\u79cd\u5e38\u7528\u7684\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5, \u65e8\u5728\u89e3\u51b3 \u56de\u5f52\u95ee\u9898 \u548c \u6982\u7387\u5206\u7c7b\u95ee\u9898","title":"\u6700\u8fd1\u90bb\u56de\u5f52"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#18","text":"\u504f\u6700\u5c0f\u4e8c\u4e58\u6cd5(PLS)\u548c\u5178\u578b\u76f8\u5173\u5206\u6790(CCA) \u5177\u6709\u53d1\u73b0\u4e24\u4e2a\u591a\u5143\u6570\u636e\u96c6\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb \u7684\u7528\u9014: fit method(\u62df\u5408\u65b9\u6cd5)\u7684\u53c2\u6570 X \u548c Y \u90fd\u662f 2 \u7ef4\u6570\u7ec4","title":"1.8 \u4ea4\u53c9\u5206\u89e3"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#19","text":"\u6734\u7d20\u8d1d\u53f6\u65af\u65b9\u6cd5\u662f\u57fa\u4e8e\u8d1d\u53f6\u65af\u5b9a\u7406\u7684\u4e00\u7ec4\u6709\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5 \u7b80\u5355\u5730\u5047\u8bbe \u6bcf\u5bf9\u7279\u5f81\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb , \u6734\u7d20\u7684\u7531\u6765 \u9ad8\u65af\u6734\u7d20\u8d1d\u53f6\u65af \u7684\u53c2\u6570\u4f7f\u7528 \u6700\u5927\u4f3c\u7136\u4f30\u8ba1 \u591a\u9879\u5206\u5e03\u6734\u7d20\u8d1d\u53f6\u65af \u4f2f\u52aa\u5229\u6734\u7d20\u8d1d\u53f6\u65af \u5806\u5916\u6734\u7d20\u8d1d\u53f6\u65af\u6a21\u578b\u62df\u5408","title":"1.9 \u6734\u7d20\u8d1d\u53f6\u65af"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#110","text":"\u65e0\u53c2\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u56de\u5f52\u4e0e\u5206\u7c7b \u76ee\u7684\u662f\u521b\u5efa\u4e00\u79cd\u6a21\u578b\u4ece\u6570\u636e\u7279\u5f81\u4e2d\u5b66\u4e60\u7b80\u5355\u7684\u51b3\u7b56\u89c4\u5219\u6765\u9884\u6d4b\u4e00\u4e2a\u76ee\u6807\u53d8\u91cf\u7684\u503c \u51b3\u7b56\u6811\u6a21\u578b\u5bb9\u6613\u4ea7\u751f\u4e00\u4e2a\u8fc7\u4e8e\u590d\u6742\u7684\u6a21\u578b, \u8fd9\u6837\u7684\u6a21\u578b\u5bf9\u6570\u636e\u7684\u6cdb\u5316\u6027\u80fd\u4f1a\u5f88\u5dee \u51b3\u7b56\u6811\u53ef\u80fd\u662f\u4e0d\u7a33\u5b9a\u7684, \u56e0\u4e3a\u6570\u636e\u4e2d\u7684\u5fae\u5c0f\u53d8\u5316\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5b8c\u5168\u4e0d\u540c\u7684\u6811\u751f\u6210","title":"1.10 \u51b3\u7b56\u6811"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#111_1","text":"\u96c6\u6210\u65b9\u6cd5 \u7684\u76ee\u6807\u662f\u628a\u4f7f\u7528\u7ed9\u5b9a\u5b66\u4e60\u7b97\u6cd5\u6784\u5efa\u7684\u591a\u4e2a\u57fa\u4f30\u8ba1\u5668\u7684\u9884\u6d4b\u7ed3\u679c\u7ed3\u5408\u8d77\u6765, \u4ece\u800c\u83b7\u5f97\u6bd4\u5355\u4e2a\u4f30\u8ba1\u5668\u66f4\u597d\u7684\u6cdb\u5316\u80fd\u529b/\u9c81\u68d2\u6027 \u5e73\u5747\u65b9\u6cd5, \u8be5\u65b9\u6cd5\u7684\u539f\u7406\u662f\u6784\u5efa\u591a\u4e2a\u72ec\u7acb\u7684\u4f30\u8ba1\u5668, \u7136\u540e\u53d6\u5b83\u4eec\u7684\u9884\u6d4b\u7ed3\u679c\u7684\u5e73\u5747. \u4e00\u822c\u6765\u8bf4\u7ec4\u5408\u4e4b\u540e\u7684\u4f30\u8ba1\u5668\u662f\u4f1a\u6bd4\u5355\u4e2a\u4f30\u8ba1\u5668\u8981\u597d\u7684, \u56e0\u4e3a\u5b83\u7684 \u65b9\u5dee \u51cf\u5c0f\u4e86. Bagging \u65b9\u6cd5, \u968f\u673a\u68ee\u6797, \u2026 \u5728 boosting \u65b9\u6cd5 \u4e2d, \u57fa\u4f30\u8ba1\u5668\u662f\u4f9d\u6b21\u6784\u5efa\u7684, \u5e76\u4e14\u6bcf\u4e00\u4e2a\u57fa\u4f30\u8ba1\u5668\u90fd\u5c1d\u8bd5\u53bb\u51cf\u5c11\u7ec4\u5408\u4f30\u8ba1\u5668\u7684 \u504f\u5dee . \u8fd9\u79cd\u65b9\u6cd5\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u7ed3\u5408\u591a\u4e2a\u5f31\u6a21\u578b, \u4f7f\u96c6\u6210\u7684\u6a21\u578b\u66f4\u52a0\u5f3a\u5927. AdaBoost, \u68af\u5ea6\u63d0\u5347\u6811, \u2026 bagging \u65b9\u6cd5\u4f1a\u5728\u539f\u59cb\u8bad\u7ec3\u96c6\u7684\u968f\u673a\u5b50\u96c6\u4e0a\u6784\u5efa\u4e00\u7c7b\u9ed1\u76d2\u4f30\u8ba1\u5668\u7684\u591a\u4e2a\u5b9e\u4f8b,\u7136\u540e\u628a\u8fd9\u591a\u4e2a\u4f30\u8ba1\u5668\u7684\u9884\u6d4b\u7ed3\u679c\u7ed3\u5408\u8d77\u6765\u5f62\u6210\u6700\u7ec8\u7684\u9884\u6d4b\u7ed3\u679c. \u8be5\u65b9\u6cd5\u901a\u8fc7\u5728\u6784\u5efa\u6a21\u578b\u7684\u8fc7\u7a0b\u4e2d\u5f15\u5165\u968f\u673a\u6027,\u6765\u51cf\u5c11\u57fa\u4f30\u8ba1\u5668\u7684\u65b9\u5dee(\u4f8b\u5982,\u51b3\u7b56\u6811). \u5728\u591a\u6570\u60c5\u51b5\u4e0b,bagging \u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u5bf9\u5355\u4e00\u6a21\u578b\u8fdb\u884c\u6539\u8fdb,\u800c\u65e0\u9700\u4fee\u6539\u80cc\u540e\u7684\u7b97\u6cd5. \u56e0\u4e3a bagging \u65b9\u6cd5\u53ef\u4ee5\u51cf\u5c0f\u8fc7\u62df\u5408,\u6240\u4ee5\u901a\u5e38\u6700\u9002\u5408\u5728\u5f3a\u5206\u7c7b\u5668\u548c\u590d\u6742\u6a21\u578b\u4e0a\u4f7f\u7528,\u76f8\u6bd4\u4e4b\u4e0b boosting \u65b9\u6cd5\u5219\u5728\u5f31\u6a21\u578b\u4e0a\u8868\u73b0\u66f4\u597d bagging \u65b9\u6cd5\u6709\u5f88\u591a\u79cd,\u533a\u522b\u5927\u591a\u6570\u5728\u4e8e\u62bd\u53d6\u8bad\u7ec3\u5b50\u96c6\u7684\u65b9\u6cd5\uff1a \u62bd\u53d6\u7684\u6570\u636e\u96c6\u662f\u5bf9\u4e8e\u6837\u4f8b\u62bd\u53d6\u7684\u5b50\u96c6,\u6211\u4eec\u53eb\u505aPasting \u6837\u4f8b\u62bd\u53d6\u662f\u6709\u653e\u56de\u7684,\u6211\u4eec\u79f0\u4e3a Bagging \u62bd\u53d6\u7684\u6570\u636e\u96c6\u7684\u968f\u673a\u5b50\u96c6\u662f\u5bf9\u4e8e\u7279\u5f81\u62bd\u53d6\u7684\u968f\u673a\u5b50\u96c6,\u6211\u4eec\u53eb\u505aRandom Subspaces \u4f30\u8ba1\u5668\u6784\u5efa\u5728\u5bf9\u4e8e\u6837\u672c\u548c\u7279\u5f81\u62bd\u53d6\u7684\u5b50\u96c6\u4e4b\u4e0a\u65f6,\u6211\u4eec\u53eb\u505aRandom Patches \u96c6\u6210\u6a21\u578b\u4e2d\u7684\u6bcf\u68f5\u6811\u6784\u5efa\u65f6\u7684\u6837\u672c\u90fd\u662f\u7531\u8bad\u7ec3\u96c6\u7ecf\u8fc7\u6709\u653e\u56de\u62bd\u6837\u5f97\u6765\u7684. \u53e6\u5916,\u5728\u6784\u5efa\u6811\u7684\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u7ed3\u70b9\u5206\u5272\u65f6,\u9009\u62e9\u7684\u5206\u5272\u70b9\u4e0d\u518d\u662f\u6240\u6709\u7279\u5f81\u4e2d\u6700\u4f73\u5206\u5272\u70b9,\u800c\u662f\u7279\u5f81\u7684\u4e00\u4e2a\u968f\u673a\u5b50\u96c6\u4e2d\u7684\u6700\u4f73\u5206\u5272\u70b9. \u7531\u4e8e\u8fd9\u79cd\u968f\u673a\u6027,\u68ee\u6797\u7684\u504f\u5dee\u901a\u5e38\u4f1a\u6709\u7565\u5fae\u7684\u589e\u5927(\u76f8\u5bf9\u4e8e\u5355\u4e2a\u975e\u968f\u673a\u6811\u7684\u504f\u5dee),\u4f46\u662f\u7531\u4e8e\u53d6\u4e86\u5e73\u5747,\u5176\u65b9\u5dee\u4e5f\u4f1a\u51cf\u5c0f,\u901a\u5e38\u80fd\u591f\u8865\u507f\u504f\u5dee\u7684\u589e\u52a0,\u4ece\u800c\u4ea7\u751f\u4e00\u4e2a\u603b\u4f53\u4e0a\u66f4\u597d\u7684\u6a21\u578b scikit-learn \u7684\u5b9e\u73b0\u662f\u53d6\u6bcf\u4e2a\u5206\u7c7b\u5668\u9884\u6d4b\u6982\u7387\u7684\u5e73\u5747,\u800c\u4e0d\u662f\u8ba9\u6bcf\u4e2a\u5206\u7c7b\u5668\u5bf9\u7c7b\u522b\u8fdb\u884c\u6295\u7968 \u5728\u6781\u9650\u968f\u673a\u6811\u4e2dExtraTreesClassifier \u548c ExtraTreesRegressor, \u8ba1\u7b97\u5206\u5272\u70b9\u65b9\u6cd5\u4e2d\u7684\u968f\u673a\u6027\u8fdb\u4e00\u6b65\u589e\u5f3a. \u5728\u968f\u673a\u68ee\u6797\u4e2d,\u4f7f\u7528\u7684\u7279\u5f81\u662f \u5019\u9009\u7279\u5f81\u7684\u968f\u673a\u5b50\u96c6 ; \u4e0d\u540c\u4e8e\u5bfb\u627e\u6700\u5177\u6709\u533a\u5206\u5ea6\u7684\u9608\u503c, \u8fd9\u91cc\u7684\u9608\u503c\u662f\u9488\u5bf9\u6bcf\u4e2a\u5019\u9009\u7279\u5f81\u968f\u673a\u751f\u6210\u7684,\u5e76\u4e14\u9009\u62e9\u8fd9\u4e9b\u968f\u673a\u751f\u6210\u7684\u9608\u503c\u4e2d\u7684\u6700\u4f73\u8005\u4f5c\u4e3a\u5206\u5272\u89c4\u5219. \u8fd9\u79cd\u505a\u6cd5\u901a\u5e38\u80fd\u591f\u51cf\u5c11\u4e00\u70b9\u6a21\u578b\u7684\u65b9\u5dee,\u4ee3\u4ef7\u5219\u662f\u7565\u5fae\u5730\u589e\u5927\u504f\u5dee \u56de\u5f52\u95ee\u9898\u4e2d\u4f7f\u7528 max_features = n_features, \u5206\u7c7b\u95ee\u9898\u4f7f\u7528 max_features = sqrt(n_features (\u5176\u4e2d n_features \u662f\u7279\u5f81\u7684\u4e2a\u6570)\u662f\u6bd4\u8f83\u597d\u7684\u9ed8\u8ba4\u503c. max_depth = None \u548c min_samples_split = 2 \u7ed3\u5408\u901a\u5e38\u4f1a\u6709\u4e0d\u9519\u7684\u6548\u679c(\u5373\u751f\u6210\u5b8c\u5168\u7684\u6811). \u8bf7\u8bb0\u4f4f,\u8fd9\u4e9b(\u9ed8\u8ba4)\u503c\u901a\u5e38\u4e0d\u662f\u6700\u4f73\u7684,\u540c\u65f6\u8fd8\u53ef\u80fd\u6d88\u8017\u5927\u91cf\u7684\u5185\u5b58,\u6700\u4f73\u53c2\u6570\u503c\u5e94\u7531\u4ea4\u53c9\u9a8c\u8bc1\u83b7\u5f97 \u5982\u679c\u8bbe\u7f6e n_jobs = k, \u5219\u8ba1\u7b97\u88ab\u5212\u5206\u4e3a k \u4e2a\u4f5c\u4e1a, \u5e76\u8fd0\u884c\u5728\u673a\u5668\u7684 k \u4e2a\u6838\u4e0a. \u5982\u679c\u8bbe\u7f6e n_jobs = -1, \u5219\u4f7f\u7528\u673a\u5668\u7684\u6240\u6709\u6838 \u7279\u5f81\u5bf9\u76ee\u6807\u53d8\u91cf\u9884\u6d4b\u7684\u76f8\u5bf9\u91cd\u8981\u6027\u53ef\u4ee5\u901a\u8fc7(\u6811\u4e2d\u7684\u51b3\u7b56\u8282\u70b9\u7684)\u7279\u5f81\u4f7f\u7528\u7684\u76f8\u5bf9\u987a\u5e8f(\u5373\u6df1\u5ea6)\u6765\u8fdb\u884c\u8bc4\u4f30. \u51b3\u7b56\u6811\u9876\u90e8\u4f7f\u7528\u7684\u7279\u5f81\u5bf9\u66f4\u5927\u4e00\u90e8\u5206\u8f93\u5165\u6837\u672c\u7684\u6700\u7ec8\u9884\u6d4b\u51b3\u7b56\u505a\u51fa\u8d21\u732e\uff1b\u56e0\u6b64, \u53ef\u4ee5\u4f7f\u7528\u63a5\u53d7\u6bcf\u4e2a\u7279\u5f81\u5bf9\u6700\u7ec8\u9884\u6d4b\u7684\u8d21\u732e\u7684\u6837\u672c\u6bd4\u4f8b\u6765\u8bc4\u4f30\u8be5 \u7279\u5f81\u7684\u76f8\u5bf9\u91cd\u8981\u6027 \u9996\u5148\u5e94\u5f53\u8bc4\u4f30\u5404\u4e2a\u7279\u5f81\u7684\u91cd\u8981\u6027 http://sklearn.apachecn.org/cn/0.19.0/auto_examples/ensemble/plot_forest_importances.html#sphx-glr-auto-examples-ensemble-plot-forest-importances-py","title":"1.11 \u96c6\u6210\u65b9\u6cd5"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#adaboost","text":"AdaBoost \u7684\u6838\u5fc3\u601d\u60f3\u662f\u7528\u53cd\u590d\u4fee\u6539\u7684\u6570\u636e(\u4e3b\u8981\u662f\u4fee\u6b63\u6570\u636e\u7684\u6743\u91cd)\u6765\u5b66\u4e60\u4e00\u7cfb\u5217\u7684\u5f31\u5b66\u4e60\u5668(\u4e00\u4e2a\u5f31\u5b66\u4e60\u5668\u6a21\u578b\u4ec5\u4ec5\u6bd4\u968f\u673a\u731c\u6d4b\u597d\u4e00\u70b9, \u6bd4\u5982\u4e00\u4e2a\u7b80\u5355\u7684\u51b3\u7b56\u6811),\u7531\u8fd9\u4e9b\u5f31\u5b66\u4e60\u5668\u7684\u9884\u6d4b\u7ed3\u679c\u901a\u8fc7\u52a0\u6743\u6295\u7968(\u6216\u52a0\u6743\u6c42\u548c)\u7684\u65b9\u5f0f\u7ec4\u5408, \u5f97\u5230\u6211\u4eec\u6700\u7ec8\u7684\u9884\u6d4b\u7ed3\u679c. \u5728\u6bcf\u4e00\u6b21\u6240\u8c13\u7684\u63d0\u5347(boosting)\u8fed\u4ee3\u4e2d, \u6570\u636e\u7684\u4fee\u6539\u7531\u5e94\u7528\u4e8e\u6bcf\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u7684(\u65b0) \u7684\u6743\u91cd w_1, w_2, \u2026, w_N \u7ec4\u6210(\u5373\u4fee\u6539\u6bcf\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u5e94\u7528\u4e8e\u65b0\u4e00\u8f6e\u5b66\u4e60\u5668\u7684\u6743\u91cd). \u521d\u59cb\u5316\u65f6,\u5c06\u6240\u6709\u5f31\u5b66\u4e60\u5668\u7684\u6743\u91cd\u90fd\u8bbe\u7f6e\u4e3a w_i = 1/N ,\u56e0\u6b64\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4ec5\u4ec5\u662f\u901a\u8fc7\u539f\u59cb\u6570\u636e\u8bad\u7ec3\u51fa\u4e00\u4e2a\u5f31\u5b66\u4e60\u5668. \u5728\u63a5\u4e0b\u6765\u7684 \u8fde\u7eed\u8fed\u4ee3\u4e2d,\u6837\u672c\u7684\u6743\u91cd\u9010\u4e2a\u5730\u88ab\u4fee\u6539,\u5b66\u4e60\u7b97\u6cd5\u4e5f\u56e0\u6b64\u8981\u91cd\u65b0\u5e94\u7528\u8fd9\u4e9b\u5df2\u7ecf\u4fee\u6539\u7684\u6743\u91cd. \u5728\u7ed9\u5b9a\u7684\u4e00\u4e2a\u8fed\u4ee3\u4e2d, \u90a3\u4e9b\u5728\u4e0a\u4e00\u8f6e\u8fed\u4ee3\u4e2d\u88ab\u9884\u6d4b\u4e3a\u9519\u8bef\u7ed3\u679c\u7684\u6837\u672c\u7684\u6743\u91cd\u5c06\u4f1a\u88ab\u589e\u52a0, \u800c\u90a3\u4e9b\u88ab\u9884\u6d4b\u4e3a\u6b63\u786e\u7ed3\u679c\u7684\u6837\u672c\u7684\u6743 \u91cd\u5c06\u4f1a\u88ab\u964d\u4f4e. \u968f\u7740\u8fed\u4ee3\u6b21\u6570\u7684\u589e\u52a0, \u90a3\u4e9b\u96be\u4ee5\u9884\u6d4b\u7684\u6837\u4f8b\u7684\u5f71\u54cd\u5c06\u4f1a\u8d8a\u6765\u8d8a\u5927, \u6bcf\u4e00\u4e2a\u968f\u540e\u7684\u5f31\u5b66\u4e60\u5668\u90fd\u5c06 \u4f1a\u88ab\u5f3a\u8feb\u66f4\u52a0\u5173\u6ce8\u90a3\u4e9b\u5728\u4e4b\u524d\u88ab\u9519\u8bef\u9884\u6d4b\u7684\u6837\u4f8b","title":"AdaBoost"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#gradient-tree-boosting","text":"Gradient Tree Boosting \u6216\u68af\u5ea6\u63d0\u5347\u56de\u5f52\u6811(GBRT)\u662f\u5bf9\u4e8e\u4efb\u610f\u7684\u53ef\u5fae\u635f\u5931\u51fd\u6570\u7684\u63d0\u5347\u7b97\u6cd5\u7684\u6cdb\u5316. GBRT \u662f\u4e00\u4e2a\u51c6\u786e\u9ad8\u6548\u7684\u73b0\u6709\u7a0b\u5e8f, \u5b83\u65e2\u80fd\u7528\u4e8e\u5206\u7c7b\u95ee\u9898\u4e5f\u53ef\u4ee5\u7528\u4e8e\u56de\u5f52\u95ee\u9898. \u68af\u5ea6\u6811\u63d0\u5347\u6a21\u578b\u88ab\u5e94\u7528\u5230\u5404\u79cd\u9886\u57df, \u5305\u62ec\u7f51\u9875\u641c\u7d22\u6392\u540d\u548c\u751f\u6001\u9886\u57df. \u56de\u5f52\u6811\u57fa\u5b66\u4e60\u5668\u7684\u5927\u5c0f\u5b9a\u4e49\u4e86\u53ef\u4ee5\u88ab\u68af\u5ea6\u63d0\u5347\u6a21\u578b\u6355\u6349\u5230\u7684\u53d8\u91cf(\u5373\u7279\u5f81)\u76f8\u4e92\u4f5c\u7528(\u5373\u591a\u4e2a\u7279\u5f81\u5171\u540c\u5bf9\u9884\u6d4b\u4ea7\u751f\u5f71\u54cd)\u7684\u7a0b\u5ea6. \u901a\u5e38\u4e00\u68f5\u6df1\u5ea6\u4e3a h \u7684\u6811\u80fd\u6355\u83b7\u5230\u79e9\u4e3a h \u7684\u76f8\u4e92\u4f5c\u7528 \u76ee\u524d\u652f\u6301\u7684\u635f\u5931\u51fd\u6570, \u5177\u4f53\u635f\u5931\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570 loss \u6307\u5b9a: \u56de\u5f52 (Regression) Least squares ('ls'): \u7531\u4e8e\u5176\u4f18\u8d8a\u7684\u8ba1\u7b97\u6027\u80fd,\u8be5\u635f\u5931\u51fd\u6570\u6210\u4e3a\u56de\u5f52\u7b97\u6cd5\u4e2d\u7684\u81ea\u7136\u9009\u62e9. \u521d\u59cb\u6a21\u578b\u901a\u8fc7\u76ee\u6807\u503c\u7684\u5747\u503c\u7ed9\u51fa. Least absolute deviation ('lad'): \u56de\u5f52\u4e2d\u5177\u6709\u9c81\u68d2\u6027\u7684\u635f\u5931\u51fd\u6570,\u521d\u59cb\u6a21\u578b\u901a\u8fc7\u76ee \u6807\u503c\u7684\u4e2d\u503c\u7ed9\u51fa. Huber ('huber'): \u56de\u5f52\u4e2d\u53e6\u4e00\u4e2a\u5177\u6709\u9c81\u68d2\u6027\u7684\u635f\u5931\u51fd\u6570,\u5b83\u662f\u6700\u5c0f\u4e8c\u4e58\u548c\u6700\u5c0f\u7edd\u5bf9\u504f\u5dee\u4e24\u8005\u7684\u7ed3\u5408. \u5176\u5229\u7528 alpha \u6765\u63a7\u5236\u6a21\u578b\u5bf9\u4e8e\u5f02\u5e38\u70b9\u7684\u654f\u611f\u5ea6 Quantile ('quantile'): \u5206\u4f4d\u6570\u56de\u5f52\u635f\u5931\u51fd\u6570.\u7528 0 < alpha < 1 \u6765\u6307\u5b9a\u5206\u4f4d\u6570\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u4ea7\u751f\u9884\u6d4b\u95f4\u9694 \u5206\u7c7b (Classification) Binomial deviance ('deviance'): \u5bf9\u4e8e\u4e8c\u5206\u7c7b\u95ee\u9898(\u63d0\u4f9b\u6982\u7387\u4f30\u8ba1)\u5373\u8d1f\u7684\u4e8c\u9879log\u4f3c\u7136 \u635f\u5931\u51fd\u6570.\u6a21\u578b\u4ee5log\u7684\u6bd4\u503c\u6bd4\u6765\u521d\u59cb\u5316. Multinomial deviance ('deviance'): \u5bf9\u4e8e\u591a\u5206\u7c7b\u95ee\u9898\u7684\u8d1f\u7684\u591a\u9879log\u4f3c\u7136\u635f\u5931\u51fd\u6570\u5177\u6709 n_classes \u4e2a\u4e92\u65a5\u7684\u7c7b.\u63d0\u4f9b\u6982\u7387\u4f30\u8ba1. \u521d\u59cb\u6a21\u578b\u7531\u6bcf\u4e2a\u7c7b\u7684\u5148\u9a8c\u6982\u7387\u7ed9\u51fa.\u5728\u6bcf\u4e00\u6b21\u8fed\u4ee3\u4e2d n_classes \u56de\u5f52\u6811\u88ab\u6784\u5efa,\u8fd9\u4f7f\u5f97 GBRT \u5728\u5904\u7406\u591a\u7c7b\u522b\u6570\u636e\u96c6\u65f6\u76f8\u5f53\u4f4e\u6548. Exponential loss ('exponential'): \u4e0e AdaBoostClassifier \u5177\u6709\u76f8\u540c\u7684\u635f\u5931 \u51fd\u6570\u4e0e 'deviance' \u76f8\u6bd4, \u5bf9\u5177\u6709\u9519\u8bef\u6807\u8bb0\u7684\u6837\u672c\u7684\u9c81\u68d2\u6027\u8f83\u5dee,\u4ec5\u7528\u4e8e\u5728\u4e8c\u5206\u7c7b\u95ee\u9898 \u5728\u62df\u5408\u4e00\u5b9a\u6570\u91cf\u7684\u5f31\u5206\u7c7b\u5668\u65f6, \u53c2\u6570 learning_rate \u548c\u53c2\u6570 n_estimators \u4e4b\u95f4\u6709\u5f88\u5f3a\u7684\u5236\u7ea6\u5173\u7cfb. \u8f83\u5c0f\u7684 learning_rate \u9700\u8981\u5927\u91cf\u7684\u5f31\u5206\u7c7b\u5668\u624d\u80fd\u4fdd\u8bc1\u8bad\u7ec3\u8bef\u5dee\u7684\u4e0d\u53d8.\u7ecf\u9a8c\u8868\u660e\u6570\u503c\u8f83\u5c0f\u7684 learning_rate \u5c06\u4f1a\u5f97\u5230\u66f4\u597d\u7684\u6d4b\u8bd5\u8bef\u5dee.","title":"Gradient Tree Boosting"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#xgboost","text":"XGBoost \u662f Extreme Gradient Boosting \u7684\u7f29\u5199 XGBoost \u7528\u4e8e\u76d1\u7763\u5b66\u4e60\u95ee\u9898 \u6b63\u5219\u5316\u9879\u63a7\u5236\u6a21\u578b\u7684\u590d\u6742\u6027, \u8fd9\u6709\u52a9\u4e8e\u907f\u514d\u8fc7\u62df\u5408 \u6811\u96c6\u6210\u6a21\u578b\u662f\u4e00\u7ec4 classification and regression trees(CART) CART \u4e0e decision trees(\u51b3\u7b56\u6811)\u6709\u4e9b\u8bb8\u7684\u4e0d\u540c, \u5c31\u662f\u53f6\u5b50\u53ea\u5305\u542b\u51b3\u7b56\u503c. \u5728 CART \u4e2d, \u6bcf\u4e2a\u53f6\u5b50\u90fd\u6709\u4e00\u4e2a real score (\u771f\u5b9e\u7684\u5206\u6570), \u8fd9\u7ed9\u4e86\u6211\u4eec\u66f4\u4e30\u5bcc\u7684\u89e3\u91ca, \u8d85\u8d8a\u4e86\u5206\u7c7b \u652f\u6301\u5bfc\u5165\u7684\u6570\u636e\u683c\u5f0f libsvm txt format file numpy \u7684 2D \u6570\u7ec4 xgboost binary buffer file \u6570\u636e\u5c06\u4f1a\u88ab\u5b58\u5728\u4e00\u4e2a\u540d\u4e3a DMatrix \u7684\u5bf9\u8c61\u4e2d \u52a0\u8f7d ligbsvm \u6587\u672c\u683c\u5f0f\u6216\u8005 XGBoost \u4e8c\u8fdb\u5236\u6587\u4ef6\u5230 DMatrix \u5bf9\u8c61\u4e2d dtrain = xgb.DMatrix('train.svm.txt') dtest = xgb.DMatrix('test.svm.buffer') \u52a0\u8f7d numpy \u7684\u6570\u7ec4\u5230 DMatrix \u5bf9\u8c61\u4e2d data = np.random.rand(5,10) # 5 entities, each contains 10 features label = np.random.randint(2, size=5) # binary target dtrain = xgb.DMatrix( data, label=label) \u52a0\u8f7d scpiy.sparse \u6570\u7ec4\u5230 DMatrix \u5bf9\u8c61\u4e2d csr = scipy.sparse.csr_matrix((dat, (row, col))) dtrain = xgb.DMatrix(csr) \u4fdd\u5b58 DMatrix \u5230 XGBoost \u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u540e, \u4f1a\u5728\u4e0b\u6b21\u52a0\u8f7d\u65f6\u66f4\u5feb dtrain = xgb.DMatrix('train.svm.txt') dtrain.save_binary(\"train.buffer\") \u5904\u7406 DMatrix \u4e2d\u7684\u7f3a\u5931\u503c, \u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u7f3a\u5931\u503c\u7684\u53c2\u6570\u6765\u521d\u59cb\u5316 DMatrix dtrain = xgb.DMatrix(data, label=label, missing = -999.0) xgboost \u4f7f\u7528 \u5b57\u5178 \u6765\u4fdd\u5b58\u53c2\u6570 booster \u53c2\u6570 param = {'bst:max_depth':2, 'bst:eta':1, 'silent':1, 'objective':'binary:logistic' } param['nthread'] = 4 param['eval_metric'] = 'auc' \u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u8bc4\u4f30\u6307\u6807 param['eval_metric'] = ['auc', 'ams@0'] plst = param.items() plst += [('eval_metric', 'ams@0')] \u6307\u5b9a \u6a21\u5f0f evallist = [(dtest,'eval'), (dtrain,'train')] \u8bad\u7ec3\u6a21\u578b num_round = 10 bst = xgb.train( plst, dtrain, num_round, evallist ) \u4fdd\u5b58 bst.save_model('0001.model') \u52a0\u8f7d\u548c\u8f6c\u5b58 dump_model() load_model() \u5982\u679c\u60a8\u6709\u4e00\u4e2a\u9a8c\u8bc1\u96c6, \u4f60\u53ef\u4ee5\u4f7f\u7528\u63d0\u524d\u505c\u6b62\u627e\u5230\u6700\u4f73\u6570\u91cf\u7684 boosting rounds\uff08\u68af\u5ea6\u6b21\u6570\uff09. \u63d0\u524d\u505c\u6b62\u81f3\u5c11\u9700\u8981\u4e00\u4e2a evals \u96c6\u5408. \u5982\u679c\u6709\u591a\u4e2a, \u5b83\u5c06\u4f7f\u7528\u6700\u540e\u4e00\u4e2a. train(..., evals=evals, early_stopping_rounds=10) \u5982\u679c\u63d0\u524d\u505c\u6b62\uff0c\u6a21\u578b\u5c06\u6709\u4e09\u4e2a\u989d\u5916\u7684\u5b57\u6bb5: bst.best_score, bst.best_iteration \u548c bst.best_ntree_limit. \u8bf7\u6ce8\u610f train() \u5c06\u4ece\u4e0a\u4e00\u6b21\u8fed\u4ee3\u4e2d\u8fd4\u56de\u4e00\u4e2a\u6a21\u578b, \u800c\u4e0d\u662f\u6700\u597d\u7684\u4e00\u4e2a. \u8fd9\u4e0e\u4e24\u4e2a\u5ea6\u91cf\u6807\u51c6\u4e00\u8d77\u4f7f\u7528\u4ee5\u8fbe\u5230\u6700\u5c0f\u5316\uff08RMSE, \u5bf9\u6570\u635f\u5931\u7b49\uff09\u548c\u6700\u5927\u5316\uff08MAP, NDCG, AUC\uff09. \u8bf7\u6ce8\u610f, \u5982\u679c\u60a8\u6307\u5b9a\u591a\u4e2a\u8bc4\u4f30\u6307\u6807, \u5219 param ['eval_metric'] \u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u7528\u4e8e\u63d0\u524d\u505c\u6b62 \u9884\u6d4b predict() \u7ed8\u56fe # \u91cd\u8981\u6027 xgb.plot_importance(bst) # \u6811 xgb.plot_tree(bst, num_trees=2) xgb.to_graphviz(bst, num_trees=2)","title":"XGBoost"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#xgboost-api","text":"class xgboost.DMatrix() # \u7c7b get_label() get_weight() num_col() save_binary(fname, silent=True) set_label(label) slice(rindex) class xgboost.Booster(params=None, cache=(), model_file=None) # \u7c7b eval(data, name='eval', iteration=0) get_score(fmap='', importance_type='weight') get_split_value_histogram(feature, fmap='', bins=None, as_pandas=True) predict(data, output_margin=False, ntree_limit=0, pred_leaf=False, pred_contribs=False, approx_contribs=False) save_model(fname) xgboost.train() # \u51fd\u6570 params (dict) \u2013 Booster params dtrain (DMatrix) \u2013 Data to be trained num_boost_round (int) \u2013 Number of boosting iterations early_stopping_rounds (int) \u2013 Activates early stopping learning_rates xgboost.cv() # \u51fd\u6570 class xgboost.XGBRegressor() # \u7c7b, sklearn wrapper class xgboost.XGBClassifier() xgboost.plot_importance() # \u51fd\u6570 xgboost.plot_tree() # \u51fd\u6570 xgboost.to_graphviz() # \u51fd\u6570 xgboost/demo at master \u00b7 dmlc/xgboost xgboost/demo/guide-python at master \u00b7 tqchen/xgboost Python API Reference \u2014 xgboost 0.6 documentation","title":"xgboost \u5e93\u7684\u4e3b\u8981 API"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#_4","text":"\u7279\u5f81\u91cd\u8981\u6027 \u5355\u4e2a\u51b3\u7b56\u6811\u672c\u8d28\u4e0a\u662f\u901a\u8fc7\u9009\u62e9\u6700\u4f73\u5207\u5206\u70b9\u6765\u8fdb\u884c\u7279\u5f81\u9009\u62e9.\u8fd9\u4e2a\u4fe1\u606f\u53ef\u4ee5\u7528\u6765\u68c0\u6d4b\u6bcf\u4e2a\u7279\u5f81\u7684\u91cd\u8981\u6027.\u57fa\u672c\u601d\u60f3\u662f\uff1a\u5728\u6811 \u7684\u5206\u5272\u70b9\u4e2d\u4f7f\u7528\u7684\u7279\u5f81\u8d8a\u9891\u7e41, \u7279\u5f81\u8d8a\u91cd\u8981. \u90e8\u5206\u4f9d\u8d56 (Partial dependence) VotingClassifier (\u6295\u7968\u5206\u7c7b\u5668)\u7684\u539f\u7406\u662f\u7ed3\u5408\u4e86\u591a\u4e2a\u4e0d\u540c\u7684\u673a\u5668\u5b66\u4e60\u5206\u7c7b\u5668, \u5e76\u4e14\u91c7\u7528\u591a\u6570\u8868\u51b3(majority vote)\u6216\u8005\u5e73\u5747\u9884\u6d4b\u6982\u7387(\u8f6f\u6295\u7968)\u7684\u65b9\u5f0f\u6765\u9884\u6d4b\u5206\u7c7b\u6807\u7b7e. \u8fd9\u6837\u7684\u5206\u7c7b\u5668\u53ef\u4ee5\u7528\u4e8e\u4e00\u7ec4\u540c\u6837\u8868\u73b0\u826f\u597d\u7684\u6a21\u578b, \u4ee5\u4fbf\u5e73\u8861\u5b83\u4eec\u5404\u81ea\u7684\u5f31\u70b9","title":"\u89e3\u91ca\u6027"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#112_1","text":"1 vs 1 sklearn.svm.NuSVC sklearn.svm.SVC sklearn.gaussian_process.GaussianProcessClassifier 1 vs many GradientBoostingClassifier GaussianProcessClassifier LogisticRegression PassiveAggressiveClassifier Perceptron","title":"1.12 \u591a\u7c7b\u548c\u591a\u6807\u7b7e\u7b97\u6cd5"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#_5","text":"VarianceThreshold \u662f\u7279\u5f81\u9009\u62e9\u7684\u4e00\u4e2a\u7b80\u5355\u57fa\u672c\u65b9\u6cd5\uff0c\u5b83\u4f1a\u79fb\u9664\u6240\u6709\u90a3\u4e9b\u65b9\u5dee\u4e0d\u6ee1\u8db3\u4e00\u4e9b\u9608\u503c\u7684\u7279\u5f81, \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u4f1a\u79fb\u9664\u6240\u6709\u7684\u96f6\u65b9\u5dee\u7279\u5f81\uff0c\u5373\u90a3\u4e9b\u5728\u6240\u6709\u7684\u6837\u672c\u4e0a\u7684\u53d6\u503c\u5747\u4e0d\u53d8\u7684\u7279\u5f81 \u5355\u53d8\u91cf\u7684\u7279\u5f81\u9009\u62e9\u662f\u901a\u8fc7\u57fa\u4e8e\u5355\u53d8\u91cf\u7684\u7edf\u8ba1\u6d4b\u8bd5\u6765\u9009\u62e9\u6700\u597d\u7684\u7279\u5f81\u3002\u5b83\u53ef\u4ee5\u5f53\u505a\u662f\u8bc4\u4f30\u5668\u7684\u9884\u5904\u7406\u6b65\u9aa4 \u53ef\u4ee5\u901a\u8fc7 \u7edf\u8ba1\u6d4b\u8bd5 \u8fdb\u884c\u7279\u5f81\u9009\u62e9 \u5c06\u5f97\u5206\u51fd\u6570\u4f5c\u4e3a\u8f93\u5165\uff0c\u8fd4\u56de\u5355\u53d8\u91cf\u7684\u5f97\u5206\u548c p \u503c \uff08\u6216\u8005\u4ec5\u4ec5\u662f SelectKBest \u548c SelectPercentile \u7684\u5206\u6570\uff09: \u5bf9\u4e8e\u56de\u5f52: f_regression , mutual_info_regression \u5bf9\u4e8e\u5206\u7c7b: chi2 , f_classif , mutual_info_classif \u8fd9\u4e9b\u57fa\u4e8e F-test \u7684\u65b9\u6cd5\u8ba1\u7b97\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\u4e4b\u95f4\u7684\u7ebf\u6027\u76f8\u5173\u7a0b\u5ea6 mutual information methods\uff08\u4e92\u4fe1\u606f\uff09\u80fd\u591f\u8ba1\u7b97\u4efb\u4f55\u79cd\u7c7b\u7684\u7edf\u8ba1\u76f8\u5173\u6027\uff0c\u4f46\u662f\u4f5c\u4e3a\u975e\u53c2\u6570\u7684\u65b9\u6cd5\uff0c\u4e92\u4fe1\u606f\u9700\u8981\u66f4\u591a\u7684\u6837\u672c\u6765\u8fdb\u884c\u51c6\u786e\u7684\u4f30\u8ba1 \u4e0d\u8981\u4f7f\u7528\u4e00\u4e2a\u56de\u5f52\u8bc4\u5206\u51fd\u6570\u6765\u5904\u7406\u5206\u7c7b\u95ee\u9898 \u9012\u5f52\u5f0f\u7279\u5f81\u6d88\u9664 recursive feature elimination ( RFE ) \u901a\u8fc7\u8003\u8651\u8d8a\u6765\u8d8a\u5c0f\u7684\u7279\u5f81\u96c6\u5408\u6765\u9012\u5f52\u7684\u9009\u62e9\u7279\u5f81 Linear models \u4f7f\u7528 L1 \u6b63\u5219\u5316\u7684\u7ebf\u6027\u6a21\u578b\u4f1a\u5f97\u5230\u7a00\u758f\u89e3 \u57fa\u4e8e Tree\uff08\u6811\uff09\u7684\u7279\u5f81\u9009\u53d6 \u53ef\u4ee5\u7528\u6765\u8ba1\u7b97\u7279\u5f81\u7684\u91cd\u8981\u6027\uff0c\u7136\u540e\u53ef\u4ee5\u6d88\u9664\u4e0d\u76f8\u5173\u7684\u7279\u5f81 \u7279\u5f81\u9009\u62e9\u901a\u5e38\u5728\u5b9e\u9645\u7684\u5b66\u4e60\u4e4b\u524d\u7528\u6765\u505a\u9884\u5904\u7406\u3002\u5728 scikit-learn \u4e2d\u63a8\u8350\u7684\u65b9\u5f0f\u662f\u4f7f\u7528 sklearn.pipeline.Pipeline","title":"\u7279\u5f81\u9009\u62e9"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#_6","text":"\u6267\u884c\u5206\u7c7b\u65f6, \u60a8\u7ecf\u5e38\u5e0c\u671b\u4e0d\u4ec5\u53ef\u4ee5\u9884\u6d4b\u7c7b\u6807\u7b7e, \u8fd8\u8981\u83b7\u5f97\u76f8\u5e94\u6807\u7b7e\u7684\u6982\u7387\uff0c \u6821\u51c6\u6a21\u5757\u53ef\u4ee5\u8ba9\u60a8\u66f4\u597d\u5730\u6821\u51c6\u7ed9\u5b9a\u6a21\u578b\u7684\u6982\u7387, \u6216\u6dfb\u52a0\u5bf9\u6982\u7387\u9884\u6d4b\u7684\u652f\u6301\uff0c \u7cbe\u786e\u6821\u51c6\u7684\u5206\u7c7b\u5668\u662f\u6982\u7387\u5206\u7c7b\u5668, \u5176\u53ef\u4ee5\u5c06 predict_proba \u65b9\u6cd5\u7684\u8f93\u51fa\u76f4\u63a5\u89e3\u91ca\u4e3a confidence level\uff08\u7f6e\u4fe1\u5ea6\u7ea7\u522b\uff09 LogisticRegression \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8fd4\u56de\u826f\u597d\u7684\u6821\u51c6\u9884\u6d4b, \u56e0\u4e3a\u5b83\u76f4\u63a5\u4f18\u5316\u4e86 log-loss\uff08\u5bf9\u6570\u635f\u5931\uff09\u60c5\u51b5","title":"\u6982\u7387\u6821\u51c6"},{"location":"\u673a\u5668\u5b66\u4e60/GeneralizedLinearModels/#_7","text":"\u591a\u5c42\u611f\u77e5\u5668\u7684\u4f18\u70b9: \u53ef\u4ee5\u5b66\u4e60\u5f97\u5230\u975e\u7ebf\u6027\u6a21\u578b\u3002 \u4f7f\u7528 partial_fit \u53ef\u4ee5\u5b66\u4e60\u5f97\u5230\u5b9e\u65f6\u6a21\u578b(\u5728\u7ebf\u5b66\u4e60) \u591a\u5c42\u611f\u77e5\u5668(MLP)\u7684\u7f3a\u70b9: \u5177\u6709\u9690\u85cf\u5c42\u7684 MLP \u5177\u6709\u975e\u51f8\u7684\u635f\u5931\u51fd\u6570\uff0c\u5b83\u6709\u4e0d\u6b62\u4e00\u4e2a\u7684\u5c40\u90e8\u6700\u5c0f\u503c\u3002 \u56e0\u6b64\u4e0d\u540c\u7684\u968f\u673a\u6743\u91cd\u521d\u59cb\u5316\u4f1a\u5bfc\u81f4\u4e0d\u540c\u7684\u9a8c\u8bc1\u96c6\u51c6\u786e\u7387\u3002 MLP \u9700\u8981\u8c03\u8bd5\u4e00\u4e9b\u8d85\u53c2\u6570\uff0c\u4f8b\u5982\u9690\u85cf\u5c42\u795e\u7ecf\u5143\u7684\u6570\u91cf\u3001\u5c42\u6570\u548c\u8fed\u4ee3\u8f6e\u6570\u3002 MLP \u5bf9\u7279\u5f81\u5f52\u4e00\u5316\u5f88\u654f\u611f.","title":"\u795e\u7ecf\u7f51\u7edc"},{"location":"\u673a\u5668\u5b66\u4e60/content/","text":"\u5b66\u4e60\u8d44\u6599\u6574\u7406 author: autuanliu email: autuanliu@163.com \u673a\u5668\u5b66\u4e60 Machine Learning \u725b\u6d25\u5927\u5b66\u516c\u5f00\u8bfe \u0177hat | Data Science in Python Slender Means WILL IT PYTHON \u795e\u7ecf\u7f51\u7edc\u4e0e\u6df1\u5ea6\u5b66\u4e60-\u6781\u5ba2\u5b66\u9662Wiki \u6df1\u5ea6\u5b66\u4e60\u5165\u95e8-\u6781\u5ba2\u5b66\u9662Wiki \u73b0\u4ee3\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff1a\u4f18\u70b9\u548c\u7f3a\u70b9 8\u4e2a\u6709\u8da3\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u521d\u5b66\u8005 \u4e3a\u521d\u5b66\u8005\u63d0\u4f9b\u514d\u8d39\u7684\u6570\u636e\u79d1\u5b66\u8d44\u6e90 How to Think like a Computer Scientist: Interactive Edition Kaggle\u521d\u5b66\u8005\u6307\u5357 \u5b66\u4e60\u6570\u636e\u79d1\u5b66\u548c\u673a\u5668\u5b66\u4e60 - EliteDataScience \u673a\u5668\u5b66\u4e60\u4e2d\u5982\u4f55\u5904\u7406\u4e0d\u5e73\u8861\u7c7b Keras\u6559\u7a0b\uff1aPython\u5165\u95e8\u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\u6307\u5357 \u6570\u636e\u7ef4\u6570\u964d\u4f4e\u7684\u4e03\u79cd\u6280\u672f \u65af\u5766\u798fCS231n 2017\u6700\u65b0\u8bfe\u7a0b\uff1a\u674e\u98de\u98de\u8be6\u89e3\u6df1\u5ea6\u5b66\u4e60\u7684\u6846\u67b6\u5b9e\u73b0\u4e0e\u5bf9\u6bd4 | \u673a\u5668\u4e4b\u5fc3 Iimbalanced-learn documentation Docker \u6df1\u5ea6\u673a\u5668\u5b66\u4e60 Deep Learning with Docker - Affine Layer \u7279\u5f81\u5de5\u7a0b\u7684\u6700\u4f73\u5b9e\u8df5 8\u4e2a\u6709\u8da3\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u521d\u5b66\u8005 \u57fa\u4e8eDocker\u7684Tensorflow\u5b9e\u9a8c\u73af\u5883-\u4e91\u6816\u793e\u533a \u4e00\u6587\u6982\u89c8\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u4e94\u5927\u6b63\u5219\u5316\u65b9\u6cd5\u548c\u4e03\u5927\u4f18\u5316\u7b56\u7565 \u6559\u7a0b | \u7406\u89e3XGBoost\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u51b3\u7b56\u8fc7\u7a0b \u7279\u5f81\u5de5\u7a0b \u673a\u5668\u5b66\u4e60\u4e4b\u7279\u5f81\u5de5\u7a0b | D.W's Notes - Machine Learning \u6570\u5b66\u79d1\u5b66\u7684\u975e\u6570\u5b66\u7279\u5f81\u5de5\u7a0b\u6280\u672f| \u8428\u94a6Joglekar\u7684\u535a\u5ba2 \u5982\u4f55\u63d0\u9ad8\u673a\u5668\u5b66\u4e60\uff1a\u7279\u5f81\u5de5\u7a0b\u7684\u6280\u5de7\u548c\u63d0\u793a \u6570\u636e\u79d1\u5b66\u4e2d\u7684\u7279\u5f81\u5de5\u7a0b| Microsoft Docs \u51c6\u5907\u6570\u636e\u4ee5\u5728Azure\u673a\u5668\u5b66\u4e60\u670d\u52a1\uff08\u9884\u89c8\uff09|\u4e2d\u5206\u7c7bIris\u6559\u7a0b Microsoft Docs python jonathan-bower/DataScienceResources: Open Source Data Science Resources. \u4e0b\u5212\u7ebf\u7684\u533a\u522b \u4e0b\u5212\u7ebf\u7684\u533a\u522b OOP OOP1 \u6570\u636e\u53ef\u89c6\u5316 seaborn plotly \u6570\u636e\u79d1\u5b66 jeroenjanssens/data-science-at-the-command-line: Data Science at the Command Line SAG SGD\u7684\u533a\u522b \u68af\u5ea6\u4e0b\u964d\u53ca\u5176\u53d8\u79cd pytorch pytorch-tutorial negative_log_likelihood pytorch windows \u914d\u7f6e pip3 install psycopg2 pip3 install torchvision conda install -c peterjc123 pytorch Tensorflow tensorflow-in-a-nutshell tensorflow-in-a-nutshell tensorflow-in-a-nutshell https://medium.com/@camrongodbout RNN \u795e\u7ecf\u7f51\u7edc NN class summary \u8d44\u6599 \u5377\u79ef\u53ef\u89c6\u5316 blog \u5377\u79ef\u7f51\u7edc bolg 3 \u674e\u6c90\u5927\u795e\u7684\u8bfe\u7a0b \u82f1\u6587\u539f\u7248 Must Know Tips/Tricks in Deep Neural Networks Kaggle otto house price","title":"\u5b66\u4e60\u8d44\u6599\u603b\u7ed3"},{"location":"\u673a\u5668\u5b66\u4e60/content/#_1","text":"author: autuanliu email: autuanliu@163.com","title":"\u5b66\u4e60\u8d44\u6599\u6574\u7406"},{"location":"\u673a\u5668\u5b66\u4e60/content/#_2","text":"Machine Learning \u725b\u6d25\u5927\u5b66\u516c\u5f00\u8bfe \u0177hat | Data Science in Python Slender Means WILL IT PYTHON \u795e\u7ecf\u7f51\u7edc\u4e0e\u6df1\u5ea6\u5b66\u4e60-\u6781\u5ba2\u5b66\u9662Wiki \u6df1\u5ea6\u5b66\u4e60\u5165\u95e8-\u6781\u5ba2\u5b66\u9662Wiki \u73b0\u4ee3\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff1a\u4f18\u70b9\u548c\u7f3a\u70b9 8\u4e2a\u6709\u8da3\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u521d\u5b66\u8005 \u4e3a\u521d\u5b66\u8005\u63d0\u4f9b\u514d\u8d39\u7684\u6570\u636e\u79d1\u5b66\u8d44\u6e90 How to Think like a Computer Scientist: Interactive Edition Kaggle\u521d\u5b66\u8005\u6307\u5357 \u5b66\u4e60\u6570\u636e\u79d1\u5b66\u548c\u673a\u5668\u5b66\u4e60 - EliteDataScience \u673a\u5668\u5b66\u4e60\u4e2d\u5982\u4f55\u5904\u7406\u4e0d\u5e73\u8861\u7c7b Keras\u6559\u7a0b\uff1aPython\u5165\u95e8\u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\u6307\u5357 \u6570\u636e\u7ef4\u6570\u964d\u4f4e\u7684\u4e03\u79cd\u6280\u672f \u65af\u5766\u798fCS231n 2017\u6700\u65b0\u8bfe\u7a0b\uff1a\u674e\u98de\u98de\u8be6\u89e3\u6df1\u5ea6\u5b66\u4e60\u7684\u6846\u67b6\u5b9e\u73b0\u4e0e\u5bf9\u6bd4 | \u673a\u5668\u4e4b\u5fc3 Iimbalanced-learn documentation","title":"\u673a\u5668\u5b66\u4e60"},{"location":"\u673a\u5668\u5b66\u4e60/content/#docker","text":"Deep Learning with Docker - Affine Layer \u7279\u5f81\u5de5\u7a0b\u7684\u6700\u4f73\u5b9e\u8df5 8\u4e2a\u6709\u8da3\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u521d\u5b66\u8005 \u57fa\u4e8eDocker\u7684Tensorflow\u5b9e\u9a8c\u73af\u5883-\u4e91\u6816\u793e\u533a \u4e00\u6587\u6982\u89c8\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u4e94\u5927\u6b63\u5219\u5316\u65b9\u6cd5\u548c\u4e03\u5927\u4f18\u5316\u7b56\u7565 \u6559\u7a0b | \u7406\u89e3XGBoost\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u51b3\u7b56\u8fc7\u7a0b","title":"Docker \u6df1\u5ea6\u673a\u5668\u5b66\u4e60"},{"location":"\u673a\u5668\u5b66\u4e60/content/#_3","text":"\u673a\u5668\u5b66\u4e60\u4e4b\u7279\u5f81\u5de5\u7a0b | D.W's Notes - Machine Learning \u6570\u5b66\u79d1\u5b66\u7684\u975e\u6570\u5b66\u7279\u5f81\u5de5\u7a0b\u6280\u672f| \u8428\u94a6Joglekar\u7684\u535a\u5ba2 \u5982\u4f55\u63d0\u9ad8\u673a\u5668\u5b66\u4e60\uff1a\u7279\u5f81\u5de5\u7a0b\u7684\u6280\u5de7\u548c\u63d0\u793a \u6570\u636e\u79d1\u5b66\u4e2d\u7684\u7279\u5f81\u5de5\u7a0b| Microsoft Docs \u51c6\u5907\u6570\u636e\u4ee5\u5728Azure\u673a\u5668\u5b66\u4e60\u670d\u52a1\uff08\u9884\u89c8\uff09|\u4e2d\u5206\u7c7bIris\u6559\u7a0b Microsoft Docs","title":"\u7279\u5f81\u5de5\u7a0b"},{"location":"\u673a\u5668\u5b66\u4e60/content/#python","text":"jonathan-bower/DataScienceResources: Open Source Data Science Resources. \u4e0b\u5212\u7ebf\u7684\u533a\u522b \u4e0b\u5212\u7ebf\u7684\u533a\u522b OOP OOP1","title":"python"},{"location":"\u673a\u5668\u5b66\u4e60/content/#_4","text":"seaborn plotly","title":"\u6570\u636e\u53ef\u89c6\u5316"},{"location":"\u673a\u5668\u5b66\u4e60/content/#_5","text":"jeroenjanssens/data-science-at-the-command-line: Data Science at the Command Line SAG SGD\u7684\u533a\u522b \u68af\u5ea6\u4e0b\u964d\u53ca\u5176\u53d8\u79cd","title":"\u6570\u636e\u79d1\u5b66"},{"location":"\u673a\u5668\u5b66\u4e60/content/#pytorch","text":"pytorch-tutorial negative_log_likelihood","title":"pytorch"},{"location":"\u673a\u5668\u5b66\u4e60/content/#pytorch-windows","text":"pip3 install psycopg2 pip3 install torchvision conda install -c peterjc123 pytorch","title":"pytorch windows \u914d\u7f6e"},{"location":"\u673a\u5668\u5b66\u4e60/content/#tensorflow","text":"tensorflow-in-a-nutshell tensorflow-in-a-nutshell tensorflow-in-a-nutshell https://medium.com/@camrongodbout RNN","title":"Tensorflow"},{"location":"\u673a\u5668\u5b66\u4e60/content/#_6","text":"NN class summary \u8d44\u6599 \u5377\u79ef\u53ef\u89c6\u5316 blog \u5377\u79ef\u7f51\u7edc bolg 3 \u674e\u6c90\u5927\u795e\u7684\u8bfe\u7a0b \u82f1\u6587\u539f\u7248 Must Know Tips/Tricks in Deep Neural Networks","title":"\u795e\u7ecf\u7f51\u7edc"},{"location":"\u673a\u5668\u5b66\u4e60/content/#kaggle","text":"otto house price","title":"Kaggle"},{"location":"\u673a\u5668\u5b66\u4e60/imblearnDoc/","text":"\u4e0d\u5747\u8861\u5b66\u4e60 sampler \u91c7\u6837\u5668 base \u62df\u5408 estimator = obj.fit(data, targets) \u91c7\u6837 data_resampled, targets_resampled = obj.sample(data, targets) \u540c\u65f6\u91c7\u6837 \u62df\u5408 data_resampled, targets_resampled = obj.fit_sample(data, targets) \u5728\u4e0d\u5e73\u8861\u6bd4\u7387\u8f83\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u51b3\u7b56\u529f\u80fd\u503e\u5411\u4e8e\u91c7\u7528\u66f4\u591a\u6837\u672c\u7684\u7c7b\u522b\uff0c\u901a\u5e38\u79f0\u4e3a\u591a\u6570\u7c7b\u522b Over-sampling RandomOverSampler SMOTE ADASYN \u5728\u6837\u672c\u91cf\u5c11\u7684\u7c7b\u522b\u4e2d\u751f\u6210\u65b0\u7684\u6837\u672c(\u968f\u673a\u91c7\u6837\u66ff\u6362\u5f53\u524d\u53ef\u7528\u6837\u672c) Apart from the random sampling with replacement, there is two popular methods to over-sample minority classes: Synthetic Minority Oversampling Technique (SMOTE) Adaptive Synthetic (ADASYN) sampling method. These algorithm can be used in the same manner RandomOverSampler \u901a\u8fc7\u590d\u5236\u5c11\u6570\u7c7b\u522b\u7684\u4e00\u4e9b\u539f\u59cb\u6837\u672c\u8fdb\u884c\u4e0a\u62bd\u6837 SMOTE, ADASYN \u901a\u8fc7 \u63d2\u503c \u4ea7\u751f\u65b0\u7684\u6837\u672c\u8fdb\u884c\u4e0a\u91c7\u6837 ADASYN\u4e13\u6ce8\u4e8e\u5728 \u4f7f\u7528k-\u6700\u8fd1\u90bb\u5206\u7c7b\u5668\u9519\u8bef\u5206\u7c7b \u7684\u539f\u59cb\u6837\u672c\u7684\u65c1\u8fb9\u751f\u6210\u6837\u672c SMOTE might connect inliers and outliers while ADASYN might focus solely on outliers which, in both cases, might lead to a sub-optimal decision function SMOTE \u57fa\u4e8e\u6700\u4f73\u51b3\u7b56\u51fd\u6570\u8fb9\u754c\u9644\u8fd1\u7684\u6837\u672c\u63d0\u4f9b3\u4e2a\u989d\u5916\u7684\u9009\u9879\u751f\u6210\u6837\u672c\uff0c\u5728\u6700\u8fd1\u90bb\u7c7b\u522b\u7684\u76f8\u53cd\u65b9\u5411\u751f\u6210\u6837\u672c 'regular'\uff0c'borderline1'\uff0c'borderline2'\uff0c'svm' ADASYN is working similarly to the regular SMOTE RandomOverSampler\u6837\u672c\u751f\u6210\u8fc7\u7a0b\u4e2d\u4e0d\u9700\u8981\u4efb\u4f55\u7c7b\u95f4\u4fe1\u606f.\u56e0\u6b64\uff0c\u6bcf\u4e2a\u76ee\u6807\u7c7b\u90fd\u662f\u72ec\u7acb\u91cd\u65b0\u91c7\u6837\u7684 \u65e0\u8bba\u662fADASYN\u548c SMOTE\u9700\u8981\u6709\u5173\u7528\u4e8e\u751f\u6210\u6837\u672c\u7684\u6bcf\u4e2a\u6837\u672c\u7684\u76f8\u90bb\u4fe1\u606f under-sampling Prototype generation Prototype selection Cleaning under-sampling techniques Prototype generation \u539f\u578b\u751f\u6210\u6280\u672f\u5c06\u51cf\u5c11\u76ee\u6807\u7c7b\u4e2d\u7684\u6837\u672c\u6570\u91cf\uff0c\u4f46\u5269\u4f59\u7684\u6837\u672c\u662f \u4ece\u539f\u59cb\u96c6\u5408\u4e2d\u751f\u6210\u7684\uff0c\u800c\u4e0d\u662f\u88ab\u9009\u4e2d\u7684 ClusterCentroids \u4f7f\u7528 k-means \u6765\u51cf\u5c11\u6837\u672c\u6570\u91cf, \u6bcf\u4e2a\u7c7b\u5c06\u4e0eK-means\u65b9\u6cd5\u7684\u8d28\u5fc3\u5408\u6210\uff0c\u800c\u4e0d\u662f\u539f\u59cb\u6837\u672c ClusterCentroids \u63d0\u4f9b\u4e86\u4e00\u79cd\u6709\u6548\u7684\u65b9\u5f0f\u6765\u7528\u5c11\u91cf\u7684\u6837\u672c\u8868\u793a\u6570\u636e\u96c6\u7fa4, \u8fd9\u79cd\u65b9\u6cd5\u8981\u6c42\u6570\u636e\u5206\u7ec4\u5230\u96c6\u7fa4\u4e2d.\u53e6\u5916\uff0c\u5e94\u8be5\u8bbe\u7f6e\u8d28\u5fc3\u7684\u6570\u91cf\uff0c\u4f7f\u5f97\u6b20\u91c7\u6837\u7684\u7c07\u4ee3\u8868\u539f\u59cb\u7684\u7c07 ClusterCentroids\u652f\u6301\u7a00\u758f\u77e9\u9635.\u4f46\u662f\uff0c\u65b0\u751f\u6210\u7684\u6837\u672c\u5e76\u4e0d\u662f\u7279\u522b\u7a00\u758f\u7684.\u56e0\u6b64\uff0c\u5373\u4f7f\u5f97\u5230\u7684\u77e9\u9635\u662f\u7a00\u758f\u7684\uff0c\u5728\u8fd9\u65b9\u9762\u7b97\u6cd5\u5c06\u662f\u4f4e\u6548\u7684 \u4e0e\u539f\u578b\u751f\u6210\u7b97\u6cd5\u76f8\u53cd\uff0c\u539f\u578b\u9009\u62e9 Prototype selection \u7b97\u6cd5\u5c06\u4ece\u539f\u59cb\u96c6\u5408 S \u4e2d\u9009\u62e9\u6837\u672c the controlled under-sampling techniques the cleaning under-sampling techniques RandomUnderSampler \u662f\u4e00\u79cd\u901a\u8fc7\u968f\u673a\u9009\u62e9\u76ee\u6807\u7c7b\u7684\u6570\u636e\u5b50\u96c6\u6765\u5e73\u8861\u6570\u636e\u7684\u5feb\u901f\u800c\u7b80\u5355\u7684\u65b9\u6cd5 RandomUnderSampler\u5141\u8bb8\u901a\u8fc7\u8bbe\u7f6ereplacement = True.\u591a\u4e2a\u7c7b\u7684\u91cd\u91c7\u6837\u901a\u8fc7\u72ec\u7acb\u8003\u8651\u6bcf\u4e2a\u76ee\u6807\u7c7b\u6765\u6267\u884c NearMiss\u6dfb\u52a0\u4e00\u4e9b\u542f\u53d1\u5f0f\u89c4\u5219\u6765\u9009\u62e9\u6837\u672c.NearMiss\u5b9e\u73b03\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u542f\u53d1\u5f0f\uff0c\u53ef\u4ee5\u7528\u53c2\u6570 version \u9009\u62e9 NearMiss \u57fa\u4e8e\u6700\u8fd1\u90bb NearMiss-1\u9009\u62e9\u4e0e\u8d1f\u7c7b\u7684N\u4e2a\u6700\u63a5\u8fd1\u6837\u672c\u7684\u5e73\u5747\u8ddd\u79bb\u6700\u5c0f\u7684\u6b63\u6837\u672c NearMiss-2\u9009\u62e9\u4e0e\u8d1f\u7c7b\u522b\u7684N\u4e2a\u6700\u8fdc\u6837\u672c\u7684\u5e73\u5747\u8ddd\u79bb\u6700\u5c0f\u7684\u6b63\u6837\u672c NearMiss-3\u662f\u4e00\u4e2a\u4e24\u6b65\u7b97\u6cd5.\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8d1f\u6837\u672c\uff0c\u4ed6\u4eec\u7684 M\u4e2a\u6700\u8fd1\u90bb\u5c06\u88ab\u4fdd\u7559.\u7136\u540e\uff0c\u9009\u62e9\u7684\u6b63\u6837\u672c\u662f\u5230N\u4e2a\u6700\u8fd1\u90bb\u7684\u5e73\u5747\u8ddd\u79bb\u6700\u5927\u7684\u6837\u672c NearMiss-1, NearMiss-2 \u90fd\u5f88\u5bb9\u6613\u53d7\u5230\u566a\u58f0\u7684\u5f71\u54cd Cleaning under-sampling techniques \u4e0d\u5141\u8bb8\u6307\u5b9a\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u7684\u6837\u54c1\u6570\u91cf A Tomek\u2019s link between two samples of different class x and y is defined such that there is no example z such that(where d(.) is the distance between the two samples) $$ d(x, y) < d(x, z) \\text{ or } d(y, z) < d(x, y) $$ \u5982\u679c\u4e24\u4e2a\u6837\u672c\u662f\u5f7c\u6b64\u8fd1\u90bb\uff0c\u5219\u5b58\u5728 Tomek's link \u53c2\u6570ratio\u63a7\u5236\u54ea\u4e2alink\u7684\u6837\u672c\u5c06\u88ab\u5220\u9664, \u9ed8\u8ba4\u4f1a\u4ece \u591a\u6570\u7c7b\u522b\u4e2d \u79fb\u9664link\uff0c\u8bbe\u7f6e\u4e3a all \u53ef\u4ee5\u79fb\u9664\u6240\u6709\u7684 link EditedNearestNeighbours \u7528\u6700\u8fd1\u90bb\u5c45\u7b97\u6cd5\u5e76\u901a\u8fc7\u53bb\u9664\u4e0e\u4ed6\u4eec\u7684\u90bb\u5c45\u4e0d\u591f\u201c\u4e00\u81f4\u201d\u7684\u6837\u672c\u6765\u201c\u7f16\u8f91\u201d\u6570\u636e\u96c6.\u5bf9\u4e8e\u8be5\u7c7b\u4e2d\u7684\u6bcf\u4e2a\u6837\u672c\u8fdb\u884c\u4e0b\u91c7\u6837\uff0c\u8ba1\u7b97\u6700\u8fd1\u90bb\u5c45\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u9009\u62e9\u6807\u51c6\uff0c\u5219\u79fb\u9664\u6837\u672c RepeatedEditedNearestNeighbours\u901a\u8fc7\u591a\u6b21\u91cd\u590d\u8be5\u7b97\u6cd5\u6765\u6269\u5c55 .\u901a\u5e38\uff0c\u91cd\u590d\u8be5\u7b97\u6cd5\u5c06\u5220\u9664\u66f4\u591a\u7684\u6570\u636e AllKNN differs from the previous RepeatedEditedNearestNeighbours since the number of neighbors of the internal nearest neighbors algorithm is increased at each iteration RepeatedEditedNearestNeighbours, EditedNearestNeighbours, AllKNN \u4f1a\u6e05\u9664\u4f4d\u4e8e\u51b3\u7b56\u8fb9\u754c\u9644\u8fd1\u7684 \u6837\u672c CondensedNearestNeighbour\u4f7f\u75281\u4e2a\u6700\u8fd1\u90bb\u5c45\u89c4\u5219\u8fed\u4ee3\u51b3\u5b9a\u662f\u5426\u5e94\u8be5\u5220\u9664\u4e00\u4e2a\u6837\u672c CondensedNearestNeighbour \u5bf9\u566a\u58f0\u654f\u611f\uff0c\u4f1a\u589e\u52a0\u566a\u97f3\u6837\u672c OneSidedSelection\u5c06\u4f7f\u7528TomekLinks\u53bb\u9664\u566a\u58f0\u6837\u672c NeighbourhoodCleaningRule will focus on cleaning the data than condensing them. Therefore, it will used the union of samples to be rejected between the EditedNearestNeighbours and the output a 3 nearest neighbors classifier InstanceHardnessThreshold is a specific algorithm in which a classifier is trained on the data and the samples with lower probabilities are removed SMOTE\u5e76\u8868\u660e\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u5728\u8fb9\u7f18\u79bb\u7fa4\u70b9\u548c\u5185\u70b9\u4e4b\u95f4\u63d2\u5165\u65b0\u70b9\u6765\u751f\u6210\u566a\u58f0\u6837\u672c Tomek\u2019s link and edited nearest-neighbours are the two cleaning methods which have been added pipeline after SMOTE over-sampling to obtain a cleaner space SMOTETomek and SMOTEENN \u662f\u65e2\u5305\u542b\u4e0a\u91c7\u6837\u53c8\u5305\u542b\u4e0b\u91c7\u6837\u7684 \u65b9\u6cd5, \u540c\u6837\u4e0d\u80fd\u4fdd\u8bc1\u5404\u4e2a\u7c7b\u522b\u7684\u6570\u76ee\u76f8\u540c TomekLinks, EditedNearestNeighbours, CondensedNearestNeighbour, RepeatedEditedNearestNeighbours, AllKNN, NeighbourhoodCleaningRule, InstanceHardnessThreshold \u5747\u4e0d\u6307\u5b9a\u7c7b\u522b\u7684\u6837\u672c\u4e2a\u6570\uff0c\u4e0d\u4fdd\u8bc1\u6bcf\u4e2a\u7c7b\u522b\u7684\u6837\u672c\u6570\u662f\u76f8\u540c\u7684 \u5373 Prototype generation(ClusterCentroids) \u65b9\u6cd5\u80fd\u591f\u4fdd\u8bc1\u5404\u4e2a\u7c7b\u522b\u7684\u6837\u672c\u6570\u76ee\u662f\u4e00\u6837\u7684\u800c Prototype selection \u57fa\u672c\u4e0a\u4e0d\u80fd\u4fdd\u8bc1\u5404\u4e2a\u7c7b\u522b\u7684\u6837\u672c\u6570\u76ee\u662f\u4e00\u6837\u7684(\u4ecd\u7136\u662f\u4e0d\u5747\u8861\u7684) ClusterCentroids\uff0cRandomUnderSampler \u548c NearMiss \u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u7c7b\u522b\u7684\u6837\u672c\u6570\u76ee\u76f8\u7b49 SMOTEENN tends to clean more noisy samples than SMOTETomek Ensemble of samplers \u4e00\u4e2a\u4e0d\u5e73\u8861\u7684\u6570\u636e\u96c6\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u51e0\u4e2a\u5e73\u8861\u7684\u5b50\u96c6\u6765\u5e73\u8861 EasyEnsemble creates an ensemble of data set by randomly under-sampling the original set EasyEnsemble has two important parameters: (i) n_subsets will be used to return number of subset and (ii) replacement to randomly sample with or without replacement BalanceCascade differs from the previous method by using a classifier (using the parameter estimator) to ensure that misclassified samples can again be selected for the next subset In ensemble classifiers, bagging methods build several estimators on different randomly selected subset of data, However, this classifier does not allow to balance each subset of data. Therefore, when training on imbalanced data set, this classifier will favor the majority classes BalancedBaggingClassifier allows to resample each subset of data before to train each estimator of the ensemble. In short, it combines the output of an EasyEnsemble sampler with an ensemble of classifiers \u603b\u7ed3 under sampling ClusterCentroids \u6bcf\u7c7b\u6570\u76ee\u76f8\u540c RandomUnderSampler \u6bcf\u7c7b\u6570\u76ee\u76f8\u540c InstanceHardnessThreshold NearMiss \u6bcf\u7c7b\u6570\u76ee\u76f8\u540c TomekLinks EditedNearestNeighbours RepeatedEditedNearestNeighbours AllKNN OneSidedSelection CondensedNearestNeighbour NeighbourhoodCleaningRule over samoling ADASYN \u6bcf\u7c7b\u6570\u76ee\u57fa\u672c\u76f8\u540c RandomOverSampler \u6bcf\u7c7b\u6570\u76ee\u76f8\u540c SMOTE \u6bcf\u7c7b\u6570\u76ee\u57fa\u672c\u76f8\u540c combine SMOTEENN SMOTETomek ensemble EasyEnsemble \u4ece\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u968f\u673a\u4e0b\u91c7\u6837 BalancedBaggingClassifier BalanceCascade metric sensitivity_specificity_support sensitivity_score specificity_score geometric_mean_score make_index_balanced_accuracy classification_report_imbalanced collections \u6a21\u5757 Python\u62e5\u6709\u4e00\u4e9b\u5185\u7f6e\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982str, int, list, tuple, dict\u7b49, collections\u6a21\u5757\u5728\u8fd9\u4e9b\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u7684\u57fa\u7840\u4e0a\uff0c\u63d0\u4f9b\u4e86\u51e0\u4e2a\u989d\u5916\u7684\u6570\u636e\u7c7b\u578b\uff1a namedtuple(): \u751f\u6210\u53ef\u4ee5\u4f7f\u7528\u540d\u5b57\u6765\u8bbf\u95ee\u5143\u7d20\u5185\u5bb9\u7684tuple\u5b50\u7c7b deque: \u53cc\u7aef\u961f\u5217\uff0c\u53ef\u4ee5\u5feb\u901f\u7684\u4ece\u53e6\u5916\u4e00\u4fa7\u8ffd\u52a0\u548c\u63a8\u51fa\u5bf9\u8c61 Counter: \u8ba1\u6570\u5668\uff0c\u4e3b\u8981\u7528\u6765\u8ba1\u6570 OrderedDict: \u6709\u5e8f\u5b57\u5178 defaultdict: \u5e26\u6709\u9ed8\u8ba4\u503c\u7684\u5b57\u5178 \u53c2\u8003\u6587\u732e imbalanced-learn documentation \u4e0d\u53ef\u4e0d\u77e5\u7684Python\u6a21\u5757: collections","title":"\u4e0d\u5e73\u8861\u7c7b\u5b66\u4e60"},{"location":"\u673a\u5668\u5b66\u4e60/imblearnDoc/#_1","text":"sampler \u91c7\u6837\u5668","title":"\u4e0d\u5747\u8861\u5b66\u4e60"},{"location":"\u673a\u5668\u5b66\u4e60/imblearnDoc/#base","text":"\u62df\u5408 estimator = obj.fit(data, targets) \u91c7\u6837 data_resampled, targets_resampled = obj.sample(data, targets) \u540c\u65f6\u91c7\u6837 \u62df\u5408 data_resampled, targets_resampled = obj.fit_sample(data, targets) \u5728\u4e0d\u5e73\u8861\u6bd4\u7387\u8f83\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u51b3\u7b56\u529f\u80fd\u503e\u5411\u4e8e\u91c7\u7528\u66f4\u591a\u6837\u672c\u7684\u7c7b\u522b\uff0c\u901a\u5e38\u79f0\u4e3a\u591a\u6570\u7c7b\u522b","title":"base"},{"location":"\u673a\u5668\u5b66\u4e60/imblearnDoc/#over-sampling","text":"RandomOverSampler SMOTE ADASYN \u5728\u6837\u672c\u91cf\u5c11\u7684\u7c7b\u522b\u4e2d\u751f\u6210\u65b0\u7684\u6837\u672c(\u968f\u673a\u91c7\u6837\u66ff\u6362\u5f53\u524d\u53ef\u7528\u6837\u672c) Apart from the random sampling with replacement, there is two popular methods to over-sample minority classes: Synthetic Minority Oversampling Technique (SMOTE) Adaptive Synthetic (ADASYN) sampling method. These algorithm can be used in the same manner RandomOverSampler \u901a\u8fc7\u590d\u5236\u5c11\u6570\u7c7b\u522b\u7684\u4e00\u4e9b\u539f\u59cb\u6837\u672c\u8fdb\u884c\u4e0a\u62bd\u6837 SMOTE, ADASYN \u901a\u8fc7 \u63d2\u503c \u4ea7\u751f\u65b0\u7684\u6837\u672c\u8fdb\u884c\u4e0a\u91c7\u6837 ADASYN\u4e13\u6ce8\u4e8e\u5728 \u4f7f\u7528k-\u6700\u8fd1\u90bb\u5206\u7c7b\u5668\u9519\u8bef\u5206\u7c7b \u7684\u539f\u59cb\u6837\u672c\u7684\u65c1\u8fb9\u751f\u6210\u6837\u672c SMOTE might connect inliers and outliers while ADASYN might focus solely on outliers which, in both cases, might lead to a sub-optimal decision function SMOTE \u57fa\u4e8e\u6700\u4f73\u51b3\u7b56\u51fd\u6570\u8fb9\u754c\u9644\u8fd1\u7684\u6837\u672c\u63d0\u4f9b3\u4e2a\u989d\u5916\u7684\u9009\u9879\u751f\u6210\u6837\u672c\uff0c\u5728\u6700\u8fd1\u90bb\u7c7b\u522b\u7684\u76f8\u53cd\u65b9\u5411\u751f\u6210\u6837\u672c 'regular'\uff0c'borderline1'\uff0c'borderline2'\uff0c'svm' ADASYN is working similarly to the regular SMOTE RandomOverSampler\u6837\u672c\u751f\u6210\u8fc7\u7a0b\u4e2d\u4e0d\u9700\u8981\u4efb\u4f55\u7c7b\u95f4\u4fe1\u606f.\u56e0\u6b64\uff0c\u6bcf\u4e2a\u76ee\u6807\u7c7b\u90fd\u662f\u72ec\u7acb\u91cd\u65b0\u91c7\u6837\u7684 \u65e0\u8bba\u662fADASYN\u548c SMOTE\u9700\u8981\u6709\u5173\u7528\u4e8e\u751f\u6210\u6837\u672c\u7684\u6bcf\u4e2a\u6837\u672c\u7684\u76f8\u90bb\u4fe1\u606f","title":"Over-sampling"},{"location":"\u673a\u5668\u5b66\u4e60/imblearnDoc/#under-sampling","text":"Prototype generation Prototype selection Cleaning under-sampling techniques Prototype generation \u539f\u578b\u751f\u6210\u6280\u672f\u5c06\u51cf\u5c11\u76ee\u6807\u7c7b\u4e2d\u7684\u6837\u672c\u6570\u91cf\uff0c\u4f46\u5269\u4f59\u7684\u6837\u672c\u662f \u4ece\u539f\u59cb\u96c6\u5408\u4e2d\u751f\u6210\u7684\uff0c\u800c\u4e0d\u662f\u88ab\u9009\u4e2d\u7684 ClusterCentroids \u4f7f\u7528 k-means \u6765\u51cf\u5c11\u6837\u672c\u6570\u91cf, \u6bcf\u4e2a\u7c7b\u5c06\u4e0eK-means\u65b9\u6cd5\u7684\u8d28\u5fc3\u5408\u6210\uff0c\u800c\u4e0d\u662f\u539f\u59cb\u6837\u672c ClusterCentroids \u63d0\u4f9b\u4e86\u4e00\u79cd\u6709\u6548\u7684\u65b9\u5f0f\u6765\u7528\u5c11\u91cf\u7684\u6837\u672c\u8868\u793a\u6570\u636e\u96c6\u7fa4, \u8fd9\u79cd\u65b9\u6cd5\u8981\u6c42\u6570\u636e\u5206\u7ec4\u5230\u96c6\u7fa4\u4e2d.\u53e6\u5916\uff0c\u5e94\u8be5\u8bbe\u7f6e\u8d28\u5fc3\u7684\u6570\u91cf\uff0c\u4f7f\u5f97\u6b20\u91c7\u6837\u7684\u7c07\u4ee3\u8868\u539f\u59cb\u7684\u7c07 ClusterCentroids\u652f\u6301\u7a00\u758f\u77e9\u9635.\u4f46\u662f\uff0c\u65b0\u751f\u6210\u7684\u6837\u672c\u5e76\u4e0d\u662f\u7279\u522b\u7a00\u758f\u7684.\u56e0\u6b64\uff0c\u5373\u4f7f\u5f97\u5230\u7684\u77e9\u9635\u662f\u7a00\u758f\u7684\uff0c\u5728\u8fd9\u65b9\u9762\u7b97\u6cd5\u5c06\u662f\u4f4e\u6548\u7684 \u4e0e\u539f\u578b\u751f\u6210\u7b97\u6cd5\u76f8\u53cd\uff0c\u539f\u578b\u9009\u62e9 Prototype selection \u7b97\u6cd5\u5c06\u4ece\u539f\u59cb\u96c6\u5408 S \u4e2d\u9009\u62e9\u6837\u672c the controlled under-sampling techniques the cleaning under-sampling techniques RandomUnderSampler \u662f\u4e00\u79cd\u901a\u8fc7\u968f\u673a\u9009\u62e9\u76ee\u6807\u7c7b\u7684\u6570\u636e\u5b50\u96c6\u6765\u5e73\u8861\u6570\u636e\u7684\u5feb\u901f\u800c\u7b80\u5355\u7684\u65b9\u6cd5 RandomUnderSampler\u5141\u8bb8\u901a\u8fc7\u8bbe\u7f6ereplacement = True.\u591a\u4e2a\u7c7b\u7684\u91cd\u91c7\u6837\u901a\u8fc7\u72ec\u7acb\u8003\u8651\u6bcf\u4e2a\u76ee\u6807\u7c7b\u6765\u6267\u884c NearMiss\u6dfb\u52a0\u4e00\u4e9b\u542f\u53d1\u5f0f\u89c4\u5219\u6765\u9009\u62e9\u6837\u672c.NearMiss\u5b9e\u73b03\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u542f\u53d1\u5f0f\uff0c\u53ef\u4ee5\u7528\u53c2\u6570 version \u9009\u62e9 NearMiss \u57fa\u4e8e\u6700\u8fd1\u90bb NearMiss-1\u9009\u62e9\u4e0e\u8d1f\u7c7b\u7684N\u4e2a\u6700\u63a5\u8fd1\u6837\u672c\u7684\u5e73\u5747\u8ddd\u79bb\u6700\u5c0f\u7684\u6b63\u6837\u672c NearMiss-2\u9009\u62e9\u4e0e\u8d1f\u7c7b\u522b\u7684N\u4e2a\u6700\u8fdc\u6837\u672c\u7684\u5e73\u5747\u8ddd\u79bb\u6700\u5c0f\u7684\u6b63\u6837\u672c NearMiss-3\u662f\u4e00\u4e2a\u4e24\u6b65\u7b97\u6cd5.\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8d1f\u6837\u672c\uff0c\u4ed6\u4eec\u7684 M\u4e2a\u6700\u8fd1\u90bb\u5c06\u88ab\u4fdd\u7559.\u7136\u540e\uff0c\u9009\u62e9\u7684\u6b63\u6837\u672c\u662f\u5230N\u4e2a\u6700\u8fd1\u90bb\u7684\u5e73\u5747\u8ddd\u79bb\u6700\u5927\u7684\u6837\u672c NearMiss-1, NearMiss-2 \u90fd\u5f88\u5bb9\u6613\u53d7\u5230\u566a\u58f0\u7684\u5f71\u54cd Cleaning under-sampling techniques \u4e0d\u5141\u8bb8\u6307\u5b9a\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u7684\u6837\u54c1\u6570\u91cf A Tomek\u2019s link between two samples of different class x and y is defined such that there is no example z such that(where d(.) is the distance between the two samples) $$ d(x, y) < d(x, z) \\text{ or } d(y, z) < d(x, y) $$ \u5982\u679c\u4e24\u4e2a\u6837\u672c\u662f\u5f7c\u6b64\u8fd1\u90bb\uff0c\u5219\u5b58\u5728 Tomek's link \u53c2\u6570ratio\u63a7\u5236\u54ea\u4e2alink\u7684\u6837\u672c\u5c06\u88ab\u5220\u9664, \u9ed8\u8ba4\u4f1a\u4ece \u591a\u6570\u7c7b\u522b\u4e2d \u79fb\u9664link\uff0c\u8bbe\u7f6e\u4e3a all \u53ef\u4ee5\u79fb\u9664\u6240\u6709\u7684 link EditedNearestNeighbours \u7528\u6700\u8fd1\u90bb\u5c45\u7b97\u6cd5\u5e76\u901a\u8fc7\u53bb\u9664\u4e0e\u4ed6\u4eec\u7684\u90bb\u5c45\u4e0d\u591f\u201c\u4e00\u81f4\u201d\u7684\u6837\u672c\u6765\u201c\u7f16\u8f91\u201d\u6570\u636e\u96c6.\u5bf9\u4e8e\u8be5\u7c7b\u4e2d\u7684\u6bcf\u4e2a\u6837\u672c\u8fdb\u884c\u4e0b\u91c7\u6837\uff0c\u8ba1\u7b97\u6700\u8fd1\u90bb\u5c45\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u9009\u62e9\u6807\u51c6\uff0c\u5219\u79fb\u9664\u6837\u672c RepeatedEditedNearestNeighbours\u901a\u8fc7\u591a\u6b21\u91cd\u590d\u8be5\u7b97\u6cd5\u6765\u6269\u5c55 .\u901a\u5e38\uff0c\u91cd\u590d\u8be5\u7b97\u6cd5\u5c06\u5220\u9664\u66f4\u591a\u7684\u6570\u636e AllKNN differs from the previous RepeatedEditedNearestNeighbours since the number of neighbors of the internal nearest neighbors algorithm is increased at each iteration RepeatedEditedNearestNeighbours, EditedNearestNeighbours, AllKNN \u4f1a\u6e05\u9664\u4f4d\u4e8e\u51b3\u7b56\u8fb9\u754c\u9644\u8fd1\u7684 \u6837\u672c CondensedNearestNeighbour\u4f7f\u75281\u4e2a\u6700\u8fd1\u90bb\u5c45\u89c4\u5219\u8fed\u4ee3\u51b3\u5b9a\u662f\u5426\u5e94\u8be5\u5220\u9664\u4e00\u4e2a\u6837\u672c CondensedNearestNeighbour \u5bf9\u566a\u58f0\u654f\u611f\uff0c\u4f1a\u589e\u52a0\u566a\u97f3\u6837\u672c OneSidedSelection\u5c06\u4f7f\u7528TomekLinks\u53bb\u9664\u566a\u58f0\u6837\u672c NeighbourhoodCleaningRule will focus on cleaning the data than condensing them. Therefore, it will used the union of samples to be rejected between the EditedNearestNeighbours and the output a 3 nearest neighbors classifier InstanceHardnessThreshold is a specific algorithm in which a classifier is trained on the data and the samples with lower probabilities are removed SMOTE\u5e76\u8868\u660e\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u5728\u8fb9\u7f18\u79bb\u7fa4\u70b9\u548c\u5185\u70b9\u4e4b\u95f4\u63d2\u5165\u65b0\u70b9\u6765\u751f\u6210\u566a\u58f0\u6837\u672c Tomek\u2019s link and edited nearest-neighbours are the two cleaning methods which have been added pipeline after SMOTE over-sampling to obtain a cleaner space SMOTETomek and SMOTEENN \u662f\u65e2\u5305\u542b\u4e0a\u91c7\u6837\u53c8\u5305\u542b\u4e0b\u91c7\u6837\u7684 \u65b9\u6cd5, \u540c\u6837\u4e0d\u80fd\u4fdd\u8bc1\u5404\u4e2a\u7c7b\u522b\u7684\u6570\u76ee\u76f8\u540c TomekLinks, EditedNearestNeighbours, CondensedNearestNeighbour, RepeatedEditedNearestNeighbours, AllKNN, NeighbourhoodCleaningRule, InstanceHardnessThreshold \u5747\u4e0d\u6307\u5b9a\u7c7b\u522b\u7684\u6837\u672c\u4e2a\u6570\uff0c\u4e0d\u4fdd\u8bc1\u6bcf\u4e2a\u7c7b\u522b\u7684\u6837\u672c\u6570\u662f\u76f8\u540c\u7684 \u5373 Prototype generation(ClusterCentroids) \u65b9\u6cd5\u80fd\u591f\u4fdd\u8bc1\u5404\u4e2a\u7c7b\u522b\u7684\u6837\u672c\u6570\u76ee\u662f\u4e00\u6837\u7684\u800c Prototype selection \u57fa\u672c\u4e0a\u4e0d\u80fd\u4fdd\u8bc1\u5404\u4e2a\u7c7b\u522b\u7684\u6837\u672c\u6570\u76ee\u662f\u4e00\u6837\u7684(\u4ecd\u7136\u662f\u4e0d\u5747\u8861\u7684) ClusterCentroids\uff0cRandomUnderSampler \u548c NearMiss \u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u7c7b\u522b\u7684\u6837\u672c\u6570\u76ee\u76f8\u7b49 SMOTEENN tends to clean more noisy samples than SMOTETomek","title":"under-sampling"},{"location":"\u673a\u5668\u5b66\u4e60/imblearnDoc/#ensemble-of-samplers","text":"\u4e00\u4e2a\u4e0d\u5e73\u8861\u7684\u6570\u636e\u96c6\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u51e0\u4e2a\u5e73\u8861\u7684\u5b50\u96c6\u6765\u5e73\u8861 EasyEnsemble creates an ensemble of data set by randomly under-sampling the original set EasyEnsemble has two important parameters: (i) n_subsets will be used to return number of subset and (ii) replacement to randomly sample with or without replacement BalanceCascade differs from the previous method by using a classifier (using the parameter estimator) to ensure that misclassified samples can again be selected for the next subset In ensemble classifiers, bagging methods build several estimators on different randomly selected subset of data, However, this classifier does not allow to balance each subset of data. Therefore, when training on imbalanced data set, this classifier will favor the majority classes BalancedBaggingClassifier allows to resample each subset of data before to train each estimator of the ensemble. In short, it combines the output of an EasyEnsemble sampler with an ensemble of classifiers","title":"Ensemble of samplers"},{"location":"\u673a\u5668\u5b66\u4e60/imblearnDoc/#_2","text":"under sampling ClusterCentroids \u6bcf\u7c7b\u6570\u76ee\u76f8\u540c RandomUnderSampler \u6bcf\u7c7b\u6570\u76ee\u76f8\u540c InstanceHardnessThreshold NearMiss \u6bcf\u7c7b\u6570\u76ee\u76f8\u540c TomekLinks EditedNearestNeighbours RepeatedEditedNearestNeighbours AllKNN OneSidedSelection CondensedNearestNeighbour NeighbourhoodCleaningRule over samoling ADASYN \u6bcf\u7c7b\u6570\u76ee\u57fa\u672c\u76f8\u540c RandomOverSampler \u6bcf\u7c7b\u6570\u76ee\u76f8\u540c SMOTE \u6bcf\u7c7b\u6570\u76ee\u57fa\u672c\u76f8\u540c combine SMOTEENN SMOTETomek ensemble EasyEnsemble \u4ece\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u968f\u673a\u4e0b\u91c7\u6837 BalancedBaggingClassifier BalanceCascade metric sensitivity_specificity_support sensitivity_score specificity_score geometric_mean_score make_index_balanced_accuracy classification_report_imbalanced","title":"\u603b\u7ed3"},{"location":"\u673a\u5668\u5b66\u4e60/imblearnDoc/#collections","text":"Python\u62e5\u6709\u4e00\u4e9b\u5185\u7f6e\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982str, int, list, tuple, dict\u7b49, collections\u6a21\u5757\u5728\u8fd9\u4e9b\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u7684\u57fa\u7840\u4e0a\uff0c\u63d0\u4f9b\u4e86\u51e0\u4e2a\u989d\u5916\u7684\u6570\u636e\u7c7b\u578b\uff1a namedtuple(): \u751f\u6210\u53ef\u4ee5\u4f7f\u7528\u540d\u5b57\u6765\u8bbf\u95ee\u5143\u7d20\u5185\u5bb9\u7684tuple\u5b50\u7c7b deque: \u53cc\u7aef\u961f\u5217\uff0c\u53ef\u4ee5\u5feb\u901f\u7684\u4ece\u53e6\u5916\u4e00\u4fa7\u8ffd\u52a0\u548c\u63a8\u51fa\u5bf9\u8c61 Counter: \u8ba1\u6570\u5668\uff0c\u4e3b\u8981\u7528\u6765\u8ba1\u6570 OrderedDict: \u6709\u5e8f\u5b57\u5178 defaultdict: \u5e26\u6709\u9ed8\u8ba4\u503c\u7684\u5b57\u5178","title":"collections \u6a21\u5757"},{"location":"\u673a\u5668\u5b66\u4e60/imblearnDoc/#_3","text":"imbalanced-learn documentation \u4e0d\u53ef\u4e0d\u77e5\u7684Python\u6a21\u5757: collections","title":"\u53c2\u8003\u6587\u732e"},{"location":"\u673a\u5668\u5b66\u4e60/model/","text":"\u6a21\u578b\u9009\u62e9\u4e0e\u8bc4\u4f30 \u4e3a\u4e86\u907f\u514d\u8fc7\u62df\u5408\uff0c\u5728\u8fdb\u884c\uff08\u76d1\u7763\uff09\u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u65f6\uff0c\u901a\u5e38\u53d6\u51fa\u90e8\u5206\u53ef\u5229\u7528\u6570\u636e\u4f5c\u4e3a test set\uff08\u6d4b\u8bd5\u6570\u636e\u96c6\uff09 X_test, y_test from sklearn.model_selection import train_test_split X_train, X_test, y_train, y_test = train_test_split( iris.data, iris.target, test_size=0.4, random_state=0) \u5f53\u8bc4\u4ef7\u4f30\u8ba1\u5668\u7684\u4e0d\u540c\u8bbe\u7f6e\uff08\u201dhyperparameters(\u8d85\u53c2\u6570)\u201d\uff09\u65f6\uff0c\u4f8b\u5982\u624b\u52a8\u4e3a SVM \u8bbe\u7f6e\u7684 C \u53c2\u6570\uff0c \u7531\u4e8e\u5728\u8bad\u7ec3\u96c6\u4e0a\uff0c\u901a\u8fc7\u8c03\u6574\u53c2\u6570\u8bbe\u7f6e\u4f7f\u4f30\u8ba1\u5668\u7684\u6027\u80fd\u8fbe\u5230\u4e86\u6700\u4f73\u72b6\u6001\uff1b\u4f46 \u5728\u6d4b\u8bd5\u96c6\u4e0a \u53ef\u80fd\u4f1a\u51fa\u73b0\u8fc7\u62df\u5408\u7684\u60c5\u51b5\u3002 \u6b64\u65f6\uff0c\u6d4b\u8bd5\u96c6\u4e0a\u7684\u4fe1\u606f\u53cd\u9988\u8db3\u4ee5\u98a0\u8986\u8bad\u7ec3\u597d\u7684\u6a21\u578b\uff0c\u8bc4\u4f30\u7684\u6307\u6807\u4e0d\u518d\u6709\u6548\u53cd\u6620\u51fa\u6a21\u578b\u7684\u6cdb\u5316\u6027\u80fd\u3002 \u4e3a\u4e86\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\uff0c\u8fd8\u5e94\u8be5\u51c6\u5907\u53e6\u4e00\u90e8\u5206\u88ab\u79f0\u4e3a \u201cvalidation set(\u9a8c\u8bc1\u96c6)\u201d \u7684\u6570\u636e\u96c6\uff0c \u6a21\u578b\u8bad\u7ec3\u5b8c\u6210\u4ee5\u540e\u5728\u9a8c\u8bc1\u96c6\u4e0a\u5bf9\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30\u3002 \u5f53\u9a8c\u8bc1\u96c6\u4e0a\u7684\u8bc4\u4f30\u5b9e\u9a8c\u6bd4\u8f83\u6210\u529f\u65f6\uff0c\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8fdb\u884c\u6700\u540e\u7684\u8bc4\u4f30 \u7136\u800c\uff0c\u901a\u8fc7\u5c06\u539f\u59cb\u6570\u636e\u5206\u4e3a3\u4e2a\u6570\u636e\u96c6\u5408\uff0c\u6211\u4eec\u5c31\u5927\u5927\u51cf\u5c11\u4e86\u53ef\u7528\u4e8e\u6a21\u578b\u5b66\u4e60\u7684\u6837\u672c\u6570\u91cf\uff0c \u5e76\u4e14\u5f97\u5230\u7684\u7ed3\u679c\u4f9d\u8d56\u4e8e\u96c6\u5408\u5bf9\uff08\u8bad\u7ec3\uff0c\u9a8c\u8bc1\uff09\u7684\u968f\u673a\u9009\u62e9 \u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7 \u4ea4\u53c9\u9a8c\u8bc1\uff08CV \u7f29\u5199\uff09 \u6765\u89e3\u51b3\u3002 \u4ea4\u53c9\u9a8c\u8bc1\u4ecd\u9700\u8981\u6d4b\u8bd5\u96c6\u505a\u6700\u540e\u7684\u6a21\u578b\u8bc4\u4f30\uff0c\u4f46\u4e0d\u518d\u9700\u8981\u9a8c\u8bc1\u96c6 k-fold \u5c06 k-1 \u4efd\u8bad\u7ec3\u96c6\u5b50\u96c6\u4f5c\u4e3a training data \uff08\u8bad\u7ec3\u96c6\uff09\u8bad\u7ec3\u6a21\u578b\uff0c \u5c06\u5269\u4f59\u7684 1 \u4efd\u8bad\u7ec3\u96c6\u5b50\u96c6\u4f5c\u4e3a\u9a8c\u8bc1\u96c6\u7528\u4e8e\u6a21\u578b\u9a8c\u8bc1\uff08\u4e5f\u5c31\u662f\u5229\u7528\u8be5\u6570\u636e\u96c6\u8ba1\u7b97\u6a21\u578b\u7684\u6027\u80fd\u6307\u6807\uff0c\u4f8b\u5982\u51c6\u786e\u7387\uff09 k-\u6298\u4ea4\u53c9\u9a8c\u8bc1\u5f97\u51fa\u7684\u6027\u80fd\u6307\u6807\u662f\u5faa\u73af\u8ba1\u7b97\u4e2d\u6bcf\u4e2a\u503c\u7684\u5e73\u5747\u503c \u8be5\u65b9\u6cd5\u867d\u7136\u8ba1\u7b97\u4ee3\u4ef7\u5f88\u9ad8\uff0c\u4f46\u662f\u5b83\u4e0d\u4f1a\u6d6a\u8d39\u592a\u591a\u7684\u6570\u636e\uff08\u5982\u56fa\u5b9a\u4efb\u610f\u6d4b\u8bd5\u96c6\u7684\u60c5\u51b5\u4e00\u6837\uff09\uff0c \u5728\u5904\u7406\u6837\u672c\u6570\u636e\u96c6\u8f83\u5c11\u7684\u95ee\u9898\uff08\u4f8b\u5982\uff0c\u9006\u5411\u63a8\u7406\uff09\u65f6\u6bd4\u8f83\u6709\u4f18\u52bf \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5728\u4f30\u8ba1\u5668\u548c\u6570\u636e\u96c6\u4e0a\u8c03\u7528 cross_val_score \u8f85\u52a9\u51fd\u6570 Model evaluation: quantifying the quality of predictions \u2014 scikit-learn 0.19.1 documentation from sklearn.model_selection import cross_val_score scores = cross_val_score(clf, iris.data, iris.target, cv=5) # \u4f1a\u5f97\u5230 5 \u4e2a\u5206\u6570 # \u8bc4\u5206\u4f30\u8ba1\u7684\u5e73\u5747\u5f97\u5206\u548c 95% \u7f6e\u4fe1\u533a\u95f4 print(\"Accuracy: %0.2f (+/- %0.2f)\" % (scores.mean(), scores.std() * 2)) \u5176\u4ed6\u65b9\u5f0f from sklearn.model_selection import ShuffleSplit n_samples = iris.data.shape[0] cv = ShuffleSplit(n_splits=3, test_size=0.3, random_state=0) cross_val_score(clf, iris.data, iris.target, cv=cv) \u4fdd\u7559\u6570\u636e\u7684\u6570\u636e\u8f6c\u6362 \u4e0d\u53ef\u4ee5\u5728\u4e00\u5f00\u59cb\u5c31\u5bf9 \u6240\u6709\u7684\u6570\u636e\u8fdb\u884c\u8f6c\u6362 from sklearn import preprocessing X_train, X_test, y_train, y_test = train_test_split( iris.data, iris.target, test_size=0.4, random_state=0) # \u5e94\u5f53\u4fdd\u5b58 scaler = preprocessing.StandardScaler().fit(X_train) X_train_transformed = scaler.transform(X_train) clf = svm.SVC(C=1).fit(X_train_transformed, y_train) # \u5e94\u7528\u5230\u6d4b\u8bd5\u96c6\u4e0a X_test_transformed = scaler.transform(X_test) clf.score(X_test_transformed, y_test) \u5176\u4ed6\u65b9\u5f0f from sklearn.pipeline import make_pipeline clf = make_pipeline(preprocessing.StandardScaler(), svm.SVC(C=1)) cross_val_score(clf, iris.data, iris.target, cv=cv) cross_validate \u51fd\u6570\u4e0e cross_val_score \u5728\u4e0b\u9762\u7684\u4e24\u4e2a\u65b9\u9762\u6709\u4e9b\u4e0d\u540c \u5b83\u5141\u8bb8\u6307\u5b9a\u591a\u4e2a\u6307\u6807\u8fdb\u884c\u8bc4\u4f30. \u9664\u4e86\u6d4b\u8bd5\u5f97\u5206\u4e4b\u5916\uff0c\u5b83\u8fd8\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u8bad\u7ec3\u5f97\u5206\uff0c\u62df\u5408\u6b21\u6570\uff0c score-times \uff08\u5f97\u5206\u6b21\u6570\uff09\u7684\u4e00\u4e2a\u5b57\u5178 from sklearn.model_selection import cross_validate from sklearn.metrics import recall_score scoring = ['precision_macro', 'recall_macro'] scores = cross_validate(clf, iris.data, iris.target, scoring=scoring, cv=5, return_train_score=False) # other from sklearn.metrics.scorer import make_scorer scoring = {'prec_macro': 'precision_macro', 'rec_micro': make_scorer(recall_score, average='macro')} # \u5355\u4e00\u6307\u6807 scores = cross_validate(clf, iris.data, iris.target, scoring='precision_macro') \u9664\u4e86\u8fd4\u56de\u7ed3\u679c\u4e0d\u540c\uff0c\u51fd\u6570 cross_val_predict \u5177\u6709\u548c cross_val_score \u76f8\u540c\u7684\u63a5\u53e3\uff0c \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f93\u5165\u7684\u5143\u7d20\uff0c\u5982\u679c\u5176\u5728\u6d4b\u8bd5\u96c6\u5408\u4e2d\uff0c\u5c06\u4f1a\u5f97\u5230\u9884\u6d4b\u7ed3\u679c \u4ea4\u53c9\u9a8c\u8bc1\u8fed\u4ee3\u5668 K-fold RepeatedKFold \u5f53\u9700\u8981\u8fd0\u884c\u65f6\u53ef\u4ee5\u4f7f\u7528\u5b83 KFold n \u6b21\uff0c\u5728\u6bcf\u6b21\u91cd\u590d\u4e2d\u4ea7\u751f\u4e0d\u540c\u7684\u5206\u5272 LeaveOneOut \u6bcf\u4e2a\u5b66\u4e60\u96c6\u90fd\u662f\u901a\u8fc7\u9664\u4e86\u4e00\u4e2a\u6837\u672c\u4ee5\u5916\u7684\u6240\u6709\u6837\u672c\u521b\u5efa\u7684\uff0c\u6d4b\u8bd5\u96c6\u662f\u88ab\u7559\u4e0b\u7684\u6837\u672c\uff0c \u4e0d\u4f1a\u6d6a\u8d39\u592a\u591a\u6570\u636e LOO \u7ecf\u5e38\u5bfc\u81f4\u8f83\u9ad8\u7684\u65b9\u5dee\u4f5c\u4e3a\u6d4b\u8bd5\u8bef\u5dee\u7684\u4f30\u8ba1\u5668 5-fold \u6216\u8005 10-fold \u4ea4\u53c9\u9a8c\u8bc1\u5e94\u8be5\u4f18\u4e8e LOO LeavePOut \u4e0e LeaveOneOut \u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u4e3a\u5b83\u901a\u8fc7\u4ece\u6574\u4e2a\u96c6\u5408\u4e2d\u5220\u9664 p \u4e2a\u6837\u672c\u6765\u521b\u5efa\u6240\u6709\u53ef\u80fd\u7684 \u8bad\u7ec3/\u6d4b\u8bd5\u96c6, p>1 \u65f6\uff0c \u6d4b\u8bd5\u96c6\u4f1a\u91cd\u53e0 ShuffleSplit \u8fed\u4ee3\u5668 \u5c06\u4f1a\u751f\u6210\u4e00\u4e2a\u7528\u6237\u7ed9\u5b9a\u6570\u91cf\u7684\u72ec\u7acb\u7684\u8bad\u7ec3/\u6d4b\u8bd5\u6570\u636e\u5212\u5206\u3002\u6837\u4f8b\u9996\u5148\u88ab\u6253\u6563\u7136\u540e\u5212\u5206\u4e3a\u4e00\u5bf9\u8bad\u7ec3\u6d4b\u8bd5\u96c6\u5408 ShuffleSplit \u53ef\u4ee5\u66ff\u4ee3 KFold \u4ea4\u53c9\u9a8c\u8bc1\uff0c\u56e0\u4e3a\u5176\u63d0\u4f9b\u4e86\u7ec6\u81f4\u7684\u8bad\u7ec3 / \u6d4b\u8bd5\u5212\u5206\u7684 \u6570\u91cf\u548c\u6837\u4f8b\u6240\u5360\u7684\u6bd4\u4f8b\u7b49\u7684\u63a7\u5236 \u4e00\u4e9b\u5206\u7c7b\u95ee\u9898\u5728\u76ee\u6807\u7c7b\u522b\u7684\u5206\u5e03\u4e0a\u53ef\u80fd\u8868\u73b0\u51fa\u5f88\u5927\u7684\u4e0d\u5e73\u8861\u6027\uff1a\u4f8b\u5982\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u6bd4\u6b63\u6837\u672c\u591a\u6570\u500d\u7684\u8d1f\u6837\u672c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u91c7\u7528\u5982 StratifiedKFold \u548c StratifiedShuffleSplit \u4e2d\u5b9e\u73b0\u7684\u5206\u5c42\u62bd\u6837\u65b9\u6cd5\uff0c\u786e\u4fdd\u76f8\u5bf9\u7684\u7c7b\u522b\u9891\u7387\u5728\u6bcf\u4e2a\u8bad\u7ec3\u548c\u9a8c\u8bc1 fold \u4e2d\u5927\u81f4\u76f8\u540c StratifiedKFold \u662f k-fold \u7684\u53d8\u79cd\uff0c\u4f1a\u8fd4\u56de stratified\uff08\u5206\u5c42\uff09 \u7684\u6298\u53e0\uff1a\u6bcf\u4e2a\u5c0f\u96c6\u5408\u4e2d\uff0c \u5404\u4e2a\u7c7b\u522b\u7684\u6837\u4f8b\u6bd4\u4f8b\u5927\u81f4\u548c\u5b8c\u6574\u6570\u636e\u96c6\u4e2d\u76f8\u540c StratifiedShuffleSplit \u662f ShuffleSplit \u7684\u4e00\u4e2a\u53d8\u79cd\uff0c\u4f1a\u8fd4\u56de\u76f4\u63a5\u7684\u5212\u5206 GroupKFold \u662f k-fold \u7684\u53d8\u4f53\uff0c\u5b83\u786e\u4fdd\u540c\u4e00\u4e2a group \u5728\u6d4b\u8bd5\u548c\u8bad\u7ec3\u96c6\u4e2d\u90fd\u4e0d\u88ab\u8868\u793a from sklearn.model_selection import GroupKFold X = [0.1, 0.2, 2.2, 2.4, 2.3, 4.55, 5.8, 8.8, 9, 10] y = [\"a\", \"b\", \"b\", \"b\", \"c\", \"c\", \"c\", \"d\", \"d\", \"d\"] groups = [1, 1, 1, 2, 2, 2, 3, 3, 3, 3] gkf = GroupKFold(n_splits=3) for train, test in gkf.split(X, y, groups=groups): print(\"%s %s\" % (train, test)) LeaveOneGroupOut LeavePGroupsOut GroupShuffleSplit \u8fed\u4ee3\u5668\u662f ShuffleSplit \u548c LeavePGroupsOut \u7684\u7ec4\u5408\uff0c\u5b83\u751f\u6210\u4e00\u4e2a\u968f\u673a\u5212\u5206\u5206\u533a\u7684\u5e8f\u5217\uff0c\u5176\u4e2d\u4e3a\u6bcf\u4e2a\u5206\u7ec4\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7ec4\u5b50\u96c6 TimeSeriesSplit \u662f k-fold \u7684\u4e00\u4e2a\u53d8\u4f53\uff0c\u5b83\u9996\u5148\u8fd4\u56de k \u6298\u4f5c\u4e3a\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5e76\u4e14 (k+1) \u6298\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u96c6 from sklearn.model_selection import TimeSeriesSplit X = np.array([[1, 2], [3, 4], [1, 2], [3, 4], [1, 2], [3, 4]]) y = np.array([1, 2, 3, 4, 5, 6]) tscv = TimeSeriesSplit(n_splits=3) print(tscv) for train, test in tscv.split(X): print(\"%s %s\" % (train, test)) \u5982\u679c\u6570\u636e\u7684\u987a\u5e8f\u4e0d\u662f\u4efb\u610f\u7684\uff08\u6bd4\u5982\u8bf4\uff0c\u76f8\u540c\u6807\u7b7e\u7684\u6837\u4f8b\u8fde\u7eed\u51fa\u73b0\uff09\uff0c\u4e3a\u4e86\u83b7\u5f97\u6709\u610f\u4e49\u7684\u4ea4\u53c9\u9a8c\u8bc1\u7ed3\u679c\uff0c\u9996\u5148\u5bf9\u5176\u8fdb\u884c \u6253\u6563\u662f\u5f88\u6709\u5fc5\u8981\u7684. \u7136\u800c\uff0c\u5f53\u6837\u4f8b\u4e0d\u662f\u72ec\u7acb\u540c\u5206\u5e03\u65f6\u6253\u6563\u5219\u662f\u4e0d\u53ef\u884c\u7684 \u8d85\u53c2\u6570\u8c03\u6574 \u8d85\u53c2\u6570\uff0c\u5373\u4e0d\u76f4\u63a5\u5728\u4f30\u8ba1\u5668\u5185\u5b66\u4e60\u7684\u53c2\u6570\u3002\u5728 scikit-learn \u5305\u4e2d\uff0c\u5b83\u4eec\u4f5c\u4e3a\u4f30\u8ba1\u5668\u7c7b\u4e2d\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u8fdb\u884c\u4f20\u9012 \u641c\u7d22\u8d85\u53c2\u6570\u7a7a\u95f4\u4ee5\u4fbf\u83b7\u5f97\u6700\u597d \u4ea4\u53c9\u9a8c\u8bc1 \u5206\u6570\u7684\u65b9\u6cd5\u662f\u53ef\u80fd\u7684\u800c\u4e14\u662f\u503c\u5f97\u63d0\u5021\u7684 \u641c\u7d22\u5305\u62ec: \u4f30\u8ba1\u5668(\u56de\u5f52\u5668\u6216\u5206\u7c7b\u5668) \u53c2\u6570\u7a7a\u95f4 \u641c\u5bfb\u6216\u91c7\u6837\u5019\u9009\u7684\u65b9\u6cd5 \u4ea4\u53c9\u9a8c\u8bc1\u65b9\u6848 \u8ba1\u5206\u51fd\u6570 GridSearchCV \u8003\u8651\u4e86\u6240\u6709\u53c2\u6570\u7ec4\u5408; \u800c RandomizedSearchCV \u53ef\u4ee5\u4ece\u5177\u6709\u6307\u5b9a\u5206\u5e03\u7684\u53c2\u6570\u7a7a\u95f4\u4e2d\u62bd\u53d6\u7ed9\u5b9a\u6570\u91cf\u7684\u5019\u9009 \u9ed8\u8ba4\u60c5\u51b5\u4e0b, \u53c2\u6570\u641c\u7d22\u4f7f\u7528\u4f30\u8ba1\u5668\u7684\u8bc4\u5206\u51fd\u6570\u6765\u8bc4\u4f30\uff08\u8861\u91cf\uff09\u53c2\u6570\u8bbe\u7f6e Log loss\uff0c\u53c8\u88ab\u79f0\u4e3a logistic regression loss\uff08logistic \u56de\u5f52\u635f\u5931\uff09\u6216\u8005 cross-entropy loss\uff08\u4ea4\u53c9\u71b5\u635f\u5931\uff09 \u5b9a\u4e49\u5728 probability estimates \uff08\u6982\u7387\u4f30\u8ba1) \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 Python \u7684\u5185\u7f6e\u6301\u4e45\u5316\u6a21\u578b\u5c06\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u4fdd\u5b58\u5728 scikit \u4e2d, \u5b83\u540d\u4e3a pickle \u6a21\u578b\u6301\u4e45\u5316 from sklearn.externals import joblib joblib.dump(clf, 'filename.pkl') clf = joblib.load('filename.pkl') sklearn \u7684\u6a21\u578b\u901a\u5e38\u4f7f\u7528 joblib \u66f4\u597d Pipeline Pipeline \u4f7f\u7528\u4e00\u7cfb\u5217 (key, value) \u952e\u503c\u5bf9\u6765\u6784\u5efa,\u5176\u4e2d key \u662f\u4f60\u7ed9\u8fd9\u4e2a\u6b65\u9aa4\u8d77\u7684\u540d\u5b57\uff0c value \u662f\u4e00\u4e2a\u8bc4\u4f30\u5668\u5bf9\u8c61 from sklearn.pipeline import Pipeline from sklearn.svm import SVC from sklearn.decomposition import PCA estimators = [('reduce_dim', PCA()), ('clf', SVC())] pipe = Pipeline(estimators) \u529f\u80fd\u51fd\u6570 make_pipeline \u662f\u6784\u5efa\u7ba1\u9053\u7684\u7f29\u5199; \u5b83\u63a5\u6536\u591a\u4e2a\u8bc4\u4f30\u5668\u5e76\u8fd4\u56de\u4e00\u4e2a\u7ba1\u9053\uff0c\u81ea\u52a8\u586b\u5145\u8bc4\u4f30\u5668\u540d from sklearn.pipeline import make_pipeline from sklearn.naive_bayes import MultinomialNB from sklearn.preprocessing import Binarizer make_pipeline(Binarizer(), MultinomialNB()) \u5bf9\u7ba1\u9053\u8c03\u7528 fit \u65b9\u6cd5\u7684\u6548\u679c\u8ddf\u4f9d\u6b21\u5bf9\u6bcf\u4e2a\u8bc4\u4f30\u5668\u8c03\u7528 fit \u65b9\u6cd5\u4e00\u6837 FeatureUnion \u5408\u5e76\u4e86\u591a\u4e2a\u8f6c\u6362\u5668\u5bf9\u8c61\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u8f6c\u6362\u5668\uff0c\u8be5\u8f6c\u6362\u5668\u5408\u5e76\u4e86\u4ed6\u4eec\u7684\u8f93\u51fa\u3002\u4e00\u4e2a FeatureUnion \u53ef\u4ee5\u63a5\u6536\u591a\u4e2a\u8f6c\u6362\u5668\u5bf9\u8c61\u3002\u5728\u9002\u914d\u671f\u95f4\uff0c\u6bcf\u4e2a\u8f6c\u6362\u5668\u90fd\u5355\u72ec\u7684\u548c\u6570\u636e\u9002\u914d\u3002 \u5bf9\u4e8e\u8f6c\u6362\u6570\u636e\uff0c\u8f6c\u6362\u5668\u53ef\u4ee5\u5e76\u53d1\u4f7f\u7528\uff0c\u4e14\u8f93\u51fa\u7684\u6837\u672c\u5411\u91cf\u88ab\u8fde\u63a5\u6210\u66f4\u5927\u7684\u5411\u91cf \u7c7b DictVectorizer \u53ef\u7528\u4e8e\u5c06\u6807\u51c6\u7684Python\u5b57\u5178\uff08dict\uff09\u5bf9\u8c61\u5217\u8868\u7684\u8981\u7d20\u6570\u7ec4\u8f6c\u6362\u4e3a scikit-learn \u4f30\u8ba1\u5668\u4f7f\u7528\u7684 NumPy/SciPy \u8868\u793a\u5f62\u5f0f \u9884\u5904\u7406\u6570\u636e \u6807\u51c6\u5316\uff0c\u4e5f\u79f0\u53bb\u5747\u503c\u548c\u65b9\u5dee\u6309\u6bd4\u4f8b\u7f29\u653e \u5982\u679c\u67d0\u4e2a\u7279\u5f81\u7684\u65b9\u5dee\u6bd4\u5176\u4ed6\u7279\u5f81\u5927\u51e0\u4e2a\u6570\u91cf\u7ea7\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u5728\u5b66\u4e60\u7b97\u6cd5\u4e2d\u5360\u636e\u4e3b\u5bfc\u4f4d\u7f6e\uff0c\u5bfc\u81f4\u5b66\u4e60\u5668\u5e76\u4e0d\u80fd\u50cf\u6211\u4eec\u8bf4\u671f\u671b\u7684\u90a3\u6837\uff0c\u4ece\u5176\u4ed6\u7279\u5f81\u4e2d\u5b66\u4e60 \u4e00\u79cd\u6807\u51c6\u5316\u662f\u5c06\u7279\u5f81\u7f29\u653e\u5230\u7ed9\u5b9a\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u4e4b\u95f4\uff0c\u901a\u5e38\u5728\u96f6\u548c\u4e00\u4e4b\u95f4\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u7279\u5f81\u7684\u6700\u5927\u7edd\u5bf9\u503c\u8f6c\u6362\u81f3\u5355\u4f4d\u5927\u5c0f\u3002\u53ef\u4ee5\u5206\u522b\u4f7f\u7528 MinMaxScaler \u548c MaxAbsScaler \u5b9e\u73b0 \u4e2d\u5fc3\u5316\u7a00\u758f(\u77e9\u9635)\u6570\u636e\u4f1a\u7834\u574f\u6570\u636e\u7684\u7a00\u758f\u7ed3\u6784\uff0c\u56e0\u6b64\u5f88\u5c11\u6709\u4e00\u4e2a\u6bd4\u8f83\u660e\u667a\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u4f46\u662f\u7f29\u653e\u7a00\u758f\u8f93\u5165\u662f\u6709\u610f\u4e49\u7684\uff0c\u5c24\u5176\u662f\u5f53\u51e0\u4e2a\u7279\u5f81\u5728\u4e0d\u540c\u7684\u91cf\u7ea7\u8303\u56f4\u65f6 MaxAbsScaler \u4ee5\u53ca maxabs_scale \u662f\u4e13\u4e3a\u7f29\u653e\u6570\u636e\u800c\u8bbe\u8ba1\u7684\uff0c\u5e76\u4e14\u662f\u7f29\u653e\u6570\u636e\u7684\u63a8\u8350\u65b9\u6cd5 \u5982\u679c\u4f60\u7684\u6570\u636e\u5305\u542b\u8bb8\u591a\u5f02\u5e38\u503c\uff0c\u4f7f\u7528\u5747\u503c\u548c\u65b9\u5dee\u7f29\u653e\u53ef\u80fd\u5e76\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 robust_scale \u4ee5\u53ca RobustScaler \u4f5c\u4e3a\u66ff\u4ee3\u54c1\u3002\u5b83\u4eec\u5bf9\u4f60\u7684\u6570\u636e\u7684\u4e2d\u5fc3\u548c\u8303\u56f4\u4f7f\u7528\u66f4\u6709\u9c81\u68d2\u6027\u7684\u4f30\u8ba1 \u5f52\u4e00\u5316 \u662f \u7f29\u653e\u5355\u4e2a\u6837\u672c\u4ee5\u5177\u6709\u5355\u4f4d\u8303\u6570 \u7684\u8fc7\u7a0b \u4e8c\u503c\u5316 \u7279\u5f81\u4e8c\u503c\u5316 \u662f \u5c06\u6570\u503c\u7279\u5f81\u7528\u9608\u503c\u8fc7\u6ee4\u5f97\u5230\u5e03\u5c14\u503c \u7684\u8fc7\u7a0b \u5206\u7c7b\u7279\u5f81\u7f16\u7801 \u4e00\u79cd\u5c06\u5206\u7c7b\u7279\u5f81\u8f6c\u6362\u4e3a\u80fd\u591f\u88abscikit-learn\u4e2d\u6a21\u578b\u4f7f\u7528\u7684\u7f16\u7801\u662fone-of-K\u6216one-hot\u7f16\u7801\uff0c\u5728 OneHotEncoder \u4e2d\u5b9e\u73b0\u3002\u8fd9\u4e2a\u7c7b\u4f7f\u7528 m \u4e2a\u53ef\u80fd\u503c\u8f6c\u6362\u4e3a m \u503c\u5316\u7279\u5f81\uff0c\u5c06\u5206\u7c7b\u7279\u5f81\u7684\u6bcf\u4e2a\u5143\u7d20\u8f6c\u5316\u4e3a\u4e00\u4e2a\u503c \u5904\u7406\u7f3a\u5931\u6570\u503c\u7684\u4e00\u4e2a\u66f4\u597d\u7684\u7b56\u7565\u5c31\u662f\u4ece\u5df2\u6709\u7684\u6570\u636e\u63a8\u65ad\u51fa\u7f3a\u5931\u7684\u6570\u503c \u7f3a\u5931\u503c\u63d2\u8865 import numpy as np from sklearn.preprocessing import Imputer imp = Imputer(missing_values='NaN', strategy='mean', axis=0) imp.fit([[1, 2], [np.nan, 3], [7, 6]]) X = [[np.nan, 2], [6, np.nan], [7, 6]] print(imp.transform(X)) \u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u901a\u8fc7\u589e\u52a0\u4e00\u4e9b\u8f93\u5165\u6570\u636e\u7684\u975e\u7ebf\u6027\u7279\u5f81\u6765\u589e\u52a0\u6a21\u578b\u7684\u590d\u6742\u5ea6\u901a\u5e38\u662f\u6709\u6548\u7684\u3002\u4e00\u4e2a\u7b80\u5355\u901a\u7528\u7684\u529e\u6cd5\u662f\u4f7f\u7528\u591a\u9879\u5f0f\u7279\u5f81\uff0c\u8fd9\u53ef\u4ee5\u83b7\u5f97\u7279\u5f81\u7684\u66f4\u9ad8\u7ef4\u5ea6\u548c\u4e92\u76f8\u95f4\u5173\u7cfb\u7684\u9879\u3002\u8fd9\u5728 PolynomialFeatures \u4e2d\u5b9e\u73b0 import numpy as np from sklearn.preprocessing import PolynomialFeatures X = np.arange(6).reshape(3, 2) poly = PolynomialFeatures(2) poly.fit_transform(X) \u65e0\u76d1\u7763\u964d\u7ef4 PCA: \u4e3b\u6210\u4efd\u5206\u6790 \u968f\u673a\u6295\u5f71 \u7279\u5f81\u805a\u96c6 sklearn.random_projection \u6a21\u5757\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u4e14\u9ad8\u6548\u7387\u7684\u8ba1\u7b97\u65b9\u5f0f\u6765\u51cf\u5c11\u6570\u636e\u7ef4\u5ea6\uff0c\u901a\u8fc7\u727a\u7272\u4e00\u5b9a\u7684\u7cbe\u5ea6\uff08\u4f5c\u4e3a\u9644\u52a0\u53d8\u91cf\uff09\u6765\u52a0\u901f\u5904\u7406\u65f6\u95f4\u53ca\u66f4\u5c0f\u7684\u6a21\u578b \u6807\u7b7e\u4e8c\u503c\u5316 from sklearn import preprocessing lb = preprocessing.LabelBinarizer() lb.fit([1, 2, 6, 4, 2]) lb.transform([1, 6]) \u6807\u7b7e\u7f16\u7801 LabelEncoder \u662f\u4e00\u4e2a\u53ef\u4ee5\u7528\u6765\u5c06\u6807\u7b7e\u89c4\u8303\u5316\u7684\u5de5\u5177\u7c7b\uff0c\u5b83\u53ef\u4ee5\u5c06\u6807\u7b7e\u7684\u7f16\u7801\u503c\u8303\u56f4\u9650\u5b9a\u5728[0,n_classes-1] from sklearn import preprocessing le = preprocessing.LabelEncoder() le.fit([1, 2, 2, 6]) le.transform([1, 1, 2, 6]) le.inverse_transform([0, 0, 1, 2]) \u6570\u636e\u5de5\u5177 make_blobs \u548c make_classification \u901a\u8fc7\u5206\u914d\u6bcf\u4e2a\u7c7b\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u6b63\u6001\u5206\u5e03\u7684\u70b9\u7684\u7fa4\u96c6\u521b\u5efa\u7684\u591a\u7c7b\u6570\u636e\u96c6\u3002 make_blobs \u5bf9\u4e8e\u4e2d\u5fc3\u548c\u5404\u7c07\u7684\u6807\u51c6\u504f\u5dee\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u63a7\u5236\uff0c\u53ef\u7528\u4e8e\u6f14\u793a\u805a\u7c7b make_classification \u4e13\u95e8\u901a\u8fc7\u5f15\u5165\u76f8\u5173\u7684\uff0c\u5197\u4f59\u7684\u548c\u672a\u77e5\u7684\u566a\u97f3\u7279\u5f81\uff1b\u5c06\u9ad8\u65af\u96c6\u7fa4\u7684\u6bcf\u7c7b\u590d\u6742\u5316\uff1b\u5728\u7279\u5f81\u7a7a\u95f4\u4e0a\u8fdb\u884c\u7ebf\u6027\u53d8\u6362 make_regression \u4ea7\u751f\u7684\u56de\u5f52\u76ee\u6807\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u9009\u62e9\u7684\u7a00\u758f\u7ebf\u6027\u7ec4\u5408\u7684\u5177\u6709\u566a\u58f0\u7684\u968f\u673a\u7684\u7279\u5f81","title":"\u6a21\u578b\u9009\u62e9"},{"location":"\u673a\u5668\u5b66\u4e60/model/#_1","text":"\u4e3a\u4e86\u907f\u514d\u8fc7\u62df\u5408\uff0c\u5728\u8fdb\u884c\uff08\u76d1\u7763\uff09\u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u65f6\uff0c\u901a\u5e38\u53d6\u51fa\u90e8\u5206\u53ef\u5229\u7528\u6570\u636e\u4f5c\u4e3a test set\uff08\u6d4b\u8bd5\u6570\u636e\u96c6\uff09 X_test, y_test from sklearn.model_selection import train_test_split X_train, X_test, y_train, y_test = train_test_split( iris.data, iris.target, test_size=0.4, random_state=0) \u5f53\u8bc4\u4ef7\u4f30\u8ba1\u5668\u7684\u4e0d\u540c\u8bbe\u7f6e\uff08\u201dhyperparameters(\u8d85\u53c2\u6570)\u201d\uff09\u65f6\uff0c\u4f8b\u5982\u624b\u52a8\u4e3a SVM \u8bbe\u7f6e\u7684 C \u53c2\u6570\uff0c \u7531\u4e8e\u5728\u8bad\u7ec3\u96c6\u4e0a\uff0c\u901a\u8fc7\u8c03\u6574\u53c2\u6570\u8bbe\u7f6e\u4f7f\u4f30\u8ba1\u5668\u7684\u6027\u80fd\u8fbe\u5230\u4e86\u6700\u4f73\u72b6\u6001\uff1b\u4f46 \u5728\u6d4b\u8bd5\u96c6\u4e0a \u53ef\u80fd\u4f1a\u51fa\u73b0\u8fc7\u62df\u5408\u7684\u60c5\u51b5\u3002 \u6b64\u65f6\uff0c\u6d4b\u8bd5\u96c6\u4e0a\u7684\u4fe1\u606f\u53cd\u9988\u8db3\u4ee5\u98a0\u8986\u8bad\u7ec3\u597d\u7684\u6a21\u578b\uff0c\u8bc4\u4f30\u7684\u6307\u6807\u4e0d\u518d\u6709\u6548\u53cd\u6620\u51fa\u6a21\u578b\u7684\u6cdb\u5316\u6027\u80fd\u3002 \u4e3a\u4e86\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\uff0c\u8fd8\u5e94\u8be5\u51c6\u5907\u53e6\u4e00\u90e8\u5206\u88ab\u79f0\u4e3a \u201cvalidation set(\u9a8c\u8bc1\u96c6)\u201d \u7684\u6570\u636e\u96c6\uff0c \u6a21\u578b\u8bad\u7ec3\u5b8c\u6210\u4ee5\u540e\u5728\u9a8c\u8bc1\u96c6\u4e0a\u5bf9\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30\u3002 \u5f53\u9a8c\u8bc1\u96c6\u4e0a\u7684\u8bc4\u4f30\u5b9e\u9a8c\u6bd4\u8f83\u6210\u529f\u65f6\uff0c\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8fdb\u884c\u6700\u540e\u7684\u8bc4\u4f30 \u7136\u800c\uff0c\u901a\u8fc7\u5c06\u539f\u59cb\u6570\u636e\u5206\u4e3a3\u4e2a\u6570\u636e\u96c6\u5408\uff0c\u6211\u4eec\u5c31\u5927\u5927\u51cf\u5c11\u4e86\u53ef\u7528\u4e8e\u6a21\u578b\u5b66\u4e60\u7684\u6837\u672c\u6570\u91cf\uff0c \u5e76\u4e14\u5f97\u5230\u7684\u7ed3\u679c\u4f9d\u8d56\u4e8e\u96c6\u5408\u5bf9\uff08\u8bad\u7ec3\uff0c\u9a8c\u8bc1\uff09\u7684\u968f\u673a\u9009\u62e9 \u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7 \u4ea4\u53c9\u9a8c\u8bc1\uff08CV \u7f29\u5199\uff09 \u6765\u89e3\u51b3\u3002 \u4ea4\u53c9\u9a8c\u8bc1\u4ecd\u9700\u8981\u6d4b\u8bd5\u96c6\u505a\u6700\u540e\u7684\u6a21\u578b\u8bc4\u4f30\uff0c\u4f46\u4e0d\u518d\u9700\u8981\u9a8c\u8bc1\u96c6 k-fold \u5c06 k-1 \u4efd\u8bad\u7ec3\u96c6\u5b50\u96c6\u4f5c\u4e3a training data \uff08\u8bad\u7ec3\u96c6\uff09\u8bad\u7ec3\u6a21\u578b\uff0c \u5c06\u5269\u4f59\u7684 1 \u4efd\u8bad\u7ec3\u96c6\u5b50\u96c6\u4f5c\u4e3a\u9a8c\u8bc1\u96c6\u7528\u4e8e\u6a21\u578b\u9a8c\u8bc1\uff08\u4e5f\u5c31\u662f\u5229\u7528\u8be5\u6570\u636e\u96c6\u8ba1\u7b97\u6a21\u578b\u7684\u6027\u80fd\u6307\u6807\uff0c\u4f8b\u5982\u51c6\u786e\u7387\uff09 k-\u6298\u4ea4\u53c9\u9a8c\u8bc1\u5f97\u51fa\u7684\u6027\u80fd\u6307\u6807\u662f\u5faa\u73af\u8ba1\u7b97\u4e2d\u6bcf\u4e2a\u503c\u7684\u5e73\u5747\u503c \u8be5\u65b9\u6cd5\u867d\u7136\u8ba1\u7b97\u4ee3\u4ef7\u5f88\u9ad8\uff0c\u4f46\u662f\u5b83\u4e0d\u4f1a\u6d6a\u8d39\u592a\u591a\u7684\u6570\u636e\uff08\u5982\u56fa\u5b9a\u4efb\u610f\u6d4b\u8bd5\u96c6\u7684\u60c5\u51b5\u4e00\u6837\uff09\uff0c \u5728\u5904\u7406\u6837\u672c\u6570\u636e\u96c6\u8f83\u5c11\u7684\u95ee\u9898\uff08\u4f8b\u5982\uff0c\u9006\u5411\u63a8\u7406\uff09\u65f6\u6bd4\u8f83\u6709\u4f18\u52bf \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5728\u4f30\u8ba1\u5668\u548c\u6570\u636e\u96c6\u4e0a\u8c03\u7528 cross_val_score \u8f85\u52a9\u51fd\u6570 Model evaluation: quantifying the quality of predictions \u2014 scikit-learn 0.19.1 documentation from sklearn.model_selection import cross_val_score scores = cross_val_score(clf, iris.data, iris.target, cv=5) # \u4f1a\u5f97\u5230 5 \u4e2a\u5206\u6570 # \u8bc4\u5206\u4f30\u8ba1\u7684\u5e73\u5747\u5f97\u5206\u548c 95% \u7f6e\u4fe1\u533a\u95f4 print(\"Accuracy: %0.2f (+/- %0.2f)\" % (scores.mean(), scores.std() * 2)) \u5176\u4ed6\u65b9\u5f0f from sklearn.model_selection import ShuffleSplit n_samples = iris.data.shape[0] cv = ShuffleSplit(n_splits=3, test_size=0.3, random_state=0) cross_val_score(clf, iris.data, iris.target, cv=cv) \u4fdd\u7559\u6570\u636e\u7684\u6570\u636e\u8f6c\u6362 \u4e0d\u53ef\u4ee5\u5728\u4e00\u5f00\u59cb\u5c31\u5bf9 \u6240\u6709\u7684\u6570\u636e\u8fdb\u884c\u8f6c\u6362 from sklearn import preprocessing X_train, X_test, y_train, y_test = train_test_split( iris.data, iris.target, test_size=0.4, random_state=0) # \u5e94\u5f53\u4fdd\u5b58 scaler = preprocessing.StandardScaler().fit(X_train) X_train_transformed = scaler.transform(X_train) clf = svm.SVC(C=1).fit(X_train_transformed, y_train) # \u5e94\u7528\u5230\u6d4b\u8bd5\u96c6\u4e0a X_test_transformed = scaler.transform(X_test) clf.score(X_test_transformed, y_test) \u5176\u4ed6\u65b9\u5f0f from sklearn.pipeline import make_pipeline clf = make_pipeline(preprocessing.StandardScaler(), svm.SVC(C=1)) cross_val_score(clf, iris.data, iris.target, cv=cv) cross_validate \u51fd\u6570\u4e0e cross_val_score \u5728\u4e0b\u9762\u7684\u4e24\u4e2a\u65b9\u9762\u6709\u4e9b\u4e0d\u540c \u5b83\u5141\u8bb8\u6307\u5b9a\u591a\u4e2a\u6307\u6807\u8fdb\u884c\u8bc4\u4f30. \u9664\u4e86\u6d4b\u8bd5\u5f97\u5206\u4e4b\u5916\uff0c\u5b83\u8fd8\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u8bad\u7ec3\u5f97\u5206\uff0c\u62df\u5408\u6b21\u6570\uff0c score-times \uff08\u5f97\u5206\u6b21\u6570\uff09\u7684\u4e00\u4e2a\u5b57\u5178 from sklearn.model_selection import cross_validate from sklearn.metrics import recall_score scoring = ['precision_macro', 'recall_macro'] scores = cross_validate(clf, iris.data, iris.target, scoring=scoring, cv=5, return_train_score=False) # other from sklearn.metrics.scorer import make_scorer scoring = {'prec_macro': 'precision_macro', 'rec_micro': make_scorer(recall_score, average='macro')} # \u5355\u4e00\u6307\u6807 scores = cross_validate(clf, iris.data, iris.target, scoring='precision_macro') \u9664\u4e86\u8fd4\u56de\u7ed3\u679c\u4e0d\u540c\uff0c\u51fd\u6570 cross_val_predict \u5177\u6709\u548c cross_val_score \u76f8\u540c\u7684\u63a5\u53e3\uff0c \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f93\u5165\u7684\u5143\u7d20\uff0c\u5982\u679c\u5176\u5728\u6d4b\u8bd5\u96c6\u5408\u4e2d\uff0c\u5c06\u4f1a\u5f97\u5230\u9884\u6d4b\u7ed3\u679c","title":"\u6a21\u578b\u9009\u62e9\u4e0e\u8bc4\u4f30"},{"location":"\u673a\u5668\u5b66\u4e60/model/#_2","text":"K-fold RepeatedKFold \u5f53\u9700\u8981\u8fd0\u884c\u65f6\u53ef\u4ee5\u4f7f\u7528\u5b83 KFold n \u6b21\uff0c\u5728\u6bcf\u6b21\u91cd\u590d\u4e2d\u4ea7\u751f\u4e0d\u540c\u7684\u5206\u5272 LeaveOneOut \u6bcf\u4e2a\u5b66\u4e60\u96c6\u90fd\u662f\u901a\u8fc7\u9664\u4e86\u4e00\u4e2a\u6837\u672c\u4ee5\u5916\u7684\u6240\u6709\u6837\u672c\u521b\u5efa\u7684\uff0c\u6d4b\u8bd5\u96c6\u662f\u88ab\u7559\u4e0b\u7684\u6837\u672c\uff0c \u4e0d\u4f1a\u6d6a\u8d39\u592a\u591a\u6570\u636e LOO \u7ecf\u5e38\u5bfc\u81f4\u8f83\u9ad8\u7684\u65b9\u5dee\u4f5c\u4e3a\u6d4b\u8bd5\u8bef\u5dee\u7684\u4f30\u8ba1\u5668 5-fold \u6216\u8005 10-fold \u4ea4\u53c9\u9a8c\u8bc1\u5e94\u8be5\u4f18\u4e8e LOO LeavePOut \u4e0e LeaveOneOut \u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u4e3a\u5b83\u901a\u8fc7\u4ece\u6574\u4e2a\u96c6\u5408\u4e2d\u5220\u9664 p \u4e2a\u6837\u672c\u6765\u521b\u5efa\u6240\u6709\u53ef\u80fd\u7684 \u8bad\u7ec3/\u6d4b\u8bd5\u96c6, p>1 \u65f6\uff0c \u6d4b\u8bd5\u96c6\u4f1a\u91cd\u53e0 ShuffleSplit \u8fed\u4ee3\u5668 \u5c06\u4f1a\u751f\u6210\u4e00\u4e2a\u7528\u6237\u7ed9\u5b9a\u6570\u91cf\u7684\u72ec\u7acb\u7684\u8bad\u7ec3/\u6d4b\u8bd5\u6570\u636e\u5212\u5206\u3002\u6837\u4f8b\u9996\u5148\u88ab\u6253\u6563\u7136\u540e\u5212\u5206\u4e3a\u4e00\u5bf9\u8bad\u7ec3\u6d4b\u8bd5\u96c6\u5408 ShuffleSplit \u53ef\u4ee5\u66ff\u4ee3 KFold \u4ea4\u53c9\u9a8c\u8bc1\uff0c\u56e0\u4e3a\u5176\u63d0\u4f9b\u4e86\u7ec6\u81f4\u7684\u8bad\u7ec3 / \u6d4b\u8bd5\u5212\u5206\u7684 \u6570\u91cf\u548c\u6837\u4f8b\u6240\u5360\u7684\u6bd4\u4f8b\u7b49\u7684\u63a7\u5236 \u4e00\u4e9b\u5206\u7c7b\u95ee\u9898\u5728\u76ee\u6807\u7c7b\u522b\u7684\u5206\u5e03\u4e0a\u53ef\u80fd\u8868\u73b0\u51fa\u5f88\u5927\u7684\u4e0d\u5e73\u8861\u6027\uff1a\u4f8b\u5982\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u6bd4\u6b63\u6837\u672c\u591a\u6570\u500d\u7684\u8d1f\u6837\u672c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u91c7\u7528\u5982 StratifiedKFold \u548c StratifiedShuffleSplit \u4e2d\u5b9e\u73b0\u7684\u5206\u5c42\u62bd\u6837\u65b9\u6cd5\uff0c\u786e\u4fdd\u76f8\u5bf9\u7684\u7c7b\u522b\u9891\u7387\u5728\u6bcf\u4e2a\u8bad\u7ec3\u548c\u9a8c\u8bc1 fold \u4e2d\u5927\u81f4\u76f8\u540c StratifiedKFold \u662f k-fold \u7684\u53d8\u79cd\uff0c\u4f1a\u8fd4\u56de stratified\uff08\u5206\u5c42\uff09 \u7684\u6298\u53e0\uff1a\u6bcf\u4e2a\u5c0f\u96c6\u5408\u4e2d\uff0c \u5404\u4e2a\u7c7b\u522b\u7684\u6837\u4f8b\u6bd4\u4f8b\u5927\u81f4\u548c\u5b8c\u6574\u6570\u636e\u96c6\u4e2d\u76f8\u540c StratifiedShuffleSplit \u662f ShuffleSplit \u7684\u4e00\u4e2a\u53d8\u79cd\uff0c\u4f1a\u8fd4\u56de\u76f4\u63a5\u7684\u5212\u5206 GroupKFold \u662f k-fold \u7684\u53d8\u4f53\uff0c\u5b83\u786e\u4fdd\u540c\u4e00\u4e2a group \u5728\u6d4b\u8bd5\u548c\u8bad\u7ec3\u96c6\u4e2d\u90fd\u4e0d\u88ab\u8868\u793a from sklearn.model_selection import GroupKFold X = [0.1, 0.2, 2.2, 2.4, 2.3, 4.55, 5.8, 8.8, 9, 10] y = [\"a\", \"b\", \"b\", \"b\", \"c\", \"c\", \"c\", \"d\", \"d\", \"d\"] groups = [1, 1, 1, 2, 2, 2, 3, 3, 3, 3] gkf = GroupKFold(n_splits=3) for train, test in gkf.split(X, y, groups=groups): print(\"%s %s\" % (train, test)) LeaveOneGroupOut LeavePGroupsOut GroupShuffleSplit \u8fed\u4ee3\u5668\u662f ShuffleSplit \u548c LeavePGroupsOut \u7684\u7ec4\u5408\uff0c\u5b83\u751f\u6210\u4e00\u4e2a\u968f\u673a\u5212\u5206\u5206\u533a\u7684\u5e8f\u5217\uff0c\u5176\u4e2d\u4e3a\u6bcf\u4e2a\u5206\u7ec4\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7ec4\u5b50\u96c6 TimeSeriesSplit \u662f k-fold \u7684\u4e00\u4e2a\u53d8\u4f53\uff0c\u5b83\u9996\u5148\u8fd4\u56de k \u6298\u4f5c\u4e3a\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5e76\u4e14 (k+1) \u6298\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u96c6 from sklearn.model_selection import TimeSeriesSplit X = np.array([[1, 2], [3, 4], [1, 2], [3, 4], [1, 2], [3, 4]]) y = np.array([1, 2, 3, 4, 5, 6]) tscv = TimeSeriesSplit(n_splits=3) print(tscv) for train, test in tscv.split(X): print(\"%s %s\" % (train, test)) \u5982\u679c\u6570\u636e\u7684\u987a\u5e8f\u4e0d\u662f\u4efb\u610f\u7684\uff08\u6bd4\u5982\u8bf4\uff0c\u76f8\u540c\u6807\u7b7e\u7684\u6837\u4f8b\u8fde\u7eed\u51fa\u73b0\uff09\uff0c\u4e3a\u4e86\u83b7\u5f97\u6709\u610f\u4e49\u7684\u4ea4\u53c9\u9a8c\u8bc1\u7ed3\u679c\uff0c\u9996\u5148\u5bf9\u5176\u8fdb\u884c \u6253\u6563\u662f\u5f88\u6709\u5fc5\u8981\u7684. \u7136\u800c\uff0c\u5f53\u6837\u4f8b\u4e0d\u662f\u72ec\u7acb\u540c\u5206\u5e03\u65f6\u6253\u6563\u5219\u662f\u4e0d\u53ef\u884c\u7684","title":"\u4ea4\u53c9\u9a8c\u8bc1\u8fed\u4ee3\u5668"},{"location":"\u673a\u5668\u5b66\u4e60/model/#_3","text":"\u8d85\u53c2\u6570\uff0c\u5373\u4e0d\u76f4\u63a5\u5728\u4f30\u8ba1\u5668\u5185\u5b66\u4e60\u7684\u53c2\u6570\u3002\u5728 scikit-learn \u5305\u4e2d\uff0c\u5b83\u4eec\u4f5c\u4e3a\u4f30\u8ba1\u5668\u7c7b\u4e2d\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u8fdb\u884c\u4f20\u9012 \u641c\u7d22\u8d85\u53c2\u6570\u7a7a\u95f4\u4ee5\u4fbf\u83b7\u5f97\u6700\u597d \u4ea4\u53c9\u9a8c\u8bc1 \u5206\u6570\u7684\u65b9\u6cd5\u662f\u53ef\u80fd\u7684\u800c\u4e14\u662f\u503c\u5f97\u63d0\u5021\u7684 \u641c\u7d22\u5305\u62ec: \u4f30\u8ba1\u5668(\u56de\u5f52\u5668\u6216\u5206\u7c7b\u5668) \u53c2\u6570\u7a7a\u95f4 \u641c\u5bfb\u6216\u91c7\u6837\u5019\u9009\u7684\u65b9\u6cd5 \u4ea4\u53c9\u9a8c\u8bc1\u65b9\u6848 \u8ba1\u5206\u51fd\u6570 GridSearchCV \u8003\u8651\u4e86\u6240\u6709\u53c2\u6570\u7ec4\u5408; \u800c RandomizedSearchCV \u53ef\u4ee5\u4ece\u5177\u6709\u6307\u5b9a\u5206\u5e03\u7684\u53c2\u6570\u7a7a\u95f4\u4e2d\u62bd\u53d6\u7ed9\u5b9a\u6570\u91cf\u7684\u5019\u9009 \u9ed8\u8ba4\u60c5\u51b5\u4e0b, \u53c2\u6570\u641c\u7d22\u4f7f\u7528\u4f30\u8ba1\u5668\u7684\u8bc4\u5206\u51fd\u6570\u6765\u8bc4\u4f30\uff08\u8861\u91cf\uff09\u53c2\u6570\u8bbe\u7f6e Log loss\uff0c\u53c8\u88ab\u79f0\u4e3a logistic regression loss\uff08logistic \u56de\u5f52\u635f\u5931\uff09\u6216\u8005 cross-entropy loss\uff08\u4ea4\u53c9\u71b5\u635f\u5931\uff09 \u5b9a\u4e49\u5728 probability estimates \uff08\u6982\u7387\u4f30\u8ba1) \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 Python \u7684\u5185\u7f6e\u6301\u4e45\u5316\u6a21\u578b\u5c06\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u4fdd\u5b58\u5728 scikit \u4e2d, \u5b83\u540d\u4e3a pickle","title":"\u8d85\u53c2\u6570\u8c03\u6574"},{"location":"\u673a\u5668\u5b66\u4e60/model/#_4","text":"from sklearn.externals import joblib joblib.dump(clf, 'filename.pkl') clf = joblib.load('filename.pkl') sklearn \u7684\u6a21\u578b\u901a\u5e38\u4f7f\u7528 joblib \u66f4\u597d","title":"\u6a21\u578b\u6301\u4e45\u5316"},{"location":"\u673a\u5668\u5b66\u4e60/model/#pipeline","text":"Pipeline \u4f7f\u7528\u4e00\u7cfb\u5217 (key, value) \u952e\u503c\u5bf9\u6765\u6784\u5efa,\u5176\u4e2d key \u662f\u4f60\u7ed9\u8fd9\u4e2a\u6b65\u9aa4\u8d77\u7684\u540d\u5b57\uff0c value \u662f\u4e00\u4e2a\u8bc4\u4f30\u5668\u5bf9\u8c61 from sklearn.pipeline import Pipeline from sklearn.svm import SVC from sklearn.decomposition import PCA estimators = [('reduce_dim', PCA()), ('clf', SVC())] pipe = Pipeline(estimators) \u529f\u80fd\u51fd\u6570 make_pipeline \u662f\u6784\u5efa\u7ba1\u9053\u7684\u7f29\u5199; \u5b83\u63a5\u6536\u591a\u4e2a\u8bc4\u4f30\u5668\u5e76\u8fd4\u56de\u4e00\u4e2a\u7ba1\u9053\uff0c\u81ea\u52a8\u586b\u5145\u8bc4\u4f30\u5668\u540d from sklearn.pipeline import make_pipeline from sklearn.naive_bayes import MultinomialNB from sklearn.preprocessing import Binarizer make_pipeline(Binarizer(), MultinomialNB()) \u5bf9\u7ba1\u9053\u8c03\u7528 fit \u65b9\u6cd5\u7684\u6548\u679c\u8ddf\u4f9d\u6b21\u5bf9\u6bcf\u4e2a\u8bc4\u4f30\u5668\u8c03\u7528 fit \u65b9\u6cd5\u4e00\u6837 FeatureUnion \u5408\u5e76\u4e86\u591a\u4e2a\u8f6c\u6362\u5668\u5bf9\u8c61\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u8f6c\u6362\u5668\uff0c\u8be5\u8f6c\u6362\u5668\u5408\u5e76\u4e86\u4ed6\u4eec\u7684\u8f93\u51fa\u3002\u4e00\u4e2a FeatureUnion \u53ef\u4ee5\u63a5\u6536\u591a\u4e2a\u8f6c\u6362\u5668\u5bf9\u8c61\u3002\u5728\u9002\u914d\u671f\u95f4\uff0c\u6bcf\u4e2a\u8f6c\u6362\u5668\u90fd\u5355\u72ec\u7684\u548c\u6570\u636e\u9002\u914d\u3002 \u5bf9\u4e8e\u8f6c\u6362\u6570\u636e\uff0c\u8f6c\u6362\u5668\u53ef\u4ee5\u5e76\u53d1\u4f7f\u7528\uff0c\u4e14\u8f93\u51fa\u7684\u6837\u672c\u5411\u91cf\u88ab\u8fde\u63a5\u6210\u66f4\u5927\u7684\u5411\u91cf \u7c7b DictVectorizer \u53ef\u7528\u4e8e\u5c06\u6807\u51c6\u7684Python\u5b57\u5178\uff08dict\uff09\u5bf9\u8c61\u5217\u8868\u7684\u8981\u7d20\u6570\u7ec4\u8f6c\u6362\u4e3a scikit-learn \u4f30\u8ba1\u5668\u4f7f\u7528\u7684 NumPy/SciPy \u8868\u793a\u5f62\u5f0f","title":"Pipeline"},{"location":"\u673a\u5668\u5b66\u4e60/model/#_5","text":"\u6807\u51c6\u5316\uff0c\u4e5f\u79f0\u53bb\u5747\u503c\u548c\u65b9\u5dee\u6309\u6bd4\u4f8b\u7f29\u653e \u5982\u679c\u67d0\u4e2a\u7279\u5f81\u7684\u65b9\u5dee\u6bd4\u5176\u4ed6\u7279\u5f81\u5927\u51e0\u4e2a\u6570\u91cf\u7ea7\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u5728\u5b66\u4e60\u7b97\u6cd5\u4e2d\u5360\u636e\u4e3b\u5bfc\u4f4d\u7f6e\uff0c\u5bfc\u81f4\u5b66\u4e60\u5668\u5e76\u4e0d\u80fd\u50cf\u6211\u4eec\u8bf4\u671f\u671b\u7684\u90a3\u6837\uff0c\u4ece\u5176\u4ed6\u7279\u5f81\u4e2d\u5b66\u4e60 \u4e00\u79cd\u6807\u51c6\u5316\u662f\u5c06\u7279\u5f81\u7f29\u653e\u5230\u7ed9\u5b9a\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u4e4b\u95f4\uff0c\u901a\u5e38\u5728\u96f6\u548c\u4e00\u4e4b\u95f4\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u7279\u5f81\u7684\u6700\u5927\u7edd\u5bf9\u503c\u8f6c\u6362\u81f3\u5355\u4f4d\u5927\u5c0f\u3002\u53ef\u4ee5\u5206\u522b\u4f7f\u7528 MinMaxScaler \u548c MaxAbsScaler \u5b9e\u73b0 \u4e2d\u5fc3\u5316\u7a00\u758f(\u77e9\u9635)\u6570\u636e\u4f1a\u7834\u574f\u6570\u636e\u7684\u7a00\u758f\u7ed3\u6784\uff0c\u56e0\u6b64\u5f88\u5c11\u6709\u4e00\u4e2a\u6bd4\u8f83\u660e\u667a\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u4f46\u662f\u7f29\u653e\u7a00\u758f\u8f93\u5165\u662f\u6709\u610f\u4e49\u7684\uff0c\u5c24\u5176\u662f\u5f53\u51e0\u4e2a\u7279\u5f81\u5728\u4e0d\u540c\u7684\u91cf\u7ea7\u8303\u56f4\u65f6 MaxAbsScaler \u4ee5\u53ca maxabs_scale \u662f\u4e13\u4e3a\u7f29\u653e\u6570\u636e\u800c\u8bbe\u8ba1\u7684\uff0c\u5e76\u4e14\u662f\u7f29\u653e\u6570\u636e\u7684\u63a8\u8350\u65b9\u6cd5 \u5982\u679c\u4f60\u7684\u6570\u636e\u5305\u542b\u8bb8\u591a\u5f02\u5e38\u503c\uff0c\u4f7f\u7528\u5747\u503c\u548c\u65b9\u5dee\u7f29\u653e\u53ef\u80fd\u5e76\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 robust_scale \u4ee5\u53ca RobustScaler \u4f5c\u4e3a\u66ff\u4ee3\u54c1\u3002\u5b83\u4eec\u5bf9\u4f60\u7684\u6570\u636e\u7684\u4e2d\u5fc3\u548c\u8303\u56f4\u4f7f\u7528\u66f4\u6709\u9c81\u68d2\u6027\u7684\u4f30\u8ba1 \u5f52\u4e00\u5316 \u662f \u7f29\u653e\u5355\u4e2a\u6837\u672c\u4ee5\u5177\u6709\u5355\u4f4d\u8303\u6570 \u7684\u8fc7\u7a0b","title":"\u9884\u5904\u7406\u6570\u636e"},{"location":"\u673a\u5668\u5b66\u4e60/model/#_6","text":"\u7279\u5f81\u4e8c\u503c\u5316 \u662f \u5c06\u6570\u503c\u7279\u5f81\u7528\u9608\u503c\u8fc7\u6ee4\u5f97\u5230\u5e03\u5c14\u503c \u7684\u8fc7\u7a0b \u5206\u7c7b\u7279\u5f81\u7f16\u7801 \u4e00\u79cd\u5c06\u5206\u7c7b\u7279\u5f81\u8f6c\u6362\u4e3a\u80fd\u591f\u88abscikit-learn\u4e2d\u6a21\u578b\u4f7f\u7528\u7684\u7f16\u7801\u662fone-of-K\u6216one-hot\u7f16\u7801\uff0c\u5728 OneHotEncoder \u4e2d\u5b9e\u73b0\u3002\u8fd9\u4e2a\u7c7b\u4f7f\u7528 m \u4e2a\u53ef\u80fd\u503c\u8f6c\u6362\u4e3a m \u503c\u5316\u7279\u5f81\uff0c\u5c06\u5206\u7c7b\u7279\u5f81\u7684\u6bcf\u4e2a\u5143\u7d20\u8f6c\u5316\u4e3a\u4e00\u4e2a\u503c \u5904\u7406\u7f3a\u5931\u6570\u503c\u7684\u4e00\u4e2a\u66f4\u597d\u7684\u7b56\u7565\u5c31\u662f\u4ece\u5df2\u6709\u7684\u6570\u636e\u63a8\u65ad\u51fa\u7f3a\u5931\u7684\u6570\u503c","title":"\u4e8c\u503c\u5316"},{"location":"\u673a\u5668\u5b66\u4e60/model/#_7","text":"import numpy as np from sklearn.preprocessing import Imputer imp = Imputer(missing_values='NaN', strategy='mean', axis=0) imp.fit([[1, 2], [np.nan, 3], [7, 6]]) X = [[np.nan, 2], [6, np.nan], [7, 6]] print(imp.transform(X)) \u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u901a\u8fc7\u589e\u52a0\u4e00\u4e9b\u8f93\u5165\u6570\u636e\u7684\u975e\u7ebf\u6027\u7279\u5f81\u6765\u589e\u52a0\u6a21\u578b\u7684\u590d\u6742\u5ea6\u901a\u5e38\u662f\u6709\u6548\u7684\u3002\u4e00\u4e2a\u7b80\u5355\u901a\u7528\u7684\u529e\u6cd5\u662f\u4f7f\u7528\u591a\u9879\u5f0f\u7279\u5f81\uff0c\u8fd9\u53ef\u4ee5\u83b7\u5f97\u7279\u5f81\u7684\u66f4\u9ad8\u7ef4\u5ea6\u548c\u4e92\u76f8\u95f4\u5173\u7cfb\u7684\u9879\u3002\u8fd9\u5728 PolynomialFeatures \u4e2d\u5b9e\u73b0 import numpy as np from sklearn.preprocessing import PolynomialFeatures X = np.arange(6).reshape(3, 2) poly = PolynomialFeatures(2) poly.fit_transform(X)","title":"\u7f3a\u5931\u503c\u63d2\u8865"},{"location":"\u673a\u5668\u5b66\u4e60/model/#_8","text":"PCA: \u4e3b\u6210\u4efd\u5206\u6790 \u968f\u673a\u6295\u5f71 \u7279\u5f81\u805a\u96c6 sklearn.random_projection \u6a21\u5757\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u4e14\u9ad8\u6548\u7387\u7684\u8ba1\u7b97\u65b9\u5f0f\u6765\u51cf\u5c11\u6570\u636e\u7ef4\u5ea6\uff0c\u901a\u8fc7\u727a\u7272\u4e00\u5b9a\u7684\u7cbe\u5ea6\uff08\u4f5c\u4e3a\u9644\u52a0\u53d8\u91cf\uff09\u6765\u52a0\u901f\u5904\u7406\u65f6\u95f4\u53ca\u66f4\u5c0f\u7684\u6a21\u578b","title":"\u65e0\u76d1\u7763\u964d\u7ef4"},{"location":"\u673a\u5668\u5b66\u4e60/model/#_9","text":"from sklearn import preprocessing lb = preprocessing.LabelBinarizer() lb.fit([1, 2, 6, 4, 2]) lb.transform([1, 6])","title":"\u6807\u7b7e\u4e8c\u503c\u5316"},{"location":"\u673a\u5668\u5b66\u4e60/model/#_10","text":"LabelEncoder \u662f\u4e00\u4e2a\u53ef\u4ee5\u7528\u6765\u5c06\u6807\u7b7e\u89c4\u8303\u5316\u7684\u5de5\u5177\u7c7b\uff0c\u5b83\u53ef\u4ee5\u5c06\u6807\u7b7e\u7684\u7f16\u7801\u503c\u8303\u56f4\u9650\u5b9a\u5728[0,n_classes-1] from sklearn import preprocessing le = preprocessing.LabelEncoder() le.fit([1, 2, 2, 6]) le.transform([1, 1, 2, 6]) le.inverse_transform([0, 0, 1, 2])","title":"\u6807\u7b7e\u7f16\u7801"},{"location":"\u673a\u5668\u5b66\u4e60/model/#_11","text":"make_blobs \u548c make_classification \u901a\u8fc7\u5206\u914d\u6bcf\u4e2a\u7c7b\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u6b63\u6001\u5206\u5e03\u7684\u70b9\u7684\u7fa4\u96c6\u521b\u5efa\u7684\u591a\u7c7b\u6570\u636e\u96c6\u3002 make_blobs \u5bf9\u4e8e\u4e2d\u5fc3\u548c\u5404\u7c07\u7684\u6807\u51c6\u504f\u5dee\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u63a7\u5236\uff0c\u53ef\u7528\u4e8e\u6f14\u793a\u805a\u7c7b make_classification \u4e13\u95e8\u901a\u8fc7\u5f15\u5165\u76f8\u5173\u7684\uff0c\u5197\u4f59\u7684\u548c\u672a\u77e5\u7684\u566a\u97f3\u7279\u5f81\uff1b\u5c06\u9ad8\u65af\u96c6\u7fa4\u7684\u6bcf\u7c7b\u590d\u6742\u5316\uff1b\u5728\u7279\u5f81\u7a7a\u95f4\u4e0a\u8fdb\u884c\u7ebf\u6027\u53d8\u6362 make_regression \u4ea7\u751f\u7684\u56de\u5f52\u76ee\u6807\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u9009\u62e9\u7684\u7a00\u758f\u7ebf\u6027\u7ec4\u5408\u7684\u5177\u6709\u566a\u58f0\u7684\u968f\u673a\u7684\u7279\u5f81","title":"\u6570\u636e\u5de5\u5177"},{"location":"\u673a\u5668\u5b66\u4e60/sklearnStruct/","text":"sklearn \u7684\u7ed3\u6784 autuanliu@163.com datasets 'clear_data_home', 'dump_svmlight_file', 'fetch_20newsgroups', 'fetch_20newsgroups_vectorized', 'fetch_lfw_pairs', 'fetch_lfw_people', 'fetch_mldata', 'fetch_olivetti_faces', 'fetch_species_distributions', 'fetch_california_housing', 'fetch_covtype', 'fetch_rcv1', 'fetch_kddcup99', 'get_data_home', 'load_boston', 'load_diabetes', 'load_digits', 'load_files', 'load_iris', 'load_breast_cancer', 'load_linnerud', 'load_mlcomp', 'load_sample_image', 'load_sample_images', 'load_svmlight_file', 'load_svmlight_files', 'load_wine', 'make_biclusters', 'make_blobs', 'make_circles', 'make_classification', 'make_checkerboard', 'make_friedman1', 'make_friedman2', 'make_friedman3', 'make_gaussian_quantiles', 'make_hastie_10_2', 'make_low_rank_matrix', 'make_moons', 'make_multilabel_classification', 'make_regression', 'make_s_curve', 'make_sparse_coded_signal', 'make_sparse_spd_matrix', 'make_sparse_uncorrelated', 'make_spd_matrix', 'make_swiss_roll', 'mldata_filename' preprossing 'Binarizer', 'FunctionTransformer', 'Imputer', 'KernelCenterer', 'LabelBinarizer', 'LabelEncoder', 'MultiLabelBinarizer', 'MinMaxScaler', 'MaxAbsScaler', 'QuantileTransformer', 'Normalizer', 'OneHotEncoder', 'CategoricalEncoder', 'PowerTransformer', 'RobustScaler', 'StandardScaler', 'TransformedTargetRegressor', 'add_dummy_feature', 'PolynomialFeatures', 'binarize', 'normalize', 'scale', 'robust_scale', 'maxabs_scale', 'minmax_scale', 'label_binarize', 'quantile_transform', 'power_transform' feature_selection 'GenericUnivariateSelect', 'RFE', 'RFECV', 'SelectFdr', 'SelectFpr', 'SelectFwe', 'SelectKBest', 'SelectFromModel', 'SelectPercentile', 'VarianceThreshold', 'chi2', 'f_classif', 'f_oneway', 'f_regression', 'mutual_info_classif', 'mutual_info_regression' feature_extraction 'DictVectorizer' 'image' 'img_to_graph' 'grid_to_graph' 'text' 'FeatureHasher' decomposition 'DictionaryLearning', 'FastICA', 'IncrementalPCA', 'KernelPCA', 'MiniBatchDictionaryLearning', 'MiniBatchSparsePCA', 'NMF', 'PCA', 'RandomizedPCA', 'SparseCoder', 'SparsePCA', 'dict_learning', 'dict_learning_online', 'fastica', 'non_negative_factorization', 'randomized_svd', 'sparse_encode', 'FactorAnalysis', 'TruncatedSVD', 'LatentDirichletAllocation' cluster 'AffinityPropagation', 'AgglomerativeClustering', 'Birch', 'DBSCAN', 'KMeans', 'FeatureAgglomeration', 'MeanShift', 'MiniBatchKMeans', 'SpectralClustering', 'affinity_propagation', 'dbscan', 'estimate_bandwidth', 'get_bin_seeds', 'k_means', 'linkage_tree', 'mean_shift', 'spectral_clustering', 'ward_tree', 'SpectralBiclustering', 'SpectralCoclustering' ensemble \"BaseEnsemble\" \"RandomForestClassifier\" \"RandomForestRegressor\" \"RandomTreesEmbedding\" \"ExtraTreesClassifier\" \"ExtraTreesRegressor\" \"BaggingClassifier\" \"BaggingRegressor\" \"IsolationFores* GradientBoostingClassifier\" \"GradientBoostingRegressor\" \"AdaBoostClassifier\" \"AdaBoostRegressor\" \"VotingClassifier\" \"bagging\", \"forest\" \"gradient_boosting\" \"partial_dependence\" \"weight_boosting\" neighbors 'BallTree', 'DistanceMetric', 'KDTree', 'KNeighborsClassifier', 'KNeighborsRegressor', 'NearestCentroid', 'NearestNeighbors', 'RadiusNeighborsClassifier', 'RadiusNeighborsRegressor', 'kneighbors_graph', 'radius_neighbors_graph', 'KernelDensity', 'LSHForest', 'LocalOutlierFactor' neural_network \"BernoulliRBM\", \"MLPClassifier\", \"MLPRegressor\" semi_supervised 'LabelPropagation' 'LabelSpreading' svm 'LinearSVC', 'LinearSVR', 'NuSVC', 'NuSVR', 'OneClassSVM', 'SVC', 'SVR', 'l1_min_c', 'liblinear', 'libsvm', 'libsvm_sparse' tree \"DecisionTreeClassifier\" \"DecisionTreeRegressor\" \"ExtraTreeClassifier\" \"ExtraTreeRegressor\" \"export_graphviz\" linear_model 'ARDRegression', 'BayesianRidge', 'ElasticNet', 'ElasticNetCV', 'Hinge', 'Huber', 'HuberRegressor', 'Lars', 'LarsCV', 'Lasso', 'LassoCV', 'LassoLars', 'LassoLarsCV', 'LassoLarsIC', 'LinearRegression', 'Log', 'LogisticRegression', 'LogisticRegressionCV', 'ModifiedHuber', 'MultiTaskElasticNet', 'MultiTaskElasticNetCV', 'MultiTaskLasso', 'MultiTaskLassoCV', 'OrthogonalMatchingPursuit', 'OrthogonalMatchingPursuitCV', 'PassiveAggressiveClassifier', 'PassiveAggressiveRegressor', 'Perceptron', 'RandomizedLasso', 'RandomizedLogisticRegression', 'Ridge', 'RidgeCV', 'RidgeClassifier', 'RidgeClassifierCV', 'SGDClassifier', 'SGDRegressor', 'SquaredLoss', 'TheilSenRegressor', 'enet_path', 'lars_path', 'lasso_path', 'lasso_stability_path', 'logistic_regression_path', 'orthogonal_mp', 'orthogonal_mp_gram', 'ridge_regression', 'RANSACRegressor' metrics 'accuracy_score', 'adjusted_mutual_info_score', 'adjusted_rand_score', 'auc', 'average_precision_score', 'balanced_accuracy_score', 'calinski_harabaz_score', 'classification_report', 'cluster', 'cohen_kappa_score', 'completeness_score', 'confusion_matrix', 'consensus_score', 'coverage_error', 'euclidean_distances', 'explained_variance_score', 'f1_score', 'fbeta_score', 'fowlkes_mallows_score', 'get_scorer', 'hamming_loss', 'hinge_loss', 'homogeneity_completeness_v_measure', 'homogeneity_score', 'jaccard_similarity_score', 'label_ranking_average_precision_score', 'label_ranking_loss', 'log_loss', 'make_scorer', 'matthews_corrcoef', 'mean_absolute_error', 'mean_squared_error', 'mean_squared_log_error', 'median_absolute_error', 'mutual_info_score', 'normalized_mutual_info_score', 'pairwise_distances', 'pairwise_distances_argmin', 'pairwise_distances_argmin_min', 'pairwise_distances_argmin_min', 'pairwise_kernels', 'precision_recall_curve', 'precision_recall_fscore_support', 'precision_score', 'r2_score', 'recall_score', 'roc_auc_score', 'roc_curve', 'SCORERS', 'silhouette_samples', 'silhouette_score', 'v_measure_score', 'zero_one_loss', 'brier_score_loss' mixture 'DPGMM', 'GMM', 'VBGMM', '_validate_covars', 'distribute_covar_matrix_to_match_covariance_type', 'log_multivariate_normal_density', 'sample_gaussian', 'GaussianMixture', 'BayesianGaussianMixture' gaussian_process 'GaussianProcess' 'correlation_models' 'regression_models', 'GaussianProcessRegressor' 'GaussianProcessClassifier' 'kernels' manifold 'locally_linear_embedding' 'LocallyLinearEmbedding' 'Isomap' 'MDS' 'smacof' 'SpectralEmbedding' 'spectral_embedding' \"TSNE\" model_selection 'BaseCrossValidator', 'GridSearchCV', 'TimeSeriesSplit', 'KFold', 'GroupKFold', 'GroupShuffleSplit', 'LeaveOneGroupOut', 'LeaveOneOut', 'LeavePGroupsOut', 'LeavePOut', 'RepeatedKFold', 'RepeatedStratifiedKFold', 'ParameterGrid', 'ParameterSampler', 'PredefinedSplit', 'RandomizedSearchCV', 'ShuffleSplit', 'StratifiedKFold', 'StratifiedShuffleSplit', 'check_cv', 'cross_val_predict', 'cross_val_score', 'cross_validate', 'fit_grid_point', 'learning_curve', 'permutation_test_score', 'train_test_split', 'validation_curve'","title":"SkLearn\u7684\u7ed3\u6784"},{"location":"\u673a\u5668\u5b66\u4e60/sklearnStruct/#sklearn","text":"autuanliu@163.com datasets 'clear_data_home', 'dump_svmlight_file', 'fetch_20newsgroups', 'fetch_20newsgroups_vectorized', 'fetch_lfw_pairs', 'fetch_lfw_people', 'fetch_mldata', 'fetch_olivetti_faces', 'fetch_species_distributions', 'fetch_california_housing', 'fetch_covtype', 'fetch_rcv1', 'fetch_kddcup99', 'get_data_home', 'load_boston', 'load_diabetes', 'load_digits', 'load_files', 'load_iris', 'load_breast_cancer', 'load_linnerud', 'load_mlcomp', 'load_sample_image', 'load_sample_images', 'load_svmlight_file', 'load_svmlight_files', 'load_wine', 'make_biclusters', 'make_blobs', 'make_circles', 'make_classification', 'make_checkerboard', 'make_friedman1', 'make_friedman2', 'make_friedman3', 'make_gaussian_quantiles', 'make_hastie_10_2', 'make_low_rank_matrix', 'make_moons', 'make_multilabel_classification', 'make_regression', 'make_s_curve', 'make_sparse_coded_signal', 'make_sparse_spd_matrix', 'make_sparse_uncorrelated', 'make_spd_matrix', 'make_swiss_roll', 'mldata_filename' preprossing 'Binarizer', 'FunctionTransformer', 'Imputer', 'KernelCenterer', 'LabelBinarizer', 'LabelEncoder', 'MultiLabelBinarizer', 'MinMaxScaler', 'MaxAbsScaler', 'QuantileTransformer', 'Normalizer', 'OneHotEncoder', 'CategoricalEncoder', 'PowerTransformer', 'RobustScaler', 'StandardScaler', 'TransformedTargetRegressor', 'add_dummy_feature', 'PolynomialFeatures', 'binarize', 'normalize', 'scale', 'robust_scale', 'maxabs_scale', 'minmax_scale', 'label_binarize', 'quantile_transform', 'power_transform' feature_selection 'GenericUnivariateSelect', 'RFE', 'RFECV', 'SelectFdr', 'SelectFpr', 'SelectFwe', 'SelectKBest', 'SelectFromModel', 'SelectPercentile', 'VarianceThreshold', 'chi2', 'f_classif', 'f_oneway', 'f_regression', 'mutual_info_classif', 'mutual_info_regression' feature_extraction 'DictVectorizer' 'image' 'img_to_graph' 'grid_to_graph' 'text' 'FeatureHasher' decomposition 'DictionaryLearning', 'FastICA', 'IncrementalPCA', 'KernelPCA', 'MiniBatchDictionaryLearning', 'MiniBatchSparsePCA', 'NMF', 'PCA', 'RandomizedPCA', 'SparseCoder', 'SparsePCA', 'dict_learning', 'dict_learning_online', 'fastica', 'non_negative_factorization', 'randomized_svd', 'sparse_encode', 'FactorAnalysis', 'TruncatedSVD', 'LatentDirichletAllocation' cluster 'AffinityPropagation', 'AgglomerativeClustering', 'Birch', 'DBSCAN', 'KMeans', 'FeatureAgglomeration', 'MeanShift', 'MiniBatchKMeans', 'SpectralClustering', 'affinity_propagation', 'dbscan', 'estimate_bandwidth', 'get_bin_seeds', 'k_means', 'linkage_tree', 'mean_shift', 'spectral_clustering', 'ward_tree', 'SpectralBiclustering', 'SpectralCoclustering' ensemble \"BaseEnsemble\" \"RandomForestClassifier\" \"RandomForestRegressor\" \"RandomTreesEmbedding\" \"ExtraTreesClassifier\" \"ExtraTreesRegressor\" \"BaggingClassifier\" \"BaggingRegressor\" \"IsolationFores* GradientBoostingClassifier\" \"GradientBoostingRegressor\" \"AdaBoostClassifier\" \"AdaBoostRegressor\" \"VotingClassifier\" \"bagging\", \"forest\" \"gradient_boosting\" \"partial_dependence\" \"weight_boosting\" neighbors 'BallTree', 'DistanceMetric', 'KDTree', 'KNeighborsClassifier', 'KNeighborsRegressor', 'NearestCentroid', 'NearestNeighbors', 'RadiusNeighborsClassifier', 'RadiusNeighborsRegressor', 'kneighbors_graph', 'radius_neighbors_graph', 'KernelDensity', 'LSHForest', 'LocalOutlierFactor' neural_network \"BernoulliRBM\", \"MLPClassifier\", \"MLPRegressor\" semi_supervised 'LabelPropagation' 'LabelSpreading' svm 'LinearSVC', 'LinearSVR', 'NuSVC', 'NuSVR', 'OneClassSVM', 'SVC', 'SVR', 'l1_min_c', 'liblinear', 'libsvm', 'libsvm_sparse' tree \"DecisionTreeClassifier\" \"DecisionTreeRegressor\" \"ExtraTreeClassifier\" \"ExtraTreeRegressor\" \"export_graphviz\" linear_model 'ARDRegression', 'BayesianRidge', 'ElasticNet', 'ElasticNetCV', 'Hinge', 'Huber', 'HuberRegressor', 'Lars', 'LarsCV', 'Lasso', 'LassoCV', 'LassoLars', 'LassoLarsCV', 'LassoLarsIC', 'LinearRegression', 'Log', 'LogisticRegression', 'LogisticRegressionCV', 'ModifiedHuber', 'MultiTaskElasticNet', 'MultiTaskElasticNetCV', 'MultiTaskLasso', 'MultiTaskLassoCV', 'OrthogonalMatchingPursuit', 'OrthogonalMatchingPursuitCV', 'PassiveAggressiveClassifier', 'PassiveAggressiveRegressor', 'Perceptron', 'RandomizedLasso', 'RandomizedLogisticRegression', 'Ridge', 'RidgeCV', 'RidgeClassifier', 'RidgeClassifierCV', 'SGDClassifier', 'SGDRegressor', 'SquaredLoss', 'TheilSenRegressor', 'enet_path', 'lars_path', 'lasso_path', 'lasso_stability_path', 'logistic_regression_path', 'orthogonal_mp', 'orthogonal_mp_gram', 'ridge_regression', 'RANSACRegressor' metrics 'accuracy_score', 'adjusted_mutual_info_score', 'adjusted_rand_score', 'auc', 'average_precision_score', 'balanced_accuracy_score', 'calinski_harabaz_score', 'classification_report', 'cluster', 'cohen_kappa_score', 'completeness_score', 'confusion_matrix', 'consensus_score', 'coverage_error', 'euclidean_distances', 'explained_variance_score', 'f1_score', 'fbeta_score', 'fowlkes_mallows_score', 'get_scorer', 'hamming_loss', 'hinge_loss', 'homogeneity_completeness_v_measure', 'homogeneity_score', 'jaccard_similarity_score', 'label_ranking_average_precision_score', 'label_ranking_loss', 'log_loss', 'make_scorer', 'matthews_corrcoef', 'mean_absolute_error', 'mean_squared_error', 'mean_squared_log_error', 'median_absolute_error', 'mutual_info_score', 'normalized_mutual_info_score', 'pairwise_distances', 'pairwise_distances_argmin', 'pairwise_distances_argmin_min', 'pairwise_distances_argmin_min', 'pairwise_kernels', 'precision_recall_curve', 'precision_recall_fscore_support', 'precision_score', 'r2_score', 'recall_score', 'roc_auc_score', 'roc_curve', 'SCORERS', 'silhouette_samples', 'silhouette_score', 'v_measure_score', 'zero_one_loss', 'brier_score_loss' mixture 'DPGMM', 'GMM', 'VBGMM', '_validate_covars', 'distribute_covar_matrix_to_match_covariance_type', 'log_multivariate_normal_density', 'sample_gaussian', 'GaussianMixture', 'BayesianGaussianMixture' gaussian_process 'GaussianProcess' 'correlation_models' 'regression_models', 'GaussianProcessRegressor' 'GaussianProcessClassifier' 'kernels' manifold 'locally_linear_embedding' 'LocallyLinearEmbedding' 'Isomap' 'MDS' 'smacof' 'SpectralEmbedding' 'spectral_embedding' \"TSNE\" model_selection 'BaseCrossValidator', 'GridSearchCV', 'TimeSeriesSplit', 'KFold', 'GroupKFold', 'GroupShuffleSplit', 'LeaveOneGroupOut', 'LeaveOneOut', 'LeavePGroupsOut', 'LeavePOut', 'RepeatedKFold', 'RepeatedStratifiedKFold', 'ParameterGrid', 'ParameterSampler', 'PredefinedSplit', 'RandomizedSearchCV', 'ShuffleSplit', 'StratifiedKFold', 'StratifiedShuffleSplit', 'check_cv', 'cross_val_predict', 'cross_val_score', 'cross_validate', 'fit_grid_point', 'learning_curve', 'permutation_test_score', 'train_test_split', 'validation_curve'","title":"sklearn \u7684\u7ed3\u6784"},{"location":"\u673a\u5668\u5b66\u4e60/unsupervised/","text":"\u65e0\u76d1\u7763\u5b66\u4e60 \u9ad8\u65af\u6df7\u5408\u6a21\u578b \u5728\u9ad8\u65af\u6df7\u5408\u6a21\u578b\u4e2d, \u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03\u79f0\u4e3a\u4e00\u4e2a\u5206\u91cf diagonal \u6307\u6bcf\u4e2a\u5206\u91cf\u6709\u5404\u81ea\u4e0d\u540c\u5bf9\u89d2\u534f\u65b9\u5dee\u77e9\u9635, spherical \u6307\u6bcf\u4e2a\u5206\u91cf\u6709\u5404\u81ea\u4e0d\u540c\u7684\u7b80\u5355\u534f\u65b9\u5dee\u77e9\u9635, tied \u6307\u6240\u6709\u5206\u91cf\u6709\u76f8\u540c\u7684\u6807\u51c6\u534f\u65b9\u5dee\u77e9\u9635, full \u6307\u6bcf\u4e2a\u5206\u91cf\u6709\u5404\u81ea\u4e0d\u540c\u7684\u6807\u51c6\u534f\u65b9\u5dee\u77e9\u9635 \u9ad8\u65af\u6df7\u5408\u6a21\u578b\u662f\u4e00\u4e2a\u5047\u8bbe\u6240\u6709\u7684\u6570\u636e\u70b9\u90fd\u662f\u751f\u6210\u4e8e\u4e00\u4e2a\u6df7\u5408\u7684\u6709\u9650\u6570\u91cf\u7684\u5e76\u4e14\u672a\u77e5\u53c2\u6570\u7684\u9ad8\u65af\u5206\u5e03\u7684\u6982\u7387\u6a21\u578b, \u6211\u4eec\u53ef\u4ee5\u5c06\u6df7\u5408\u6a21\u578b\u770b\u4f5c\u662f k-means \u805a\u7c7b\u7b97\u6cd5\u7684\u63a8\u5e7f, \u5b83\u5229\u7528\u4e86\u5173\u4e8e\u6570\u636e\u7684\u534f\u65b9\u5dee\u7ed3\u6784\u4ee5\u53ca\u6f5c\u5728\u9ad8\u65af\u4e2d\u5fc3\u7684\u4fe1\u606f GaussianMixture \u5bf9\u8c61\u5b9e\u73b0\u4e86\u7528\u6765\u62df\u5408\u9ad8\u65af\u6df7\u5408\u6a21\u578b\u7684 \u671f\u671b\u6700\u5927\u5316 (EM) \u7b97\u6cd5.\u5b83\u8fd8\u53ef\u4ee5\u4e3a\u591a\u53d8\u91cf\u6a21\u578b\u7ed8\u5236\u7f6e\u4fe1\u533a\u95f4, \u540c\u65f6\u8ba1\u7b97 BIC(Bayesian Information Criterion, \u8d1d\u53f6\u65af\u4fe1\u606f\u51c6\u5219)\u6765\u8bc4\u4f30\u6570\u636e\u4e2d\u805a\u7c7b\u7684\u6570\u91cf \u7f3a\u70b9 \u5f53\u6bcf\u4e2a\u6df7\u5408\u6a21\u578b\u6ca1\u6709\u8db3\u591f\u591a\u7684\u70b9\u65f6, \u4f30\u7b97\u534f\u65b9\u5dee\u53d8\u5f97\u56f0\u96be\u8d77\u6765, \u540c\u65f6\u7b97\u6cd5\u4f1a\u53d1\u6563\u5e76\u4e14\u627e\u5177\u6709\u65e0\u7a77\u5927\u4f3c\u7136\u51fd\u6570\u503c\u7684\u89e3, \u9664\u975e\u4eba\u4e3a\u5730\u5bf9\u534f\u65b9\u5dee\u8fdb\u884c\u6b63\u5219\u5316 \u9700\u8981\u5927\u91cf\u7684\u6570\u636e\u70b9 \u8fd9\u4e2a\u7b97\u6cd5\u5c06\u4f1a\u603b\u662f\u7528\u6240\u6709\u5b83\u80fd\u7528\u7684\u5206\u91cf, \u6240\u4ee5\u5728\u6ca1\u6709\u5916\u90e8\u7ebf\u7d22\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u7559\u5b58\u6570\u636e\u6216\u8005\u7528\u4fe1\u606f\u7406\u8bba\u6807\u51c6\u6765\u51b3\u5b9a\u7528\u591a\u5c11\u5206\u91cf \u4e00\u79cd\u9ad8\u6548\u7684\u65b9\u6cd5\u662f\u5229\u7528 BIC(\u8d1d\u53f6\u65af\u4fe1\u606f\u51c6\u5219)\u6765\u9009\u62e9\u9ad8\u65af\u6df7\u5408\u7684\u5206\u91cf\u6570 \u53d8\u5206\u63a8\u65ad\u662f\u671f\u671b\u6700\u5927\u5316(EM)\u7684\u6269\u5c55, \u5b83\u6700\u5927\u5316\u6a21\u578b\u8bc1\u636e(\u5305\u62ec\u5148\u9a8c)\u7684\u4e0b\u754c, \u800c\u4e0d\u662f\u6570\u636e\u4f3c\u7136\u51fd\u6570 \u53d8\u5206\u7b97\u6cd5\u6bd4\u9884\u671f\u6700\u5927\u5316(EM)\u9700\u8981\u66f4\u591a\u7684\u8d85\u53c2\u6570 \u6d41\u5f62\u5b66\u4e60 \u6d41\u5f62\u5b66\u4e60\u662f\u4e00\u79cd\u975e\u7ebf\u6027\u964d\u7ef4\u65b9\u6cd5.\u5176\u7b97\u6cd5\u57fa\u4e8e\u7684\u601d\u60f3\u662f\uff1a\u8bb8\u591a\u6570\u636e\u96c6\u7684\u7ef4\u5ea6\u8fc7\u9ad8\u53ea\u662f\u7531\u4eba\u4e3a\u5bfc\u81f4\u7684 \u901a\u8fc7\u5bf9\u6570\u636e\u7684\u968f\u673a\u6295\u5f71\u6765\u5b9e\u73b0\u964d\u7ef4\u662f\u6700\u7b80\u5355\u7684\u65b9\u6cd5. \u867d\u7136\u8fd9\u6837\u505a\u80fd\u5b9e\u73b0\u6570\u636e\u7ed3\u6784\u4e00\u5b9a\u7a0b\u5ea6\u7684\u53ef\u89c6\u5316, \u4f46\u968f\u673a\u9009\u62e9\u6295\u5f71\u4ecd\u6709\u8bb8\u591a\u6709\u5f85\u6539\u8fdb\u4e4b\u5904. \u5728\u968f\u673a\u6295\u5f71\u4e2d, \u6570\u636e\u4e2d\u66f4\u6709\u8da3\u7684\u7ed3\u6784\u5f88\u53ef\u80fd\u4f1a\u4e22\u5931 \u6d41\u5f62\u5b66\u4e60\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u5c06\u7ebf\u6027\u6846\u67b6(\u5982 PCA )\u63a8\u5e7f\u4e3a\u5bf9\u6570\u636e\u4e2d\u975e\u7ebf\u6027\u7ed3\u6784\u654f\u611f\u7684\u5c1d\u8bd5. \u867d\u7136\u5b58\u5728\u76d1\u7763\u53d8\u91cf, \u4f46\u662f\u5178\u578b\u7684\u6d41\u5f62\u5b66\u4e60\u95ee\u9898\u662f\u65e0\u76d1\u7763\u7684\uff1a\u5b83\u4ece\u6570\u636e\u672c\u8eab\u5b66\u4e60\u6570\u636e\u7684\u9ad8\u7ef4\u7ed3\u6784, \u800c\u4e0d\u4f7f\u7528\u9884\u5b9a\u7684\u5206\u7c7b \u6d41\u5f62\u5b66\u4e60\u7684\u6700\u65e9\u65b9\u6cd5\u4e4b\u4e00\u662f Isomap \u7b97\u6cd5, \u7b49\u8ddd\u6620\u5c04(Isometric Mapping)\u7684\u7f29\u5199. Isomap \u53ef\u4ee5\u88ab\u89c6\u4e3a\u591a\u7ef4\u7f29\u653e(Multi-dimensional Scaling\uff1aMDS)\u6216\u6838\u4e3b\u6210\u5206\u5206\u6790(Kernel PCA)\u7684\u6269\u5c55 \u5c40\u90e8\u7ebf\u6027\u5d4c\u5165(LLE)\u901a\u8fc7\u4fdd\u7559\u5c40\u90e8\u90bb\u57df\u5185\u7684\u8ddd\u79bb\u6765\u5bfb\u6c42\u6570\u636e\u7684\u4f4e\u7ef4\u6295\u5f71. \u5b83\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u7cfb\u5217\u7684\u5c40\u90e8\u4e3b\u6210\u5206\u5206\u6790, \u4e0e\u5168\u5c40\u76f8\u6bd4, \u627e\u5230\u6700\u4f18\u7684\u5c40\u90e8\u975e\u7ebf\u6027\u5d4c\u5165 t-SNE( TSNE )\u5c06\u6570\u636e\u70b9\u7684\u76f8\u4f3c\u6027\u8f6c\u6362\u4e3a\u6982\u7387.\u539f\u59cb\u7a7a\u95f4\u4e2d\u7684\u76f8\u4f3c\u6027\u8868\u793a\u4e3a\u9ad8\u65af\u8054\u5408\u6982\u7387, \u5d4c\u5165\u7a7a\u95f4\u4e2d\u7684\u76f8\u4f3c\u6027\u8868\u793a\u4e3a \"\u5b66\u751f\" \u7684 t \u5206\u5e03 \u805a\u7c7b \u6bcf\u4e2a clustering algorithm (\u805a\u7c7b\u7b97\u6cd5)\u6709\u4e24\u4e2a\u53d8\u4f53: \u4e00\u4e2a\u662f class, \u5b83\u5b9e\u73b0\u4e86 fit \u65b9\u6cd5\u6765\u5b66\u4e60 train data(\u8bad\u7ec3\u6570\u636e)\u7684 clusters(\u805a\u7c7b), \u8fd8\u6709\u4e00\u4e2a function(\u51fd\u6570), \u662f\u7ed9\u5b9a train data(\u8bad\u7ec3\u6570\u636e), \u8fd4\u56de\u4e0e\u4e0d\u540c clusters(\u805a\u7c7b)\u5bf9\u5e94\u7684\u6574\u6570\u6807\u7b7e array(\u6570\u7ec4).\u5bf9\u4e8e class(\u7c7b), training data(\u8bad\u7ec3\u6570\u636e)\u4e0a\u7684\u6807\u7b7e\u53ef\u4ee5\u5728 labels_ \u5c5e\u6027\u4e2d\u627e\u5230 \u53ef\u4ee5\u5c06 KMeans \u89c6\u4e3a\u5177\u6709 equal covariance per component (\u6bcf\u4e2a\u5206\u91cf\u76f8\u7b49\u534f\u65b9\u5dee)\u7684 Gaussian mixture model (\u9ad8\u65af\u6df7\u5408\u6a21\u578b)\u7684\u7279\u6b8a\u60c5\u51b5 \u5728 k-means \u805a\u7c7b\u4e4b\u524d\u8fd0\u884c\u8bf8\u5982 PCA \u4e4b\u7c7b\u7684 dimensionality reduction algorithm (\u964d\u7ef4\u7b97\u6cd5)\u53ef\u4ee5\u51cf\u8f7b\u8fd9\u4e2a\u95ee\u9898\u5e76\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6 K-means \u76f8\u5f53\u4e8e\u5177\u6709 small, all-equal, diagonal covariance matrix (\u5c0f\u7684\u5168\u5bf9\u79f0\u534f\u65b9\u5dee\u77e9\u9635)\u7684 expectation-maximization algorithm (\u671f\u671b\u6700\u5927\u5316\u7b97\u6cd5) AffinityPropagation AP\u805a\u7c7b\u662f\u901a\u8fc7\u5728\u6837\u672c\u5bf9\u4e4b\u95f4\u53d1\u9001\u6d88\u606f\u76f4\u5230\u6536\u655b\u6765\u521b\u5efa\u805a\u7c7b.\u7136\u540e\u4f7f\u7528\u5c11\u91cf\u793a\u4f8b\u6837\u672c\u4f5c\u4e3a\u805a\u7c7b\u4e2d\u5fc3\u6765\u63cf\u8ff0\u6570\u636e\u96c6, \u805a\u7c7b\u4e2d\u5fc3\u662f\u6570\u636e\u96c6\u4e2d\u6700\u80fd\u4ee3\u8868\u4e00\u7c7b\u6570\u636e\u7684\u6837\u672c.\u5728\u6837\u672c\u5bf9\u4e4b\u95f4\u53d1\u9001\u7684\u6d88\u606f\u8868\u793a\u4e00\u4e2a\u6837\u672c\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u6837\u672c\u7684\u793a\u4f8b\u6837\u672c\u7684 \u9002\u5408\u7a0b\u5ea6, \u9002\u5408\u7a0b\u5ea6\u503c\u5728\u6839\u636e\u901a\u4fe1\u7684\u53cd\u9988\u4e0d\u65ad\u66f4\u65b0.\u66f4\u65b0\u8fed\u4ee3\u76f4\u5230\u6536\u655b, \u5b8c\u6210\u805a\u7c7b\u4e2d\u5fc3\u7684\u9009\u53d6, \u56e0\u6b64\u4e5f\u7ed9\u51fa\u4e86\u6700\u7ec8\u805a\u7c7b Affinity Propagation \u53ef\u4ee5\u6839\u636e\u63d0\u4f9b\u7684\u6570\u636e\u51b3\u5b9a\u805a\u7c7b\u7684\u6570\u76ee AP\u805a\u7c7b\u7b97\u6cd5\u4e3b\u8981\u7684\u7f3a\u70b9\u662f\u7b97\u6cd5\u7684\u590d\u6742\u5ea6 MeanShift \u7b97\u6cd5\u65e8\u5728\u4e8e\u53d1\u73b0\u4e00\u4e2a\u6837\u672c\u5bc6\u5ea6\u5e73\u6ed1\u7684 blobs . \u5747\u503c\u6f02\u79fb\u7b97\u6cd5\u662f \u57fa\u4e8e\u8d28\u5fc3 \u7684\u7b97\u6cd5, \u901a\u8fc7\u66f4\u65b0\u8d28\u5fc3\u7684\u5019\u9009\u4f4d\u7f6e\u4e3a\u6240\u9009\u5b9a\u533a\u57df\u7684\u504f\u79fb\u5747\u503c. \u7136\u540e, \u8fd9\u4e9b\u5019\u9009\u8005\u5728\u540e\u5904\u7406\u9636\u6bb5\u88ab\u8fc7\u6ee4\u4ee5\u6d88\u9664\u8fd1\u4f3c\u91cd\u590d, \u4ece\u800c\u5f62\u6210\u6700\u7ec8\u8d28\u5fc3\u96c6\u5408, \u8be5\u7b97\u6cd5\u4e0d\u662f\u9ad8\u5ea6\u53ef\u6269\u5c55\u7684, \u56e0\u4e3a\u5728\u6267\u884c\u7b97\u6cd5\u671f\u95f4\u9700\u8981\u6267\u884c\u591a\u4e2a\u6700\u8fd1\u90bb\u641c\u7d22. \u8be5\u7b97\u6cd5\u4fdd\u8bc1\u6536\u655b, \u4f46\u662f\u5f53 \u8d28\u5fc3\u7684\u53d8\u5316\u8f83\u5c0f\u65f6, \u7b97\u6cd5\u5c06\u505c\u6b62\u8fed\u4ee3 SpectralClustering \u662f\u5728\u6837\u672c\u4e4b\u95f4\u8fdb\u884c\u4eb2\u548c\u529b\u77e9\u9635\u7684\u4f4e\u7ef4\u5ea6\u5d4c\u5165, \u5176\u5b9e\u662f\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u7684 KMeans. \u5982\u679c\u4eb2\u548c\u5ea6\u77e9\u9635\u7a00\u758f, \u5219\u8fd9\u662f\u975e\u5e38\u6709\u6548\u7684. SpectralClustering \u9700\u8981\u6307\u5b9a\u805a\u7c7b\u6570.\u8fd9\u4e2a\u7b97\u6cd5\u9002\u7528\u4e8e\u805a\u7c7b\u6570\u5c11\u65f6, \u5728\u805a\u7c7b\u6570\u591a\u662f\u4e0d\u5efa\u8bae\u4f7f\u7528 \u5728\u5b9e\u8df5\u4e2d, \u5f53\u5355\u4e2a\u805a\u7c7b\u7684\u7ed3\u6784\u662f\u9ad8\u5ea6\u975e\u51f8\u7684, \u6216\u8005\u5f53\u805a\u7c7b\u7684\u4e2d\u5fc3\u548c\u6269\u5c55\u7684\u5ea6\u91cf\u4e0d\u662f\u5b8c\u6574\u805a\u7c7b\u7684\u63cf\u8ff0\u65f6, \u8c31\u805a\u7c7b\u662f\u975e\u5e38\u6709\u7528\u7684 Hierarchical clustering \u662f\u4e00\u4e2a\u5e38\u7528\u7684\u805a\u7c7b\u7b97\u6cd5, \u5b83\u901a\u8fc7\u4e0d\u65ad\u7684\u5408\u5e76\u6216\u8005\u5206\u5272\u6765\u6784\u5efa\u805a\u7c7b. \u805a\u7c7b\u7684\u5c42\u6b21\u88ab\u8868\u793a\u6210\u6811.\u6811\u6839\u662f\u62e5\u6709\u6240\u6709\u6837\u672c\u7684\u552f\u4e00\u805a\u7c7b, \u53f6\u5b50\u662f\u4ec5\u6709\u4e00\u4e2a\u6837\u672c\u7684\u805a\u7c7b DBSCAN \u7b97\u6cd5\u5c06\u805a\u7c7b\u89c6\u4e3a\u88ab\u4f4e\u5bc6\u5ea6\u533a\u57df\u5206\u9694\u7684\u9ad8\u5bc6\u5ea6\u533a\u57df.\u7531\u4e8e\u8fd9\u4e2a\u76f8\u5f53\u666e\u904d\u7684\u89c2\u70b9, DBSCAN\u53d1\u73b0\u7684\u805a\u7c7b\u53ef\u4ee5\u662f\u4efb\u4f55\u5f62\u72b6\u7684, \u4e0e\u5047\u8bbe\u805a\u7c7b\u662f convex shaped \u7684 K-means \u76f8\u53cd DBSCAN \u7684\u6838\u5fc3\u6982\u5ff5\u662f core samples, \u662f\u6307\u4f4d\u4e8e\u9ad8\u5bc6\u5ea6\u533a\u57df\u7684\u6837\u672c. \u56e0\u6b64\u4e00\u4e2a\u805a\u7c7b\u662f\u4e00\u7ec4\u6838\u5fc3\u6837\u672c, \u6bcf\u4e2a\u6838\u5fc3\u6837\u672c\u5f7c\u6b64\u9760\u8fd1(\u901a\u8fc7\u4e00\u5b9a\u8ddd\u79bb\u5ea6\u91cf\u6d4b\u91cf) \u548c\u4e00\u7ec4\u63a5\u8fd1\u6838\u5fc3\u6837\u672c\u7684\u975e\u6838\u5fc3\u6837\u672c(\u4f46\u672c\u8eab\u4e0d\u662f\u6838\u5fc3\u6837\u672c) DBSCAN \u662f\u9012\u5f52\u7684 DBSCAN \u7b97\u6cd5\u662f\u5177\u6709\u786e\u5b9a\u6027\u7684, \u5f53\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u7ed9\u51fa\u76f8\u540c\u7684\u6570\u636e\u65f6\u603b\u662f\u5f62\u6210\u76f8\u540c\u7684\u805a\u7c7b. \u7136\u800c, \u5f53\u4ee5\u4e0d\u540c\u7684\u987a\u5e8f\u63d0\u4f9b\u6570\u636e\u65f6\u805a\u7c7b\u7684\u7ed3\u679c\u53ef\u80fd\u4e0d\u76f8\u540c The Birch \u4e3a\u63d0\u4f9b\u7684\u6570\u636e\u6784\u5efa\u4e00\u9897 Characteristic Feature Tree (CFT, \u805a\u7c7b\u7279\u5f81\u6811) Birch \u5728\u9ad8\u7ef4\u6570\u636e\u4e0a\u8868\u73b0\u4e0d\u597d.\u4e00\u6761\u7ecf\u9a8c\u6cd5\u5219, \u5982\u679c n_features \u5927\u4e8e20, \u901a\u5e38\u4f7f\u7528 MiniBatchKMeans \u66f4\u597d \u5982\u679c\u9700\u8981\u51cf\u5c11\u6570\u636e\u5b9e\u4f8b\u7684\u6570\u91cf, \u6216\u8005\u5982\u679c\u9700\u8981\u5927\u91cf\u7684\u5b50\u805a\u7c7b\u4f5c\u4e3a\u9884\u5904\u7406\u6b65\u9aa4\u6216\u8005\u5176\u4ed6, Birch \u6bd4 MiniBatchKMeans \u66f4\u6709\u7528 \u5ea6\u91cf\u805a\u7c7b\u7b97\u6cd5\u7684\u6027\u80fd\u4e0d\u662f\u7b80\u5355\u7684\u7edf\u8ba1\u9519\u8bef\u7684\u6570\u91cf\u6216\u8ba1\u7b97\u76d1\u7763\u5206\u7c7b\u7b97\u6cd5\u4e2d\u7684 precision (\u51c6\u786e\u7387)\u548c recall (\u53ec\u56de\u7387) Biclustering \u53ef\u4ee5\u4f7f\u7528 sklearn.cluster.bicluster \u6a21\u5757. Biclustering \u7b97\u6cd5\u5bf9\u6570\u636e\u77e9\u9635\u7684\u884c\u5217\u540c\u65f6\u8fdb\u884c\u805a\u7c7b. \u540c\u65f6\u5bf9\u884c\u5217\u8fdb\u884c\u805a\u7c7b\u79f0\u4e4b\u4e3a biclusters. \u6bcf\u4e00\u6b21\u805a\u7c7b\u90fd\u4f1a\u901a\u8fc7\u539f\u59cb\u6570\u636e\u77e9\u9635\u7684\u4e00\u4e9b\u5c5e\u6027\u786e\u5b9a\u4e00\u4e2a\u5b50\u77e9\u9635 \u77e9\u9635\u5206\u89e3 \u53ef\u9009\u53c2\u6570 whiten=True \u4f7f\u5f97\u53ef\u4ee5\u5c06\u6570\u636e\u6295\u5f71\u5230\u5947\u5f02(singular)\u7a7a\u95f4\u4e0a, \u540c\u65f6\u5c06\u6bcf\u4e2a\u6210\u5206\u7f29\u653e\u5230\u5355\u4f4d\u65b9\u5dee PCA \u5bf9\u8c61\u975e\u5e38\u6709\u7528, \u4f46\u5bf9\u5927\u578b\u6570\u636e\u96c6\u6709\u4e00\u5b9a\u7684\u9650\u5236. \u6700\u5927\u7684\u9650\u5236\u662f PCA \u4ec5\u652f\u6301\u6279\u5904\u7406, \u8fd9\u610f\u5473\u7740\u6240\u6709\u8981\u5904\u7406\u7684\u6570\u636e\u5fc5\u987b\u9002\u5408\u4e3b\u5185\u5b58. IncrementalPCA \u5bf9\u8c61\u4f7f\u7528\u4e0d\u540c\u7684\u5904\u7406\u5f62\u5f0f\u4f7f\u4e4b\u5141\u8bb8\u90e8\u5206\u8ba1\u7b97, \u8fd9\u4e00\u5f62\u5f0f\u51e0\u4e4e\u548c PCA \u4ee5\u5c0f\u578b\u6279\u5904\u7406\u65b9\u5f0f\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u5b8c\u5168\u5339\u914d IncrementalPCA \u4ec5\u5b58\u50a8\u6210\u5206\u548c\u566a\u58f0\u65b9\u5dee\u7684\u4f30\u8ba1\u503c, \u5e76\u6309\u987a\u5e8f\u9012\u589e\u5730\u66f4\u65b0\u89e3\u91ca\u65b9\u5dee\u6bd4 KernelPCA \u662f PCA \u7684\u6269\u5c55, \u901a\u8fc7\u4f7f\u7528\u6838\u65b9\u6cd5\u5b9e\u73b0\u975e\u7ebf\u6027\u964d\u7ef4(dimensionality reduction)\u5b83\u5177\u6709\u8bb8\u591a\u5e94\u7528, \u5305\u62ec\u53bb\u566a, \u538b\u7f29\u548c\u7ed3\u6784\u5316\u9884\u6d4b( structured prediction ) (kernel dependency estimation(\u5185\u6838\u4f9d\u8d56\u4f30\u8ba1)). SparsePCA \u662f PCA \u7684\u4e00\u4e2a\u53d8\u4f53, \u76ee\u7684\u662f\u63d0\u53d6\u80fd\u6700\u597d\u5730\u91cd\u5efa\u6570\u636e\u7684\u7a00\u758f\u7ec4\u5206\u96c6\u5408 \u5c0f\u6279\u91cf\u7a00\u758f PCA ( MiniBatchSparsePCA ) \u662f\u4e00\u4e2a SparsePCA \u7684\u53d8\u79cd, \u5b83\u901f\u5ea6\u66f4\u5feb\u4f46\u51c6\u786e\u5ea6\u6709\u6240\u964d\u4f4e. \u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8fed\u4ee3\u6b21\u6570, \u901a\u8fc7\u8fed\u4ee3\u8be5\u7ec4\u7279\u5f81\u7684\u5c0f\u5757\u6765\u8fbe\u5230\u901f\u5ea6\u7684\u589e\u52a0 Principal component analysis(\u4e3b\u6210\u5206\u5206\u6790) (PCA) \u7684\u7f3a\u70b9\u5728\u4e8e, \u901a\u8fc7\u8be5\u65b9\u6cd5\u63d0\u53d6\u7684\u6210\u5206\u5177\u6709\u552f\u4e00\u7684\u5bc6\u5ea6\u8868\u8fbe\u5f0f, \u5373\u5f53\u8868\u793a\u4e3a\u539f\u59cb\u53d8\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\u65f6, \u5b83\u4eec\u5177\u6709\u975e\u96f6\u7cfb\u6570, \u4f7f\u4e4b\u96be\u4ee5\u89e3\u91ca. \u5728\u8bb8\u591a\u60c5\u51b5\u4e0b, \u771f\u6b63\u7684\u57fa\u7840\u7ec4\u4ef6\u53ef\u4ee5\u66f4\u81ea\u7136\u5730\u60f3\u8c61\u4e3a\u7a00\u758f\u5411\u91cf; \u4f8b\u5982\u5728\u9762\u90e8\u8bc6\u522b\u4e2d, \u6bcf\u4e2a\u7ec4\u4ef6\u53ef\u80fd\u81ea\u7136\u5730\u6620\u5c04\u5230\u9762\u90e8\u7684\u67d0\u4e2a\u90e8\u5206 TruncatedSVD \u5b9e\u73b0\u4e86\u4e00\u4e2a\u5947\u5f02\u503c\u5206\u89e3(SVD)\u7684\u53d8\u4f53, \u5b83\u53ea\u8ba1\u7b97 k \u4e2a\u6700\u5927\u7684\u5947\u5f02\u503c, \u5176\u4e2d k \u662f\u7528\u6237\u6307\u5b9a\u7684\u53c2\u6570 SparseCoder \u5bf9\u8c61\u662f\u4e00\u4e2a\u4f30\u8ba1\u5668 (estimator), \u53ef\u4ee5\u7528\u6765\u5c06\u4fe1\u53f7\u8f6c\u6362\u6210\u4e00\u4e2a\u56fa\u5b9a\u7684\u9884\u8ba1\u7b97\u7684\u8bcd\u5178\u5185\u539f\u5b50(atoms)\u7684\u7a00\u758f\u7ebf\u6027\u7ec4\u5408 \u8bcd\u5178\u5b66\u4e60( DictionaryLearning ) \u662f\u4e00\u4e2a\u77e9\u9635\u56e0\u5f0f\u5206\u89e3\u95ee\u9898, \u76f8\u5f53\u4e8e\u627e\u5230\u4e00\u4e2a\u5728\u62df\u5408\u6570\u636e\u7684\u7a00\u758f\u7f16\u7801\u4e2d\u8868\u73b0\u826f\u597d\u7684(\u901a\u5e38\u662f\u8fc7\u5b8c\u5907\u7684(overcomplete)\u8bcd\u5178 \u8bcd\u5178\u5b66\u4e60\u662f\u901a\u8fc7\u4ea4\u66ff\u66f4\u65b0\u7a00\u758f\u7f16\u7801\u6765\u89e3\u51b3\u7684\u4f18\u5316\u95ee\u9898 \u56e0\u5b50\u5206\u6790 \u65e0\u76d1\u7763\u5b66\u4e60\u4e0b\u7684\u964d\u7ef4 \u72ec\u7acb\u5206\u91cf\u5206\u6790\u5c06\u591a\u53d8\u91cf\u4fe1\u53f7\u5206\u89e3\u4e3a\u72ec\u7acb\u6027\u6700\u5f3a\u7684\u52a0\u6027\u5b50\u7ec4\u4ef6. ICA \u901a\u5e38\u4e0d\u7528\u4e8e\u964d\u4f4e\u7ef4\u5ea6, \u800c\u662f\u7528\u4e8e\u5206\u79bb\u53e0\u52a0\u4fe1\u53f7. \u7531\u4e8e ICA \u6a21\u578b\u4e0d\u5305\u62ec\u566a\u58f0\u9879, \u56e0\u6b64\u8981\u4f7f\u6a21\u578b\u6b63\u786e, \u5fc5\u987b\u4f7f\u7528\u767d\u5316. \u8fd9\u53ef\u4ee5\u5728\u5185\u90e8\u8c03\u8282\u767d\u5316\u53c2\u6570\u6216\u624b\u52a8\u4f7f\u7528 PCA \u7684\u4e00\u79cd\u53d8\u4f53 ICA \u901a\u5e38\u7528\u4e8e\u5206\u79bb\u6df7\u5408\u4fe1\u53f7 NMF \u662f\u5728\u6570\u636e\u548c\u5206\u91cf\u662f\u975e\u8d1f\u60c5\u51b5\u4e0b\u7684\u53e6\u4e00\u79cd\u964d\u7ef4\u65b9\u6cd5. \u5728\u6570\u636e\u77e9\u9635\u4e0d\u5305\u542b\u8d1f\u503c\u7684\u60c5\u51b5\u4e0b, \u53ef\u4ee5\u63d2\u5165 NMF \u800c\u4e0d\u662f PCA \u6216\u5176\u53d8\u4f53 NMF \u5b9e\u73b0\u4e86\u975e\u8d1f\u53cc\u5947\u5f02\u503c\u5206\u89e3\u65b9\u6cd5 \u9690 Dirichlet \u5206\u914d\u662f\u79bb\u6563\u6570\u636e\u96c6(\u5982\u6587\u672c\u8bed\u6599\u5e93)\u7684\u96c6\u5408\u7684\u751f\u6210\u6982\u7387\u6a21\u578b. \u5b83\u4e5f\u662f\u4e00\u4e2a\u4e3b\u9898\u6a21\u578b, \u7528\u4e8e\u4ece\u6587\u6863\u96c6\u5408\u4e2d\u53d1\u73b0\u62bd\u8c61\u4e3b\u9898 scikit-learn\u9879\u76ee\u63d0\u4f9b\u4e86\u4e00\u5957\u53ef\u7528\u4e8e\u65b0\u5947\u6216\u5f02\u5e38\u503c\u68c0\u6d4b\u7684\u673a\u5668\u5b66\u4e60\u5de5\u5177. \u8be5\u7b56\u7565\u662f\u4ee5\u65e0\u76d1\u7763\u7684\u65b9\u5f0f\u5b66\u4e60\u6570\u636e\u4e2d\u7684\u5bf9\u8c61\u6765\u5b9e\u73b0\u7684 \u5bc6\u5ea6\u4f30\u8ba1\u5728\u65e0\u76d1\u7763\u5b66\u4e60, \u7279\u5f81\u5de5\u7a0b\u548c\u6570\u636e\u5efa\u6a21\u4e4b\u95f4\u5212\u5206\u4e86\u754c\u7ebf. \u4e00\u4e9b\u6700\u6d41\u884c\u548c\u6700\u6709\u7528\u7684\u5bc6\u5ea6\u4f30\u8ba1\u65b9\u6cd5\u662f\u6df7\u5408\u6a21\u578b, \u5982\u9ad8\u65af\u6df7\u5408( sklearn.mixture.GaussianMixture ), \u548c\u57fa\u4e8e\u90bb\u8fd1\u7684\u65b9\u6cd5( sklearn.neighbors.KernelDensity ), \u5982\u6838\u5bc6\u5ea6\u4f30\u8ba1","title":"\u65e0\u76d1\u7763\u5b66\u4e60"},{"location":"\u673a\u5668\u5b66\u4e60/unsupervised/#_1","text":"","title":"\u65e0\u76d1\u7763\u5b66\u4e60"},{"location":"\u673a\u5668\u5b66\u4e60/unsupervised/#_2","text":"\u5728\u9ad8\u65af\u6df7\u5408\u6a21\u578b\u4e2d, \u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03\u79f0\u4e3a\u4e00\u4e2a\u5206\u91cf diagonal \u6307\u6bcf\u4e2a\u5206\u91cf\u6709\u5404\u81ea\u4e0d\u540c\u5bf9\u89d2\u534f\u65b9\u5dee\u77e9\u9635, spherical \u6307\u6bcf\u4e2a\u5206\u91cf\u6709\u5404\u81ea\u4e0d\u540c\u7684\u7b80\u5355\u534f\u65b9\u5dee\u77e9\u9635, tied \u6307\u6240\u6709\u5206\u91cf\u6709\u76f8\u540c\u7684\u6807\u51c6\u534f\u65b9\u5dee\u77e9\u9635, full \u6307\u6bcf\u4e2a\u5206\u91cf\u6709\u5404\u81ea\u4e0d\u540c\u7684\u6807\u51c6\u534f\u65b9\u5dee\u77e9\u9635 \u9ad8\u65af\u6df7\u5408\u6a21\u578b\u662f\u4e00\u4e2a\u5047\u8bbe\u6240\u6709\u7684\u6570\u636e\u70b9\u90fd\u662f\u751f\u6210\u4e8e\u4e00\u4e2a\u6df7\u5408\u7684\u6709\u9650\u6570\u91cf\u7684\u5e76\u4e14\u672a\u77e5\u53c2\u6570\u7684\u9ad8\u65af\u5206\u5e03\u7684\u6982\u7387\u6a21\u578b, \u6211\u4eec\u53ef\u4ee5\u5c06\u6df7\u5408\u6a21\u578b\u770b\u4f5c\u662f k-means \u805a\u7c7b\u7b97\u6cd5\u7684\u63a8\u5e7f, \u5b83\u5229\u7528\u4e86\u5173\u4e8e\u6570\u636e\u7684\u534f\u65b9\u5dee\u7ed3\u6784\u4ee5\u53ca\u6f5c\u5728\u9ad8\u65af\u4e2d\u5fc3\u7684\u4fe1\u606f GaussianMixture \u5bf9\u8c61\u5b9e\u73b0\u4e86\u7528\u6765\u62df\u5408\u9ad8\u65af\u6df7\u5408\u6a21\u578b\u7684 \u671f\u671b\u6700\u5927\u5316 (EM) \u7b97\u6cd5.\u5b83\u8fd8\u53ef\u4ee5\u4e3a\u591a\u53d8\u91cf\u6a21\u578b\u7ed8\u5236\u7f6e\u4fe1\u533a\u95f4, \u540c\u65f6\u8ba1\u7b97 BIC(Bayesian Information Criterion, \u8d1d\u53f6\u65af\u4fe1\u606f\u51c6\u5219)\u6765\u8bc4\u4f30\u6570\u636e\u4e2d\u805a\u7c7b\u7684\u6570\u91cf \u7f3a\u70b9 \u5f53\u6bcf\u4e2a\u6df7\u5408\u6a21\u578b\u6ca1\u6709\u8db3\u591f\u591a\u7684\u70b9\u65f6, \u4f30\u7b97\u534f\u65b9\u5dee\u53d8\u5f97\u56f0\u96be\u8d77\u6765, \u540c\u65f6\u7b97\u6cd5\u4f1a\u53d1\u6563\u5e76\u4e14\u627e\u5177\u6709\u65e0\u7a77\u5927\u4f3c\u7136\u51fd\u6570\u503c\u7684\u89e3, \u9664\u975e\u4eba\u4e3a\u5730\u5bf9\u534f\u65b9\u5dee\u8fdb\u884c\u6b63\u5219\u5316 \u9700\u8981\u5927\u91cf\u7684\u6570\u636e\u70b9 \u8fd9\u4e2a\u7b97\u6cd5\u5c06\u4f1a\u603b\u662f\u7528\u6240\u6709\u5b83\u80fd\u7528\u7684\u5206\u91cf, \u6240\u4ee5\u5728\u6ca1\u6709\u5916\u90e8\u7ebf\u7d22\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u7559\u5b58\u6570\u636e\u6216\u8005\u7528\u4fe1\u606f\u7406\u8bba\u6807\u51c6\u6765\u51b3\u5b9a\u7528\u591a\u5c11\u5206\u91cf \u4e00\u79cd\u9ad8\u6548\u7684\u65b9\u6cd5\u662f\u5229\u7528 BIC(\u8d1d\u53f6\u65af\u4fe1\u606f\u51c6\u5219)\u6765\u9009\u62e9\u9ad8\u65af\u6df7\u5408\u7684\u5206\u91cf\u6570 \u53d8\u5206\u63a8\u65ad\u662f\u671f\u671b\u6700\u5927\u5316(EM)\u7684\u6269\u5c55, \u5b83\u6700\u5927\u5316\u6a21\u578b\u8bc1\u636e(\u5305\u62ec\u5148\u9a8c)\u7684\u4e0b\u754c, \u800c\u4e0d\u662f\u6570\u636e\u4f3c\u7136\u51fd\u6570 \u53d8\u5206\u7b97\u6cd5\u6bd4\u9884\u671f\u6700\u5927\u5316(EM)\u9700\u8981\u66f4\u591a\u7684\u8d85\u53c2\u6570","title":"\u9ad8\u65af\u6df7\u5408\u6a21\u578b"},{"location":"\u673a\u5668\u5b66\u4e60/unsupervised/#_3","text":"\u6d41\u5f62\u5b66\u4e60\u662f\u4e00\u79cd\u975e\u7ebf\u6027\u964d\u7ef4\u65b9\u6cd5.\u5176\u7b97\u6cd5\u57fa\u4e8e\u7684\u601d\u60f3\u662f\uff1a\u8bb8\u591a\u6570\u636e\u96c6\u7684\u7ef4\u5ea6\u8fc7\u9ad8\u53ea\u662f\u7531\u4eba\u4e3a\u5bfc\u81f4\u7684 \u901a\u8fc7\u5bf9\u6570\u636e\u7684\u968f\u673a\u6295\u5f71\u6765\u5b9e\u73b0\u964d\u7ef4\u662f\u6700\u7b80\u5355\u7684\u65b9\u6cd5. \u867d\u7136\u8fd9\u6837\u505a\u80fd\u5b9e\u73b0\u6570\u636e\u7ed3\u6784\u4e00\u5b9a\u7a0b\u5ea6\u7684\u53ef\u89c6\u5316, \u4f46\u968f\u673a\u9009\u62e9\u6295\u5f71\u4ecd\u6709\u8bb8\u591a\u6709\u5f85\u6539\u8fdb\u4e4b\u5904. \u5728\u968f\u673a\u6295\u5f71\u4e2d, \u6570\u636e\u4e2d\u66f4\u6709\u8da3\u7684\u7ed3\u6784\u5f88\u53ef\u80fd\u4f1a\u4e22\u5931 \u6d41\u5f62\u5b66\u4e60\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u5c06\u7ebf\u6027\u6846\u67b6(\u5982 PCA )\u63a8\u5e7f\u4e3a\u5bf9\u6570\u636e\u4e2d\u975e\u7ebf\u6027\u7ed3\u6784\u654f\u611f\u7684\u5c1d\u8bd5. \u867d\u7136\u5b58\u5728\u76d1\u7763\u53d8\u91cf, \u4f46\u662f\u5178\u578b\u7684\u6d41\u5f62\u5b66\u4e60\u95ee\u9898\u662f\u65e0\u76d1\u7763\u7684\uff1a\u5b83\u4ece\u6570\u636e\u672c\u8eab\u5b66\u4e60\u6570\u636e\u7684\u9ad8\u7ef4\u7ed3\u6784, \u800c\u4e0d\u4f7f\u7528\u9884\u5b9a\u7684\u5206\u7c7b \u6d41\u5f62\u5b66\u4e60\u7684\u6700\u65e9\u65b9\u6cd5\u4e4b\u4e00\u662f Isomap \u7b97\u6cd5, \u7b49\u8ddd\u6620\u5c04(Isometric Mapping)\u7684\u7f29\u5199. Isomap \u53ef\u4ee5\u88ab\u89c6\u4e3a\u591a\u7ef4\u7f29\u653e(Multi-dimensional Scaling\uff1aMDS)\u6216\u6838\u4e3b\u6210\u5206\u5206\u6790(Kernel PCA)\u7684\u6269\u5c55 \u5c40\u90e8\u7ebf\u6027\u5d4c\u5165(LLE)\u901a\u8fc7\u4fdd\u7559\u5c40\u90e8\u90bb\u57df\u5185\u7684\u8ddd\u79bb\u6765\u5bfb\u6c42\u6570\u636e\u7684\u4f4e\u7ef4\u6295\u5f71. \u5b83\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u7cfb\u5217\u7684\u5c40\u90e8\u4e3b\u6210\u5206\u5206\u6790, \u4e0e\u5168\u5c40\u76f8\u6bd4, \u627e\u5230\u6700\u4f18\u7684\u5c40\u90e8\u975e\u7ebf\u6027\u5d4c\u5165 t-SNE( TSNE )\u5c06\u6570\u636e\u70b9\u7684\u76f8\u4f3c\u6027\u8f6c\u6362\u4e3a\u6982\u7387.\u539f\u59cb\u7a7a\u95f4\u4e2d\u7684\u76f8\u4f3c\u6027\u8868\u793a\u4e3a\u9ad8\u65af\u8054\u5408\u6982\u7387, \u5d4c\u5165\u7a7a\u95f4\u4e2d\u7684\u76f8\u4f3c\u6027\u8868\u793a\u4e3a \"\u5b66\u751f\" \u7684 t \u5206\u5e03","title":"\u6d41\u5f62\u5b66\u4e60"},{"location":"\u673a\u5668\u5b66\u4e60/unsupervised/#_4","text":"\u6bcf\u4e2a clustering algorithm (\u805a\u7c7b\u7b97\u6cd5)\u6709\u4e24\u4e2a\u53d8\u4f53: \u4e00\u4e2a\u662f class, \u5b83\u5b9e\u73b0\u4e86 fit \u65b9\u6cd5\u6765\u5b66\u4e60 train data(\u8bad\u7ec3\u6570\u636e)\u7684 clusters(\u805a\u7c7b), \u8fd8\u6709\u4e00\u4e2a function(\u51fd\u6570), \u662f\u7ed9\u5b9a train data(\u8bad\u7ec3\u6570\u636e), \u8fd4\u56de\u4e0e\u4e0d\u540c clusters(\u805a\u7c7b)\u5bf9\u5e94\u7684\u6574\u6570\u6807\u7b7e array(\u6570\u7ec4).\u5bf9\u4e8e class(\u7c7b), training data(\u8bad\u7ec3\u6570\u636e)\u4e0a\u7684\u6807\u7b7e\u53ef\u4ee5\u5728 labels_ \u5c5e\u6027\u4e2d\u627e\u5230 \u53ef\u4ee5\u5c06 KMeans \u89c6\u4e3a\u5177\u6709 equal covariance per component (\u6bcf\u4e2a\u5206\u91cf\u76f8\u7b49\u534f\u65b9\u5dee)\u7684 Gaussian mixture model (\u9ad8\u65af\u6df7\u5408\u6a21\u578b)\u7684\u7279\u6b8a\u60c5\u51b5 \u5728 k-means \u805a\u7c7b\u4e4b\u524d\u8fd0\u884c\u8bf8\u5982 PCA \u4e4b\u7c7b\u7684 dimensionality reduction algorithm (\u964d\u7ef4\u7b97\u6cd5)\u53ef\u4ee5\u51cf\u8f7b\u8fd9\u4e2a\u95ee\u9898\u5e76\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6 K-means \u76f8\u5f53\u4e8e\u5177\u6709 small, all-equal, diagonal covariance matrix (\u5c0f\u7684\u5168\u5bf9\u79f0\u534f\u65b9\u5dee\u77e9\u9635)\u7684 expectation-maximization algorithm (\u671f\u671b\u6700\u5927\u5316\u7b97\u6cd5) AffinityPropagation AP\u805a\u7c7b\u662f\u901a\u8fc7\u5728\u6837\u672c\u5bf9\u4e4b\u95f4\u53d1\u9001\u6d88\u606f\u76f4\u5230\u6536\u655b\u6765\u521b\u5efa\u805a\u7c7b.\u7136\u540e\u4f7f\u7528\u5c11\u91cf\u793a\u4f8b\u6837\u672c\u4f5c\u4e3a\u805a\u7c7b\u4e2d\u5fc3\u6765\u63cf\u8ff0\u6570\u636e\u96c6, \u805a\u7c7b\u4e2d\u5fc3\u662f\u6570\u636e\u96c6\u4e2d\u6700\u80fd\u4ee3\u8868\u4e00\u7c7b\u6570\u636e\u7684\u6837\u672c.\u5728\u6837\u672c\u5bf9\u4e4b\u95f4\u53d1\u9001\u7684\u6d88\u606f\u8868\u793a\u4e00\u4e2a\u6837\u672c\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u6837\u672c\u7684\u793a\u4f8b\u6837\u672c\u7684 \u9002\u5408\u7a0b\u5ea6, \u9002\u5408\u7a0b\u5ea6\u503c\u5728\u6839\u636e\u901a\u4fe1\u7684\u53cd\u9988\u4e0d\u65ad\u66f4\u65b0.\u66f4\u65b0\u8fed\u4ee3\u76f4\u5230\u6536\u655b, \u5b8c\u6210\u805a\u7c7b\u4e2d\u5fc3\u7684\u9009\u53d6, \u56e0\u6b64\u4e5f\u7ed9\u51fa\u4e86\u6700\u7ec8\u805a\u7c7b Affinity Propagation \u53ef\u4ee5\u6839\u636e\u63d0\u4f9b\u7684\u6570\u636e\u51b3\u5b9a\u805a\u7c7b\u7684\u6570\u76ee AP\u805a\u7c7b\u7b97\u6cd5\u4e3b\u8981\u7684\u7f3a\u70b9\u662f\u7b97\u6cd5\u7684\u590d\u6742\u5ea6 MeanShift \u7b97\u6cd5\u65e8\u5728\u4e8e\u53d1\u73b0\u4e00\u4e2a\u6837\u672c\u5bc6\u5ea6\u5e73\u6ed1\u7684 blobs . \u5747\u503c\u6f02\u79fb\u7b97\u6cd5\u662f \u57fa\u4e8e\u8d28\u5fc3 \u7684\u7b97\u6cd5, \u901a\u8fc7\u66f4\u65b0\u8d28\u5fc3\u7684\u5019\u9009\u4f4d\u7f6e\u4e3a\u6240\u9009\u5b9a\u533a\u57df\u7684\u504f\u79fb\u5747\u503c. \u7136\u540e, \u8fd9\u4e9b\u5019\u9009\u8005\u5728\u540e\u5904\u7406\u9636\u6bb5\u88ab\u8fc7\u6ee4\u4ee5\u6d88\u9664\u8fd1\u4f3c\u91cd\u590d, \u4ece\u800c\u5f62\u6210\u6700\u7ec8\u8d28\u5fc3\u96c6\u5408, \u8be5\u7b97\u6cd5\u4e0d\u662f\u9ad8\u5ea6\u53ef\u6269\u5c55\u7684, \u56e0\u4e3a\u5728\u6267\u884c\u7b97\u6cd5\u671f\u95f4\u9700\u8981\u6267\u884c\u591a\u4e2a\u6700\u8fd1\u90bb\u641c\u7d22. \u8be5\u7b97\u6cd5\u4fdd\u8bc1\u6536\u655b, \u4f46\u662f\u5f53 \u8d28\u5fc3\u7684\u53d8\u5316\u8f83\u5c0f\u65f6, \u7b97\u6cd5\u5c06\u505c\u6b62\u8fed\u4ee3 SpectralClustering \u662f\u5728\u6837\u672c\u4e4b\u95f4\u8fdb\u884c\u4eb2\u548c\u529b\u77e9\u9635\u7684\u4f4e\u7ef4\u5ea6\u5d4c\u5165, \u5176\u5b9e\u662f\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u7684 KMeans. \u5982\u679c\u4eb2\u548c\u5ea6\u77e9\u9635\u7a00\u758f, \u5219\u8fd9\u662f\u975e\u5e38\u6709\u6548\u7684. SpectralClustering \u9700\u8981\u6307\u5b9a\u805a\u7c7b\u6570.\u8fd9\u4e2a\u7b97\u6cd5\u9002\u7528\u4e8e\u805a\u7c7b\u6570\u5c11\u65f6, \u5728\u805a\u7c7b\u6570\u591a\u662f\u4e0d\u5efa\u8bae\u4f7f\u7528 \u5728\u5b9e\u8df5\u4e2d, \u5f53\u5355\u4e2a\u805a\u7c7b\u7684\u7ed3\u6784\u662f\u9ad8\u5ea6\u975e\u51f8\u7684, \u6216\u8005\u5f53\u805a\u7c7b\u7684\u4e2d\u5fc3\u548c\u6269\u5c55\u7684\u5ea6\u91cf\u4e0d\u662f\u5b8c\u6574\u805a\u7c7b\u7684\u63cf\u8ff0\u65f6, \u8c31\u805a\u7c7b\u662f\u975e\u5e38\u6709\u7528\u7684 Hierarchical clustering \u662f\u4e00\u4e2a\u5e38\u7528\u7684\u805a\u7c7b\u7b97\u6cd5, \u5b83\u901a\u8fc7\u4e0d\u65ad\u7684\u5408\u5e76\u6216\u8005\u5206\u5272\u6765\u6784\u5efa\u805a\u7c7b. \u805a\u7c7b\u7684\u5c42\u6b21\u88ab\u8868\u793a\u6210\u6811.\u6811\u6839\u662f\u62e5\u6709\u6240\u6709\u6837\u672c\u7684\u552f\u4e00\u805a\u7c7b, \u53f6\u5b50\u662f\u4ec5\u6709\u4e00\u4e2a\u6837\u672c\u7684\u805a\u7c7b DBSCAN \u7b97\u6cd5\u5c06\u805a\u7c7b\u89c6\u4e3a\u88ab\u4f4e\u5bc6\u5ea6\u533a\u57df\u5206\u9694\u7684\u9ad8\u5bc6\u5ea6\u533a\u57df.\u7531\u4e8e\u8fd9\u4e2a\u76f8\u5f53\u666e\u904d\u7684\u89c2\u70b9, DBSCAN\u53d1\u73b0\u7684\u805a\u7c7b\u53ef\u4ee5\u662f\u4efb\u4f55\u5f62\u72b6\u7684, \u4e0e\u5047\u8bbe\u805a\u7c7b\u662f convex shaped \u7684 K-means \u76f8\u53cd DBSCAN \u7684\u6838\u5fc3\u6982\u5ff5\u662f core samples, \u662f\u6307\u4f4d\u4e8e\u9ad8\u5bc6\u5ea6\u533a\u57df\u7684\u6837\u672c. \u56e0\u6b64\u4e00\u4e2a\u805a\u7c7b\u662f\u4e00\u7ec4\u6838\u5fc3\u6837\u672c, \u6bcf\u4e2a\u6838\u5fc3\u6837\u672c\u5f7c\u6b64\u9760\u8fd1(\u901a\u8fc7\u4e00\u5b9a\u8ddd\u79bb\u5ea6\u91cf\u6d4b\u91cf) \u548c\u4e00\u7ec4\u63a5\u8fd1\u6838\u5fc3\u6837\u672c\u7684\u975e\u6838\u5fc3\u6837\u672c(\u4f46\u672c\u8eab\u4e0d\u662f\u6838\u5fc3\u6837\u672c) DBSCAN \u662f\u9012\u5f52\u7684 DBSCAN \u7b97\u6cd5\u662f\u5177\u6709\u786e\u5b9a\u6027\u7684, \u5f53\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u7ed9\u51fa\u76f8\u540c\u7684\u6570\u636e\u65f6\u603b\u662f\u5f62\u6210\u76f8\u540c\u7684\u805a\u7c7b. \u7136\u800c, \u5f53\u4ee5\u4e0d\u540c\u7684\u987a\u5e8f\u63d0\u4f9b\u6570\u636e\u65f6\u805a\u7c7b\u7684\u7ed3\u679c\u53ef\u80fd\u4e0d\u76f8\u540c The Birch \u4e3a\u63d0\u4f9b\u7684\u6570\u636e\u6784\u5efa\u4e00\u9897 Characteristic Feature Tree (CFT, \u805a\u7c7b\u7279\u5f81\u6811) Birch \u5728\u9ad8\u7ef4\u6570\u636e\u4e0a\u8868\u73b0\u4e0d\u597d.\u4e00\u6761\u7ecf\u9a8c\u6cd5\u5219, \u5982\u679c n_features \u5927\u4e8e20, \u901a\u5e38\u4f7f\u7528 MiniBatchKMeans \u66f4\u597d \u5982\u679c\u9700\u8981\u51cf\u5c11\u6570\u636e\u5b9e\u4f8b\u7684\u6570\u91cf, \u6216\u8005\u5982\u679c\u9700\u8981\u5927\u91cf\u7684\u5b50\u805a\u7c7b\u4f5c\u4e3a\u9884\u5904\u7406\u6b65\u9aa4\u6216\u8005\u5176\u4ed6, Birch \u6bd4 MiniBatchKMeans \u66f4\u6709\u7528 \u5ea6\u91cf\u805a\u7c7b\u7b97\u6cd5\u7684\u6027\u80fd\u4e0d\u662f\u7b80\u5355\u7684\u7edf\u8ba1\u9519\u8bef\u7684\u6570\u91cf\u6216\u8ba1\u7b97\u76d1\u7763\u5206\u7c7b\u7b97\u6cd5\u4e2d\u7684 precision (\u51c6\u786e\u7387)\u548c recall (\u53ec\u56de\u7387) Biclustering \u53ef\u4ee5\u4f7f\u7528 sklearn.cluster.bicluster \u6a21\u5757. Biclustering \u7b97\u6cd5\u5bf9\u6570\u636e\u77e9\u9635\u7684\u884c\u5217\u540c\u65f6\u8fdb\u884c\u805a\u7c7b. \u540c\u65f6\u5bf9\u884c\u5217\u8fdb\u884c\u805a\u7c7b\u79f0\u4e4b\u4e3a biclusters. \u6bcf\u4e00\u6b21\u805a\u7c7b\u90fd\u4f1a\u901a\u8fc7\u539f\u59cb\u6570\u636e\u77e9\u9635\u7684\u4e00\u4e9b\u5c5e\u6027\u786e\u5b9a\u4e00\u4e2a\u5b50\u77e9\u9635","title":"\u805a\u7c7b"},{"location":"\u673a\u5668\u5b66\u4e60/unsupervised/#_5","text":"\u53ef\u9009\u53c2\u6570 whiten=True \u4f7f\u5f97\u53ef\u4ee5\u5c06\u6570\u636e\u6295\u5f71\u5230\u5947\u5f02(singular)\u7a7a\u95f4\u4e0a, \u540c\u65f6\u5c06\u6bcf\u4e2a\u6210\u5206\u7f29\u653e\u5230\u5355\u4f4d\u65b9\u5dee PCA \u5bf9\u8c61\u975e\u5e38\u6709\u7528, \u4f46\u5bf9\u5927\u578b\u6570\u636e\u96c6\u6709\u4e00\u5b9a\u7684\u9650\u5236. \u6700\u5927\u7684\u9650\u5236\u662f PCA \u4ec5\u652f\u6301\u6279\u5904\u7406, \u8fd9\u610f\u5473\u7740\u6240\u6709\u8981\u5904\u7406\u7684\u6570\u636e\u5fc5\u987b\u9002\u5408\u4e3b\u5185\u5b58. IncrementalPCA \u5bf9\u8c61\u4f7f\u7528\u4e0d\u540c\u7684\u5904\u7406\u5f62\u5f0f\u4f7f\u4e4b\u5141\u8bb8\u90e8\u5206\u8ba1\u7b97, \u8fd9\u4e00\u5f62\u5f0f\u51e0\u4e4e\u548c PCA \u4ee5\u5c0f\u578b\u6279\u5904\u7406\u65b9\u5f0f\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u5b8c\u5168\u5339\u914d IncrementalPCA \u4ec5\u5b58\u50a8\u6210\u5206\u548c\u566a\u58f0\u65b9\u5dee\u7684\u4f30\u8ba1\u503c, \u5e76\u6309\u987a\u5e8f\u9012\u589e\u5730\u66f4\u65b0\u89e3\u91ca\u65b9\u5dee\u6bd4 KernelPCA \u662f PCA \u7684\u6269\u5c55, \u901a\u8fc7\u4f7f\u7528\u6838\u65b9\u6cd5\u5b9e\u73b0\u975e\u7ebf\u6027\u964d\u7ef4(dimensionality reduction)\u5b83\u5177\u6709\u8bb8\u591a\u5e94\u7528, \u5305\u62ec\u53bb\u566a, \u538b\u7f29\u548c\u7ed3\u6784\u5316\u9884\u6d4b( structured prediction ) (kernel dependency estimation(\u5185\u6838\u4f9d\u8d56\u4f30\u8ba1)). SparsePCA \u662f PCA \u7684\u4e00\u4e2a\u53d8\u4f53, \u76ee\u7684\u662f\u63d0\u53d6\u80fd\u6700\u597d\u5730\u91cd\u5efa\u6570\u636e\u7684\u7a00\u758f\u7ec4\u5206\u96c6\u5408 \u5c0f\u6279\u91cf\u7a00\u758f PCA ( MiniBatchSparsePCA ) \u662f\u4e00\u4e2a SparsePCA \u7684\u53d8\u79cd, \u5b83\u901f\u5ea6\u66f4\u5feb\u4f46\u51c6\u786e\u5ea6\u6709\u6240\u964d\u4f4e. \u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8fed\u4ee3\u6b21\u6570, \u901a\u8fc7\u8fed\u4ee3\u8be5\u7ec4\u7279\u5f81\u7684\u5c0f\u5757\u6765\u8fbe\u5230\u901f\u5ea6\u7684\u589e\u52a0 Principal component analysis(\u4e3b\u6210\u5206\u5206\u6790) (PCA) \u7684\u7f3a\u70b9\u5728\u4e8e, \u901a\u8fc7\u8be5\u65b9\u6cd5\u63d0\u53d6\u7684\u6210\u5206\u5177\u6709\u552f\u4e00\u7684\u5bc6\u5ea6\u8868\u8fbe\u5f0f, \u5373\u5f53\u8868\u793a\u4e3a\u539f\u59cb\u53d8\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\u65f6, \u5b83\u4eec\u5177\u6709\u975e\u96f6\u7cfb\u6570, \u4f7f\u4e4b\u96be\u4ee5\u89e3\u91ca. \u5728\u8bb8\u591a\u60c5\u51b5\u4e0b, \u771f\u6b63\u7684\u57fa\u7840\u7ec4\u4ef6\u53ef\u4ee5\u66f4\u81ea\u7136\u5730\u60f3\u8c61\u4e3a\u7a00\u758f\u5411\u91cf; \u4f8b\u5982\u5728\u9762\u90e8\u8bc6\u522b\u4e2d, \u6bcf\u4e2a\u7ec4\u4ef6\u53ef\u80fd\u81ea\u7136\u5730\u6620\u5c04\u5230\u9762\u90e8\u7684\u67d0\u4e2a\u90e8\u5206 TruncatedSVD \u5b9e\u73b0\u4e86\u4e00\u4e2a\u5947\u5f02\u503c\u5206\u89e3(SVD)\u7684\u53d8\u4f53, \u5b83\u53ea\u8ba1\u7b97 k \u4e2a\u6700\u5927\u7684\u5947\u5f02\u503c, \u5176\u4e2d k \u662f\u7528\u6237\u6307\u5b9a\u7684\u53c2\u6570 SparseCoder \u5bf9\u8c61\u662f\u4e00\u4e2a\u4f30\u8ba1\u5668 (estimator), \u53ef\u4ee5\u7528\u6765\u5c06\u4fe1\u53f7\u8f6c\u6362\u6210\u4e00\u4e2a\u56fa\u5b9a\u7684\u9884\u8ba1\u7b97\u7684\u8bcd\u5178\u5185\u539f\u5b50(atoms)\u7684\u7a00\u758f\u7ebf\u6027\u7ec4\u5408 \u8bcd\u5178\u5b66\u4e60( DictionaryLearning ) \u662f\u4e00\u4e2a\u77e9\u9635\u56e0\u5f0f\u5206\u89e3\u95ee\u9898, \u76f8\u5f53\u4e8e\u627e\u5230\u4e00\u4e2a\u5728\u62df\u5408\u6570\u636e\u7684\u7a00\u758f\u7f16\u7801\u4e2d\u8868\u73b0\u826f\u597d\u7684(\u901a\u5e38\u662f\u8fc7\u5b8c\u5907\u7684(overcomplete)\u8bcd\u5178 \u8bcd\u5178\u5b66\u4e60\u662f\u901a\u8fc7\u4ea4\u66ff\u66f4\u65b0\u7a00\u758f\u7f16\u7801\u6765\u89e3\u51b3\u7684\u4f18\u5316\u95ee\u9898 \u56e0\u5b50\u5206\u6790 \u65e0\u76d1\u7763\u5b66\u4e60\u4e0b\u7684\u964d\u7ef4 \u72ec\u7acb\u5206\u91cf\u5206\u6790\u5c06\u591a\u53d8\u91cf\u4fe1\u53f7\u5206\u89e3\u4e3a\u72ec\u7acb\u6027\u6700\u5f3a\u7684\u52a0\u6027\u5b50\u7ec4\u4ef6. ICA \u901a\u5e38\u4e0d\u7528\u4e8e\u964d\u4f4e\u7ef4\u5ea6, \u800c\u662f\u7528\u4e8e\u5206\u79bb\u53e0\u52a0\u4fe1\u53f7. \u7531\u4e8e ICA \u6a21\u578b\u4e0d\u5305\u62ec\u566a\u58f0\u9879, \u56e0\u6b64\u8981\u4f7f\u6a21\u578b\u6b63\u786e, \u5fc5\u987b\u4f7f\u7528\u767d\u5316. \u8fd9\u53ef\u4ee5\u5728\u5185\u90e8\u8c03\u8282\u767d\u5316\u53c2\u6570\u6216\u624b\u52a8\u4f7f\u7528 PCA \u7684\u4e00\u79cd\u53d8\u4f53 ICA \u901a\u5e38\u7528\u4e8e\u5206\u79bb\u6df7\u5408\u4fe1\u53f7 NMF \u662f\u5728\u6570\u636e\u548c\u5206\u91cf\u662f\u975e\u8d1f\u60c5\u51b5\u4e0b\u7684\u53e6\u4e00\u79cd\u964d\u7ef4\u65b9\u6cd5. \u5728\u6570\u636e\u77e9\u9635\u4e0d\u5305\u542b\u8d1f\u503c\u7684\u60c5\u51b5\u4e0b, \u53ef\u4ee5\u63d2\u5165 NMF \u800c\u4e0d\u662f PCA \u6216\u5176\u53d8\u4f53 NMF \u5b9e\u73b0\u4e86\u975e\u8d1f\u53cc\u5947\u5f02\u503c\u5206\u89e3\u65b9\u6cd5 \u9690 Dirichlet \u5206\u914d\u662f\u79bb\u6563\u6570\u636e\u96c6(\u5982\u6587\u672c\u8bed\u6599\u5e93)\u7684\u96c6\u5408\u7684\u751f\u6210\u6982\u7387\u6a21\u578b. \u5b83\u4e5f\u662f\u4e00\u4e2a\u4e3b\u9898\u6a21\u578b, \u7528\u4e8e\u4ece\u6587\u6863\u96c6\u5408\u4e2d\u53d1\u73b0\u62bd\u8c61\u4e3b\u9898 scikit-learn\u9879\u76ee\u63d0\u4f9b\u4e86\u4e00\u5957\u53ef\u7528\u4e8e\u65b0\u5947\u6216\u5f02\u5e38\u503c\u68c0\u6d4b\u7684\u673a\u5668\u5b66\u4e60\u5de5\u5177. \u8be5\u7b56\u7565\u662f\u4ee5\u65e0\u76d1\u7763\u7684\u65b9\u5f0f\u5b66\u4e60\u6570\u636e\u4e2d\u7684\u5bf9\u8c61\u6765\u5b9e\u73b0\u7684 \u5bc6\u5ea6\u4f30\u8ba1\u5728\u65e0\u76d1\u7763\u5b66\u4e60, \u7279\u5f81\u5de5\u7a0b\u548c\u6570\u636e\u5efa\u6a21\u4e4b\u95f4\u5212\u5206\u4e86\u754c\u7ebf. \u4e00\u4e9b\u6700\u6d41\u884c\u548c\u6700\u6709\u7528\u7684\u5bc6\u5ea6\u4f30\u8ba1\u65b9\u6cd5\u662f\u6df7\u5408\u6a21\u578b, \u5982\u9ad8\u65af\u6df7\u5408( sklearn.mixture.GaussianMixture ), \u548c\u57fa\u4e8e\u90bb\u8fd1\u7684\u65b9\u6cd5( sklearn.neighbors.KernelDensity ), \u5982\u6838\u5bc6\u5ea6\u4f30\u8ba1","title":"\u77e9\u9635\u5206\u89e3"},{"location":"\u6df1\u5ea6\u5b66\u4e60/CNN/","text":"","title":"CNN"},{"location":"\u6df1\u5ea6\u5b66\u4e60/RNN/","text":"","title":"RNN"},{"location":"\u6df1\u5ea6\u5b66\u4e60/tensorflow/","text":"TensorFlow \u57fa\u7840 TensorFlow \u4f7f\u7528\u56fe (graph) \u6765\u8868\u793a\u8ba1\u7b97\u4efb\u52a1. \u5728\u88ab\u79f0\u4e4b\u4e3a \u4f1a\u8bdd (Session) \u7684\u4e0a\u4e0b\u6587 (context) \u4e2d\u6267\u884c\u56fe. \u4f7f\u7528 tensor \u8868\u793a\u6570\u636e. \u901a\u8fc7 \u53d8\u91cf (Variable) \u7ef4\u62a4\u72b6\u6001. \u4f7f\u7528 feed \u548c fetch \u53ef\u4ee5\u4e3a\u4efb\u610f\u7684\u64cd\u4f5c(arbitrary operation) \u8d4b\u503c\u6216\u8005\u4ece\u5176\u4e2d\u83b7\u53d6\u6570\u636e \u6bcf\u4e2a Tensor \u662f\u4e00\u4e2a\u7c7b\u578b\u5316\u7684\u591a\u7ef4\u6570\u7ec4 \u5728 Python \u8bed\u8a00\u4e2d, \u8fd4\u56de\u7684 tensor \u662f numpy ndarray \u5bf9\u8c61 \u8ba1\u7b97\u56fe TensorFlow \u7a0b\u5e8f\u901a\u5e38\u88ab\u7ec4\u7ec7\u6210\u4e00\u4e2a\u6784\u5efa\u9636\u6bb5\u548c\u4e00\u4e2a\u6267\u884c\u9636\u6bb5. \u5728\u6784\u5efa\u9636\u6bb5, op \u7684\u6267\u884c\u6b65\u9aa4 \u88ab\u63cf\u8ff0\u6210\u4e00\u4e2a\u56fe. \u5728\u6267\u884c\u9636\u6bb5, \u4f7f\u7528\u4f1a\u8bdd\u6267\u884c\u6267\u884c\u56fe\u4e2d\u7684 op TensorFlow Python \u5e93\u6709\u4e00\u4e2a\u9ed8\u8ba4\u56fe (default graph), op \u6784\u9020\u5668\u53ef\u4ee5\u4e3a\u5176\u589e\u52a0\u8282\u70b9. \u8fd9\u4e2a\u9ed8\u8ba4\u56fe\u5bf9 \u8bb8\u591a\u7a0b\u5e8f\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u7528 Session \u5bf9\u8c61\u5728\u4f7f\u7528\u5b8c\u540e\u9700\u8981\u5173\u95ed\u4ee5\u91ca\u653e\u8d44\u6e90. \u9664\u4e86\u663e\u5f0f\u8c03\u7528 close \u5916, \u4e5f\u53ef\u4ee5\u4f7f\u7528 \"with\" \u4ee3\u7801\u5757 \u6765\u81ea\u52a8\u5b8c\u6210\u5173\u95ed\u52a8\u4f5c, \u6240\u4ee5 with \u7684\u65b9\u5f0f\u662f\u66f4\u52a0\u5408\u7406\u7684 sess.close() with tf.Session() as sess: pass with...Device \u8bed\u53e5\u7528\u6765\u6307\u6d3e\u7279\u5b9a\u7684 CPU \u6216 GPU \u6267\u884c\u64cd\u4f5c: with tf.Session() as sess: with tf.device(\"/gpu:1\"): \u76ee\u524d\u652f\u6301\u7684\u8bbe\u5907\u5305\u62ec: \"/cpu:0\" : \u673a\u5668\u7684 CPU. \"/gpu:0\" : \u673a\u5668\u7684\u7b2c\u4e00\u4e2a GPU, \u5982\u679c\u6709\u7684\u8bdd. \"/gpu:1\" : \u673a\u5668\u7684\u7b2c\u4e8c\u4e2a GPU, \u4ee5\u6b64\u7c7b\u63a8 \u4e3a\u4e86\u4fbf\u4e8e\u4f7f\u7528\u8bf8\u5982 IPython \u4e4b\u7c7b\u7684 Python \u4ea4\u4e92\u73af\u5883, \u53ef\u4ee5\u4f7f\u7528 InteractiveSession \u4ee3\u66ff Session \u7c7b , \u4f7f\u7528Tensor.eval() \u548c Operation.run() \u65b9\u6cd5\u4ee3\u66ff Session.run() . \u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u6301\u6709\u4f1a\u8bdd sess = tf.InteractiveSession() x = tf.Variable([1.0, 2.0]) a = tf.constant([3.0, 3.0]) # \u4f7f\u7528\u521d\u59cb\u5316\u5668 initializer op \u7684 run() \u65b9\u6cd5\u521d\u59cb\u5316 'x' x.initializer.run() # \u589e\u52a0\u4e00\u4e2a\u51cf\u6cd5 sub op, \u4ece 'x' \u51cf\u53bb 'a'. \u8fd0\u884c\u51cf\u6cd5 op, \u8f93\u51fa\u7ed3\u679c sub = tf.sub(x, a) print(sub.eval()) \u5728\u8c03\u7528 run() \u6267\u884c\u8868\u8fbe\u5f0f\u4e4b\u524d, \u5e76\u4e0d\u4f1a\u771f\u6b63\u6267\u884c\u64cd\u4f5c fetch \u4e3a\u4e86\u53d6\u56de\u64cd\u4f5c\u7684\u8f93\u51fa\u5185\u5bb9, \u53ef\u4ee5\u5728\u4f7f\u7528 Session \u5bf9\u8c61\u7684 run() \u8c03\u7528 \u6267\u884c\u56fe\u65f6, \u4f20\u5165\u4e00\u4e9b tensor, \u8fd9\u4e9b tensor \u4f1a\u5e2e\u52a9\u4f60\u53d6\u56de\u7ed3\u679c with tf.Session() as sess: result = sess.run([mul, intermed]) feed TensorFlow \u8fd8\u63d0\u4f9b\u4e86 feed \u673a\u5236, \u8be5\u673a\u5236 \u53ef\u4ee5\u4e34\u65f6\u66ff\u4ee3\u56fe\u4e2d\u7684\u4efb\u610f\u64cd\u4f5c\u4e2d\u7684 tensor \u53ef\u4ee5\u5bf9\u56fe\u4e2d\u4efb\u4f55\u64cd\u4f5c\u63d0\u4ea4\u8865\u4e01, \u76f4\u63a5\u63d2\u5165\u4e00\u4e2a tensor feed \u53ea\u5728\u8c03\u7528\u5b83\u7684\u65b9\u6cd5\u5185\u6709\u6548, \u65b9\u6cd5\u7ed3\u675f, feed \u5c31\u4f1a\u6d88\u5931 \u6700\u5e38\u89c1\u7684\u7528\u4f8b\u662f\u5c06\u67d0\u4e9b\u7279\u6b8a\u7684\u64cd\u4f5c\u6307\u5b9a\u4e3a \"feed\" \u64cd\u4f5c, \u6807\u8bb0\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 tf.placeholder() \u4e3a\u8fd9\u4e9b\u64cd\u4f5c\u521b\u5efa\u5360\u4f4d\u7b26 input1 = tf.placeholder(tf.types.float32) input2 = tf.placeholder(tf.types.float32) output = tf.mul(input1, input2) with tf.Session() as sess: print sess.run([output], feed_dict={input1:[7.], input2:[2.]}) softmax\u6a21\u578b\u53ef\u4ee5\u7528\u6765\u7ed9\u4e0d\u540c\u7684\u5bf9\u8c61\u5206\u914d\u6982\u7387\u3002\u5373\u4f7f\u5728\u4e4b\u540e\uff0c\u6211\u4eec\u8bad\u7ec3\u66f4\u52a0\u7cbe\u7ec6\u7684\u6a21\u578b\u65f6\uff0c\u6700\u540e\u4e00\u6b65\u4e5f\u9700\u8981\u7528softmax\u6765\u5206\u914d\u6982\u7387 softmax\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u6fc0\u52b1\uff08activation\uff09\u51fd\u6570\u6216\u8005\u94fe\u63a5\uff08link\uff09\u51fd\u6570\uff0c\u628a\u6211\u4eec\u5b9a\u4e49\u7684\u7ebf\u6027\u51fd\u6570\u7684\u8f93\u51fa\u8f6c\u6362\u6210\u6211\u4eec\u60f3\u8981\u7684\u683c\u5f0f softmax\uff1a\u5f52\u4e00\u5316 exp(x) exp(x) \\text{softmax}(x)=\\text{normalize}(\\exp(x)) \\text{softmax}(x)=\\text{normalize}(\\exp(x)) \\text{softmax}(x)_i=\\frac{\\exp(x_i)}{\\sum_j\\exp()x_i} \\text{softmax}(x)_i=\\frac{\\exp(x_i)}{\\sum_j\\exp()x_i} \u4ea4\u53c9\u71b5(\u4fe1\u606f\u8bba, \u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u662f\u6d4b\u91cf\u4e24\u4e2a\u6982\u7387\u4e4b\u95f4\u8ddd\u79bb\u7684\u4e00\u4e2a\u91cf) (y' \u662f\u9884\u6d4b\u503c, y \u662f\u771f\u5b9e\u503c) H_{y}(y')\\sum_i y_{i}\\log(y'_i) H_{y}(y')\\sum_i y_{i}\\log(y'_i) tf.argmax \u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u51fd\u6570\uff0c\u5b83\u80fd\u7ed9\u51fa\u67d0\u4e2atensor\u5bf9\u8c61\u5728\u67d0\u4e00\u7ef4\u4e0a\u7684\u5176\u6570\u636e\u6700\u5927\u503c\u6240\u5728\u7684\u7d22\u5f15\u503c \u4f7f\u7528\u4e86\u5360\u4f4d\u7b26\u7684 tensor \u8ba1\u7b97\u7684\u65f6\u5019\u5fc5\u987b\u8981 feed \u53ea\u5728feed \u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528\u771f\u5b9e\u503c\uff0c\u5176\u4ed6\u7684\u65f6\u5019\u90fd\u8981\u4f7f\u7528 \u5360\u4f4d\u7b26\u4ee3\u66ff \u6d89\u53ca\u5230\u5360\u4f4d\u7b26\u7684\u65f6\u5019\u624d\u9700\u8981 feed \u53d8\u91cf \u53ea\u9700\u8981 run \u5373\u53ef\uff0c\u4e5f\u7ee7\u81ea\u52a8\u5fae\u5206\u90e8\u5206","title":"TensorFlow"},{"location":"\u6df1\u5ea6\u5b66\u4e60/tensorflow/#tensorflow","text":"TensorFlow \u4f7f\u7528\u56fe (graph) \u6765\u8868\u793a\u8ba1\u7b97\u4efb\u52a1. \u5728\u88ab\u79f0\u4e4b\u4e3a \u4f1a\u8bdd (Session) \u7684\u4e0a\u4e0b\u6587 (context) \u4e2d\u6267\u884c\u56fe. \u4f7f\u7528 tensor \u8868\u793a\u6570\u636e. \u901a\u8fc7 \u53d8\u91cf (Variable) \u7ef4\u62a4\u72b6\u6001. \u4f7f\u7528 feed \u548c fetch \u53ef\u4ee5\u4e3a\u4efb\u610f\u7684\u64cd\u4f5c(arbitrary operation) \u8d4b\u503c\u6216\u8005\u4ece\u5176\u4e2d\u83b7\u53d6\u6570\u636e \u6bcf\u4e2a Tensor \u662f\u4e00\u4e2a\u7c7b\u578b\u5316\u7684\u591a\u7ef4\u6570\u7ec4 \u5728 Python \u8bed\u8a00\u4e2d, \u8fd4\u56de\u7684 tensor \u662f numpy ndarray \u5bf9\u8c61","title":"TensorFlow \u57fa\u7840"},{"location":"\u6df1\u5ea6\u5b66\u4e60/tensorflow/#_1","text":"TensorFlow \u7a0b\u5e8f\u901a\u5e38\u88ab\u7ec4\u7ec7\u6210\u4e00\u4e2a\u6784\u5efa\u9636\u6bb5\u548c\u4e00\u4e2a\u6267\u884c\u9636\u6bb5. \u5728\u6784\u5efa\u9636\u6bb5, op \u7684\u6267\u884c\u6b65\u9aa4 \u88ab\u63cf\u8ff0\u6210\u4e00\u4e2a\u56fe. \u5728\u6267\u884c\u9636\u6bb5, \u4f7f\u7528\u4f1a\u8bdd\u6267\u884c\u6267\u884c\u56fe\u4e2d\u7684 op TensorFlow Python \u5e93\u6709\u4e00\u4e2a\u9ed8\u8ba4\u56fe (default graph), op \u6784\u9020\u5668\u53ef\u4ee5\u4e3a\u5176\u589e\u52a0\u8282\u70b9. \u8fd9\u4e2a\u9ed8\u8ba4\u56fe\u5bf9 \u8bb8\u591a\u7a0b\u5e8f\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u7528 Session \u5bf9\u8c61\u5728\u4f7f\u7528\u5b8c\u540e\u9700\u8981\u5173\u95ed\u4ee5\u91ca\u653e\u8d44\u6e90. \u9664\u4e86\u663e\u5f0f\u8c03\u7528 close \u5916, \u4e5f\u53ef\u4ee5\u4f7f\u7528 \"with\" \u4ee3\u7801\u5757 \u6765\u81ea\u52a8\u5b8c\u6210\u5173\u95ed\u52a8\u4f5c, \u6240\u4ee5 with \u7684\u65b9\u5f0f\u662f\u66f4\u52a0\u5408\u7406\u7684 sess.close() with tf.Session() as sess: pass with...Device \u8bed\u53e5\u7528\u6765\u6307\u6d3e\u7279\u5b9a\u7684 CPU \u6216 GPU \u6267\u884c\u64cd\u4f5c: with tf.Session() as sess: with tf.device(\"/gpu:1\"): \u76ee\u524d\u652f\u6301\u7684\u8bbe\u5907\u5305\u62ec: \"/cpu:0\" : \u673a\u5668\u7684 CPU. \"/gpu:0\" : \u673a\u5668\u7684\u7b2c\u4e00\u4e2a GPU, \u5982\u679c\u6709\u7684\u8bdd. \"/gpu:1\" : \u673a\u5668\u7684\u7b2c\u4e8c\u4e2a GPU, \u4ee5\u6b64\u7c7b\u63a8 \u4e3a\u4e86\u4fbf\u4e8e\u4f7f\u7528\u8bf8\u5982 IPython \u4e4b\u7c7b\u7684 Python \u4ea4\u4e92\u73af\u5883, \u53ef\u4ee5\u4f7f\u7528 InteractiveSession \u4ee3\u66ff Session \u7c7b , \u4f7f\u7528Tensor.eval() \u548c Operation.run() \u65b9\u6cd5\u4ee3\u66ff Session.run() . \u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u6301\u6709\u4f1a\u8bdd sess = tf.InteractiveSession() x = tf.Variable([1.0, 2.0]) a = tf.constant([3.0, 3.0]) # \u4f7f\u7528\u521d\u59cb\u5316\u5668 initializer op \u7684 run() \u65b9\u6cd5\u521d\u59cb\u5316 'x' x.initializer.run() # \u589e\u52a0\u4e00\u4e2a\u51cf\u6cd5 sub op, \u4ece 'x' \u51cf\u53bb 'a'. \u8fd0\u884c\u51cf\u6cd5 op, \u8f93\u51fa\u7ed3\u679c sub = tf.sub(x, a) print(sub.eval()) \u5728\u8c03\u7528 run() \u6267\u884c\u8868\u8fbe\u5f0f\u4e4b\u524d, \u5e76\u4e0d\u4f1a\u771f\u6b63\u6267\u884c\u64cd\u4f5c","title":"\u8ba1\u7b97\u56fe"},{"location":"\u6df1\u5ea6\u5b66\u4e60/tensorflow/#fetch","text":"\u4e3a\u4e86\u53d6\u56de\u64cd\u4f5c\u7684\u8f93\u51fa\u5185\u5bb9, \u53ef\u4ee5\u5728\u4f7f\u7528 Session \u5bf9\u8c61\u7684 run() \u8c03\u7528 \u6267\u884c\u56fe\u65f6, \u4f20\u5165\u4e00\u4e9b tensor, \u8fd9\u4e9b tensor \u4f1a\u5e2e\u52a9\u4f60\u53d6\u56de\u7ed3\u679c with tf.Session() as sess: result = sess.run([mul, intermed])","title":"fetch"},{"location":"\u6df1\u5ea6\u5b66\u4e60/tensorflow/#feed","text":"TensorFlow \u8fd8\u63d0\u4f9b\u4e86 feed \u673a\u5236, \u8be5\u673a\u5236 \u53ef\u4ee5\u4e34\u65f6\u66ff\u4ee3\u56fe\u4e2d\u7684\u4efb\u610f\u64cd\u4f5c\u4e2d\u7684 tensor \u53ef\u4ee5\u5bf9\u56fe\u4e2d\u4efb\u4f55\u64cd\u4f5c\u63d0\u4ea4\u8865\u4e01, \u76f4\u63a5\u63d2\u5165\u4e00\u4e2a tensor feed \u53ea\u5728\u8c03\u7528\u5b83\u7684\u65b9\u6cd5\u5185\u6709\u6548, \u65b9\u6cd5\u7ed3\u675f, feed \u5c31\u4f1a\u6d88\u5931 \u6700\u5e38\u89c1\u7684\u7528\u4f8b\u662f\u5c06\u67d0\u4e9b\u7279\u6b8a\u7684\u64cd\u4f5c\u6307\u5b9a\u4e3a \"feed\" \u64cd\u4f5c, \u6807\u8bb0\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 tf.placeholder() \u4e3a\u8fd9\u4e9b\u64cd\u4f5c\u521b\u5efa\u5360\u4f4d\u7b26 input1 = tf.placeholder(tf.types.float32) input2 = tf.placeholder(tf.types.float32) output = tf.mul(input1, input2) with tf.Session() as sess: print sess.run([output], feed_dict={input1:[7.], input2:[2.]}) softmax\u6a21\u578b\u53ef\u4ee5\u7528\u6765\u7ed9\u4e0d\u540c\u7684\u5bf9\u8c61\u5206\u914d\u6982\u7387\u3002\u5373\u4f7f\u5728\u4e4b\u540e\uff0c\u6211\u4eec\u8bad\u7ec3\u66f4\u52a0\u7cbe\u7ec6\u7684\u6a21\u578b\u65f6\uff0c\u6700\u540e\u4e00\u6b65\u4e5f\u9700\u8981\u7528softmax\u6765\u5206\u914d\u6982\u7387 softmax\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u6fc0\u52b1\uff08activation\uff09\u51fd\u6570\u6216\u8005\u94fe\u63a5\uff08link\uff09\u51fd\u6570\uff0c\u628a\u6211\u4eec\u5b9a\u4e49\u7684\u7ebf\u6027\u51fd\u6570\u7684\u8f93\u51fa\u8f6c\u6362\u6210\u6211\u4eec\u60f3\u8981\u7684\u683c\u5f0f softmax\uff1a\u5f52\u4e00\u5316 exp(x) exp(x) \\text{softmax}(x)=\\text{normalize}(\\exp(x)) \\text{softmax}(x)=\\text{normalize}(\\exp(x)) \\text{softmax}(x)_i=\\frac{\\exp(x_i)}{\\sum_j\\exp()x_i} \\text{softmax}(x)_i=\\frac{\\exp(x_i)}{\\sum_j\\exp()x_i} \u4ea4\u53c9\u71b5(\u4fe1\u606f\u8bba, \u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u662f\u6d4b\u91cf\u4e24\u4e2a\u6982\u7387\u4e4b\u95f4\u8ddd\u79bb\u7684\u4e00\u4e2a\u91cf) (y' \u662f\u9884\u6d4b\u503c, y \u662f\u771f\u5b9e\u503c) H_{y}(y')\\sum_i y_{i}\\log(y'_i) H_{y}(y')\\sum_i y_{i}\\log(y'_i) tf.argmax \u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u51fd\u6570\uff0c\u5b83\u80fd\u7ed9\u51fa\u67d0\u4e2atensor\u5bf9\u8c61\u5728\u67d0\u4e00\u7ef4\u4e0a\u7684\u5176\u6570\u636e\u6700\u5927\u503c\u6240\u5728\u7684\u7d22\u5f15\u503c \u4f7f\u7528\u4e86\u5360\u4f4d\u7b26\u7684 tensor \u8ba1\u7b97\u7684\u65f6\u5019\u5fc5\u987b\u8981 feed \u53ea\u5728feed \u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528\u771f\u5b9e\u503c\uff0c\u5176\u4ed6\u7684\u65f6\u5019\u90fd\u8981\u4f7f\u7528 \u5360\u4f4d\u7b26\u4ee3\u66ff \u6d89\u53ca\u5230\u5360\u4f4d\u7b26\u7684\u65f6\u5019\u624d\u9700\u8981 feed \u53d8\u91cf \u53ea\u9700\u8981 run \u5373\u53ef\uff0c\u4e5f\u7ee7\u81ea\u52a8\u5fae\u5206\u90e8\u5206","title":"feed"}]}